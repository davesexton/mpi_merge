<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/11/2016 4:48:33 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NCOH274"
  DTS:CreatorName="MPADGLOBAL\davesexton"
  DTS:DTSID="{6519C905-40EE-4530-87BB-E22873E843DF}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.2430.0"
  DTS:LocaleID="2057"
  DTS:ObjectName="candidate_matching"
  DTS:PackageType="5"
  DTS:VersionBuild="125"
  DTS:VersionGUID="{39D2B004-B672-4F39-9B34-DE4556257A73}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[source]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{CA099C18-4884-47C3-BA4F-335965B85796}"
      DTS:ObjectName="source">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Retain="True"
          DTS:ConnectionString="Data Source=UKA-VL-MSQLS-40\PAGEREPORTING;Initial Catalog=CRMstaging;Integrated Security=True;MultipleActiveResultSets=True;Application Name=SSIS-loader-{CA099C18-4884-47C3-BA4F-335965B85796}UK-B-SQL-114.P7MPUK;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[target]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{DF2B02C5-883B-4BAA-B3D9-17A96036ABE2}"
      DTS:ObjectName="target">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Retain="True"
          DTS:ConnectionString="Data Source=UKA-VL-MSQLS-40\PAGEREPORTING;Initial Catalog=tempdb;Integrated Security=True;Application Name=SSIS-Package-{DF2B02C5-883B-4BAA-B3D9-17A96036ABE2}localhost.un_merge;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3D29772D-E956-4005-AC57-46C9472E5632}"
      DTS:ObjectName="country">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">UK</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Calculate genders"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{19F8D54A-4037-4054-8EA1-620481C2BDC6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Calculate genders"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DF2B02C5-883B-4BAA-B3D9-17A96036ABE2}"
          SQLTask:SqlStatementSource="WITH names AS (&#xA;SELECT DISTINCT&#xA;  match_first_name &#xA;FROM ##uk_match_candidate&#xA;WHERE LEN(match_first_name) &gt; 3 &#xA;  AND gender IS NULL&#xA;), genders AS (&#xA;SELECT &#xA;  match_first_name&#xA;  ,CASE WHEN SUM(CASE gender WHEN 'M' THEN 1 ELSE 0 END) &gt; &#xA;             SUM(CASE gender WHEN 'F' THEN 1 ELSE 0 END)&#xA;        THEN 'M'&#xA;        ELSE 'F'&#xA;        END AS gender&#xA;FROM ##uk_match_candidate&#xA;WHERE match_first_name IN(SELECT match_first_name FROM names)&#xA;  AND gender IS NOT NULL &#xA;GROUP BY&#xA;  match_first_name&#xA;HAVING COUNT(*) &gt; 20)&#xA;UPDATE c&#xA;SET gender = g.gender&#xA;FROM ##uk_match_candidate c&#xA;  INNER JOIN genders g ON c.match_first_name = g.match_first_name" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{14BAB4F8-1CEB-4C65-B9F2-01199B501012}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CA099C18-4884-47C3-BA4F-335965B85796}"
          SQLTask:SqlStatementSource="IF OBJECT_ID('tempdb..##uk_match_candidate') IS NOT NULL&#xA;  DROP TABLE ##uk_match_candidate&#xA;&#xA;IF OBJECT_ID('tempdb..##uk_match_candidate_data') IS NOT NULL&#xA;  DROP TABLE ##uk_match_candidate_data&#xA;&#xA;CREATE TABLE ##uk_match_candidate (&#xA;  person_ref INT&#xA;  ,name VARCHAR(255)&#xA;  ,match_first_name VARCHAR(255)&#xA;  ,match_last_name VARCHAR(255)&#xA;  ,match_name VARCHAR(255)&#xA;  ,gender VARCHAR(255)&#xA;)&#xA;&#xA;CREATE TABLE ##uk_match_candidate_data (&#xA;  id int IDENTITY(1,1)&#xA;  ,ref INT&#xA;  ,match_text VARCHAR(255)&#xA;  ,match_code INT&#xA;  ,match_description VARCHAR(255)&#xA;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load candidates"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:DelayValidation="True"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{6A268419-C05C-4839-9EB6-C0687475F795}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load candidates"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load candidates\De-noise text"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="De-noise text"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text.RegularExpressions;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        String matchname = Regex.Replace(Row.matchname, @"[^A-Z ]", "");
        String[] names = Regex.Split(matchname, @"\s+");
        Array.Sort(names);
        Row.matchname = String.Join("", names);
        Row.matchfirstname = Regex.Replace(Row.matchfirstname, @"[^A-Z]", "");
        Row.matchlastname = Regex.Replace(Row.matchlastname, @"[^A-Z]", "");

        if (Row.gender_IsNull && !Row.title_IsNull)
        {
            if (Regex.Match(Row.title, @"\b(?:MR|SIR|HERR)\b").Success)
                Row.gender = "M";

            if (Regex.Match(Row.title, @"\b(?:MS|MIS|MRS|LADY)\b").Success)
                Row.gender = "F";
        }

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String matchfirstname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool matchfirstname_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String matchlastname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool matchlastname_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String matchname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool matchname_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String gender
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool gender_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String title
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool title_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9b7d7d2e1e72492c9d2cd6f496d6ca38.Properties.Settings.get_Default():SC_9b7d7d2e1e72492c9d2cd6f496d6ca38.Properties.Sett" +
    "ings")]

namespace SC_9b7d7d2e1e72492c9d2cd6f496d6ca38.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_9b7d7d2e1e72492c9d2cd6f496d6ca38.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1ffdd905-c4e9-4e71-985f-bf4f1061f643}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_9b7d7d2e1e72492c9d2cd6f496d6ca38</RootNamespace>
    <AssemblyName>SC_9b7d7d2e1e72492c9d2cd6f496d6ca38</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_9b7d7d2e1e72492c9d2cd6f496d6ca38" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_9b7d7d2e1e72492c9d2cd6f496d6ca38</msb:CodeName>
		<msb:DisplayName>SC_9b7d7d2e1e72492c9d2cd6f496d6ca38</msb:DisplayName>
		<msb:ProjectId>{60626635-C659-49AD-A1BE-DD96795BBC20}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_9b7d7d2e1e72492c9d2cd6f496d6ca38.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_9b7d7d2e1e72492c9d2cd6f496d6ca38")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Michael Page International PLC")]
[assembly: AssemblyProduct("SC_9b7d7d2e1e72492c9d2cd6f496d6ca38")]
[assembly: AssemblyCopyright("Copyright @ Michael Page International PLC 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9b7d7d2e1e72492c9d2cd6f496d6ca38.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9b7d7d2e1e72492c9d2cd6f496d6ca38.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9b7d7d2e1e72492c9d2cd6f496d6ca38.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_9b7d7d2e1e72492c9d2cd6f496d6ca38.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_9b7d7d2e1e72492c9d2cd6f496d6ca38.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_9b7d7d2e1e72492c9d2cd6f496d6ca38.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJi7DFcAAAAAAAAAAOAAAiELAQsAABoAAAAIAAAAAAAAPjgA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOw3AABPAAAAAEAAAKgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARBgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAKgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
OAAAAAAAAEgAAAACAAUAECQAANwTAAABAAAAAAAAAFgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMeAAAGfQEAAAQCAnMfAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDbxwAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioAABMwBADEAAAAAQAAEQNvEgAABnIRAABwciEAAHAoEwAACgoGciMAAHAo
FAAACgsHKAEAACsDciEAAHAHKBYAAApvEwAABgMDbwoAAAZyKwAAcHIhAABwKBMAAApvCwAABgMD
bw4AAAZyKwAAcHIhAABwKBMAAApvDwAABgNvGAAABixMA28bAAAGLUQDbxoAAAZyOQAAcCgXAAAK
bxgAAAosCwNyYQAAcG8XAAAGA28aAAAGcmUAAHAoFwAACm8YAAAKLAsDcpUAAHBvFwAABioeAigB
AAAGKioCAwQFKBkAAAoqUgJ7GgAACgJ7GwAAChaUbxwAAAoqJgIWAygdAAAKKiICFigeAAAKKloD
LAgCFigfAAAKKnKZAABwcyAAAAp6UgJ7GgAACgJ7GwAACheUbxwAAAoqJgIXAygdAAAKKiICFyge
AAAKKloDLAgCFygfAAAKKnKZAABwcyAAAAp6UgJ7GgAACgJ7GwAAChiUbxwAAAoqJgIYAygdAAAK
KiICGCgeAAAKKloDLAgCGCgfAAAKKnKZAABwcyAAAAp6UgJ7GgAACgJ7GwAAChmUbxwAAAoqJgIZ
AygdAAAKKiICGSgeAAAKKloDLAgCGSgfAAAKKnKZAABwcyAAAAp6UgJ7GgAACgJ7GwAAChqUbxwA
AAoqIgIaKB4AAAoqHgIoIQAACioeAigiAAAKKjoCKCMAAAoCA30DAAAEKjoCKCMAAAoCA30EAAAE
Kh4CKCMAAAoqABMwAgAtAAAAAgAAEX4FAAAELSByNgEAcNAHAAACKCUAAApvJgAACnMnAAAKCgaA
BQAABH4FAAAEKhp+BgAABCoeAoAGAAAEKhp+BwAABCoucyUAAAaABwAABCoeAigqAAAKKgAAAAAA
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABAHAAAjfgAA
fAcAAJgIAAAjU3RyaW5ncwAAAAAUEAAAqAEAACNVUwC8EQAAEAAAACNHVUlEAAAAzBEAABACAAAj
QmxvYgAAAAAAAAACAAABVxWiAQkJAAAA+iUzABYAAAEAAAAjAAAACAAAAAcAAAAmAAAAFQAAACoA
AAAPAAAAAgAAAAMAAAANAAAAFgAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDuAM0ABgD+
AM0ACgAbARQBDgA3ASIBEgB2Ac0ABgCFAc0ACgDtA9wDCgAeBAkECgD3BN0ECgAiBRAFCgA5BRAF
CgBWBRAFCgB1BRAFCgCOBRAFCgCnBRAFCgDCBRAFCgDdBRAFCgD2BRAFCgAvBg8GCgBPBg8GCgCR
BhQBCgCYBhQBBgDBBs0ADgAHB+gGCgAbBxQBDgArB+gGDgAxB+gGCgBlBxQBCgCSB38HCgCvBxQB
CgC0BxQBCgDYBxAFDgAECO4HDgAdCO4HCgAyCA8GAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQAB
AAEAEABAAAAACAADAAUAAQAQAEsAAAAJAAMACQABABAAWAAAAA0AAwAeAAEAEABkAAAADQAEAB8A
AAAQAG4AeAANAAUAIAAAARAApwB4ABEABwAkAAYAWAATAAYAZAAXAAEAzANTAAEAzANTABEA/QNd
ABEAKgRhABEAbgR/AFAgAAAAAIYYTwEbAAEAcCAAAAAAxgCTAR8AAQCVIAAAAADGAaABKQAFAKgg
AAAAAMYBtAEpAAYAqiAAAAAAxgDLARsABwCyIAAAAADGANYBGwAHALwgAAAAAMYAtAEpAAcAjCEA
AAAAhhhPARsACACUIQAAAACGGE8BLwAIAJ8hAAAAAIYI4gE5AAsAtCEAAAAAhgj1AT0ACwC+IQAA
AACGCAgCQgAMAMchAAAAAIYIIgJGAAwA3iEAAAAAhgg8AjkADQDzIQAAAACGCE4CPQANAP0hAAAA
AIYIYAJCAA4ABiIAAAAAhgh5AkYADgAdIgAAAACGCJICOQAPADIiAAAAAIYIoAI9AA8APCIAAAAA
hgiuAkIAEABFIgAAAACGCMMCRgAQAFwiAAAAAIYI2AI5ABEAcSIAAAAAhgjjAj0AEQB7IgAAAACG
CO4CQgASAIQiAAAAAIYIAANGABIAmyIAAAAAhggSAzkAEwCwIgAAAACGCBwDQgATALkiAAAAAIYA
LQNCABMAwSIAAAAAhgA1A0IAEwDJIgAAAACGGE8BVwATANgiAAAAAIYYTwFXABQA5yIAAAAAgxhP
ARsAFQDwIgAAAACTCDoEZQAVACkjAAAAAJMITgRqABUAMCMAAAAAkwhaBG8AFQA4IwAAAACWCH4E
gwAWAEsjAAAAAIYYTwEbABYAPyMAAAAAkRhNCBQBFgAAAAEAkgQAAAIAmgQAAAMApAQAAAQAqwQA
AAEApAQAAAEAtQQAAAEAtQQAAAEApAQAAAIAuQQAAAMAqwQAAAEAzQQAAAEAzQQAAAEAzQQAAAEA
zQQAAAEAzQQAAAEAzQQAAAEAzQQAAAEAzQQAAAEA0wQAAAEA0wQAAAEAzQRJAE8BPQBRAE8BPQBZ
AE8BPQBhAE8BPQBpAE8BPQBxAE8BPQB5AE8BPQCBAE8BPQCJAE8BPQCRAE8BPQCZAE8BjQChAE8B
GwAJAE8BGwCpAKkGkgAJALAGmQC5AE8BGwAJAMsBGwAJANYBGwDBAA0HpADBABUHqwDJACEHsgCp
ACYHvgDBACsHxQDZADcHQgARAE8BLwARAKQE0gARALkE1gApAEMH2gARAE0H3wARAFYH5QARAF0H
jQDhAE8BPQARAC0DQgARADUDQgAZAE8BGwDpAE8BGwDxAMYH6gDxAOEH8QA5AE8B9wAJAU8BBAEZ
AU8BGwAhAE8BGwAuABsAiQEuAGMA8QEuAAsAGAEuABMAYAEuACMAiQEuACsAjwEuADMAYAEuADsA
swEuAEMAiQEuAFsA6AFjAIMAnwDhAEsBnwDjACMBnwBpAUMBCwGJAUMBCwHMAP8ABAABAAcACwAI
AA0AAABBA0sAAABQA08AAABmA0sAAAB0A08AAACJA0sAAACTA08AAACkA0sAAACrA08AAAC5A0sA
AAC/A08AAADtA3UAAABmBHoAAACKBIgAAgAKAAMAAQALAAMAAgAMAAUAAQANAAUAAgAOAAcAAQAP
AAcAAQARAAkAAgAQAAkAAgASAAsAAQATAAsAAgAUAA0AAQAVAA0AAQAXAA8AAgAWAA8AAgAYABEA
AQAZABEAAgAaABMAAgAbABUAAgAhABcAAgAiABkAAQAjABkAAgAkABsABIAAAAEAAAA6F4xAAAAA
AAAAbQYAAAwAAAAAAAAAAAAAAAEAsAAAAAAABAAAAAAAAAAAAAAACgALAQAAAAAEAAAAAAAAAAAA
AAAKABQBAAAAAAwAAAAAAAAAAAAAAAEAVQEAAAAAAAAAAAEAAABUCAAAKwC6AAAAADxNb2R1bGU+
AFNDXzliN2Q3ZDJlMWU3MjQ5MmM5ZDJjZDZmNDk2ZDZjYTM4LmRsbABVc2VyQ29tcG9uZW50AFNj
cmlwdE1haW4ASW5wdXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0Nf
OWI3ZDdkMmUxZTcyNDkyYzlkMmNkNmY0OTZkNmNhMzguUHJvcGVydGllcwBTZXR0aW5ncwBNaWNy
b3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5l
AFNjcmlwdENvbXBvbmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0
ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3NvZnQu
U3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nl
c3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUHJlRXhl
Y3V0ZQBQb3N0RXhlY3V0ZQBnZXRfbWF0Y2hmaXJzdG5hbWUAc2V0X21hdGNoZmlyc3RuYW1lAGdl
dF9tYXRjaGZpcnN0bmFtZV9Jc051bGwAc2V0X21hdGNoZmlyc3RuYW1lX0lzTnVsbABnZXRfbWF0
Y2hsYXN0bmFtZQBzZXRfbWF0Y2hsYXN0bmFtZQBnZXRfbWF0Y2hsYXN0bmFtZV9Jc051bGwAc2V0
X21hdGNobGFzdG5hbWVfSXNOdWxsAGdldF9tYXRjaG5hbWUAc2V0X21hdGNobmFtZQBnZXRfbWF0
Y2huYW1lX0lzTnVsbABzZXRfbWF0Y2huYW1lX0lzTnVsbABnZXRfZ2VuZGVyAHNldF9nZW5kZXIA
Z2V0X2dlbmRlcl9Jc051bGwAc2V0X2dlbmRlcl9Jc051bGwAZ2V0X3RpdGxlAGdldF90aXRsZV9J
c051bGwATmV4dFJvdwBFbmRPZlJvd3NldABtYXRjaGZpcnN0bmFtZQBtYXRjaGZpcnN0bmFtZV9J
c051bGwAbWF0Y2hsYXN0bmFtZQBtYXRjaGxhc3RuYW1lX0lzTnVsbABtYXRjaG5hbWUAbWF0Y2hu
YW1lX0lzTnVsbABnZW5kZXIAZ2VuZGVyX0lzTnVsbAB0aXRsZQB0aXRsZV9Jc051bGwAUGFyZW50
Q29tcG9uZW50AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5
c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1dE5hbWUAQnVmZmVyAE91dHB1dE1hcABS
b3cAQnVmZmVyQ29sdW1uSW5kZXhlcwB2YWx1ZQBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1
dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDXzliN2Q3ZDJlMWU3MjQ5
MmM5ZDJjZDZmNDk2ZDZjYTM4AFN0cmluZwBTdHJpbmdDb21wYXJpc29uAEVxdWFscwBHZXRDb2x1
bW5JbmRleGVzAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAFN5c3RlbS5U
ZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBSZWdleABSZXBsYWNlAFNwbGl0AEFycmF5AFNvcnQASm9p
bgBNYXRjaABHcm91cABnZXRfU3VjY2VzcwBHZXRTdHJpbmcAc2V0X0l0ZW0ASXNOdWxsAFNldE51
bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAC5jY3RvcgBTQ185YjdkN2QyZTFlNzI0OTJjOWQyY2Q2ZjQ5NmQ2Y2EzOC5Qcm9wZXJ0
aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAPSQBuAHAAdQB0ACAAMAAAD1sAXgBBAC0AWgAgAF0A
AQEAB1wAcwArAAANWwBeAEEALQBaAF0AASdcAGIAKAA/ADoATQBSAHwAUwBJAFIAfABIAEUAUgBS
ACkAXABiAAADTQAAL1wAYgAoAD8AOgBNAFMAfABNAEkAUwB8AE0AUgBTAHwATABBAEQAWQApAFwA
YgAAA0YAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIA
ZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1
AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAABxUwBDAF8A
OQBiADcAZAA3AGQAMgBlADEAZQA3ADIANAA5ADIAYwA5AGQAMgBjAGQANgBmADQAOQA2AGQANgBj
AGEAMwA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABUM+b0PRus
T4GOIAmuCoyBAAiJhF3NgIDMkQi3elxWGTTgiQMGEhQDBhIYAyAAAQkgBAEIDhIVEhkFIAEBEhAJ
IAMBEhUdCBIZAyAADgQgAQEOAyAAAgQgAQECAygADgMoAAIDBhIFBSABARIFAwYSHQMGEiEEAAAS
HQQAABIhBQABARIhBAgAEh0ECAASIQMGEiAEAAASIAQIABIgBCABAQgGIAICDhFZBSABHQgIBAEA
AAAGAAMODg4OBgACHQ4ODgcQAQEBHR4AAwoBDgYAAg4OHQ4GAAISaQ4OBQcCDh0OAwYSFQMGHQgE
IAEOCAUgAgEIHAQgAQIIBgABEnkRfQUgABKAgQcgAgEOEoCBBAcBEh0GIAEBEYCJCAEAAgAAAAAA
AwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTQ185YjdkN2QyZTFlNzI0OTJjOWQyY2Q2ZjQ5NmQ2Y2Ez
OAAABQEAAAAAIwEAHk1pY2hhZWwgUGFnZSBJbnRlcm5hdGlvbmFsIFBMQwAANAEAL0NvcHlyaWdo
dCBAIE1pY2hhZWwgUGFnZSBJbnRlcm5hdGlvbmFsIFBMQyAyMDE2AAAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBFDgAAAAAAAAAAAAALjgAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACA4AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAABMBAAAAAAAAAAAAABMBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAjEA6FwAAAQCMQDoXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAErAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAiAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAYAAfAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABNAGkAYwBoAGEAZQBsACAA
UABhAGcAZQAgAEkAbgB0AGUAcgBuAGEAdABpAG8AbgBhAGwAIABQAEwAQwAAAAAAcAAkAAEARgBp
AGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADkAYgA3AGQANwBkADIAZQAxAGUA
NwAyADQAOQAyAGMAOQBkADIAYwBkADYAZgA0ADkANgBkADYAYwBhADMAOAAAAEAADwABAEYAaQBs
AGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADkANAA2AC4AMQA2ADUAMgA0AAAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADkAYgA3AGQANwBkADIAZQAxAGUANwAy
ADQAOQAyAGMAOQBkADIAYwBkADYAZgA0ADkANgBkADYAYwBhADMAOAAuAGQAbABsAAAAhAAwAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAATQBp
AGMAaABhAGUAbAAgAFAAYQBnAGUAIABJAG4AdABlAHIAbgBhAHQAaQBvAG4AYQBsACAAUABMAEMA
IAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBf
ADkAYgA3AGQANwBkADIAZQAxAGUANwAyADQAOQAyAGMAOQBkADIAYwBkADYAZgA0ADkANgBkADYA
YwBhADMAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA5
AGIANwBkADcAZAAyAGUAMQBlADcAMgA0ADkAMgBjADkAZAAyAGMAZAA2AGYANAA5ADYAZAA2AGMA
YQAzADgAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOQA0
ADYALgAxADYANQAyADQAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADUAOQA0ADYALgAxADYANQAyADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAQDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_9b7d7d2e1e72492c9d2cd6f496d6ca38</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">ce2ba49652aed6dcd6caf230c876fe2f</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load candidates\De-noise text.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load candidates\De-noise text.Inputs[Input 0].Columns[match_first_name]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="match_first_name"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[match_first_name]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Load candidates\De-noise text.Inputs[Input 0].Columns[match_last_name]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="match_last_name"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[match_last_name]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Load candidates\De-noise text.Inputs[Input 0].Columns[match_name]"
                      cachedDataType="wstr"
                      cachedLength="129"
                      cachedName="match_name"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[match_name]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Load candidates\De-noise text.Inputs[Input 0].Columns[gender]"
                      cachedDataType="wstr"
                      cachedLength="1"
                      cachedName="gender"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[gender]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Load candidates\De-noise text.Inputs[Input 0].Columns[title]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="title"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[title]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load candidates\De-noise text.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load candidates\De-noise text.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load candidates\Get candidates"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="Get candidates"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT 
  p.person_ref
  ,p.first_name + ' ' + p.last_name AS name
  ,UPPER(p.first_name) AS match_first_name
  ,UPPER(p.last_name) AS match_last_name
  ,UPPER(p.first_name + ' ' + p.last_name) AS match_name
  ,p.gender
  ,p.title
FROM uk.person p
WHERE EXISTS 
  (SELECT 1
   FROM uk.person_type pt
   WHERE type IN('A','C')
     AND pt.person_ref = p.person_ref)
  AND p.first_name IS NOT NULL
  AND p.last_name IS NOT NULL 
  AND p.person_ref NOT IN(SELECT person_ref FROM uk.person_type WHERE type LIKE 'Z%')</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load candidates\Get candidates.Connections[IDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[source]"
                  connectionManagerRefId="Package.ConnectionManagers[source]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[person_ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[person_ref]"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[person_ref]"
                      name="person_ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[name]"
                      length="129"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[name]"
                      name="name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[match_first_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[match_first_name]"
                      length="64"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[match_first_name]"
                      name="match_first_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[match_last_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[match_last_name]"
                      length="64"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[match_last_name]"
                      name="match_last_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[match_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[match_name]"
                      length="129"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[match_name]"
                      name="match_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[gender]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[gender]"
                      length="1"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[gender]"
                      name="gender"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[title]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[title]"
                      length="64"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[title]"
                      name="title"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[person_ref]"
                      dataType="i4"
                      name="person_ref" />
                    <externalMetadataColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[name]"
                      dataType="wstr"
                      length="129"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[match_first_name]"
                      dataType="wstr"
                      length="64"
                      name="match_first_name" />
                    <externalMetadataColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[match_last_name]"
                      dataType="wstr"
                      length="64"
                      name="match_last_name" />
                    <externalMetadataColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[match_name]"
                      dataType="wstr"
                      length="129"
                      name="match_name" />
                    <externalMetadataColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[gender]"
                      dataType="wstr"
                      length="1"
                      name="gender" />
                    <externalMetadataColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].ExternalColumns[title]"
                      dataType="wstr"
                      length="64"
                      name="title" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[person_ref]"
                      dataType="i4"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[person_ref]"
                      name="person_ref" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[name]"
                      dataType="wstr"
                      length="129"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[match_first_name]"
                      dataType="wstr"
                      length="64"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[match_first_name]"
                      name="match_first_name" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[match_last_name]"
                      dataType="wstr"
                      length="64"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[match_last_name]"
                      name="match_last_name" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[match_name]"
                      dataType="wstr"
                      length="129"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[match_name]"
                      name="match_name" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[gender]"
                      dataType="wstr"
                      length="1"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[gender]"
                      name="gender" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[title]"
                      dataType="wstr"
                      length="64"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[title]"
                      name="title" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load candidates\Load candidates"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
              name="Load candidates"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  description="The Destination database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."##uk_match_candidate"</property>
                <property
                  dataType="System.Int32"
                  description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                  expressionType="Notify"
                  name="BatchSize">0</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                  expressionType="Notify"
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                  expressionType="Notify"
                  name="UseBulkInsertWhenPossible">true</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ADONETDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load candidates\Load candidates.Connections[IDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[target]"
                  connectionManagerRefId="Package.ConnectionManagers[target]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="ADO NET Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].Columns[person_ref]"
                      cachedDataType="i4"
                      cachedName="person_ref"
                      externalMetadataColumnId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].ExternalColumns[person_ref]"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[person_ref]" />
                    <inputColumn
                      refId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="129"
                      cachedName="name"
                      externalMetadataColumnId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].ExternalColumns[name]"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[name]" />
                    <inputColumn
                      refId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].Columns[match_first_name]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="match_first_name"
                      externalMetadataColumnId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].ExternalColumns[match_first_name]"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[match_first_name]" />
                    <inputColumn
                      refId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].Columns[match_last_name]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="match_last_name"
                      externalMetadataColumnId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].ExternalColumns[match_last_name]"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[match_last_name]" />
                    <inputColumn
                      refId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].Columns[match_name]"
                      cachedDataType="wstr"
                      cachedLength="129"
                      cachedName="match_name"
                      externalMetadataColumnId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].ExternalColumns[match_name]"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[match_name]" />
                    <inputColumn
                      refId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].Columns[gender]"
                      cachedDataType="wstr"
                      cachedLength="1"
                      cachedName="gender"
                      externalMetadataColumnId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].ExternalColumns[gender]"
                      lineageId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output].Columns[gender]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].ExternalColumns[person_ref]"
                      dataType="i4"
                      name="person_ref" />
                    <externalMetadataColumn
                      refId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].ExternalColumns[name]"
                      dataType="wstr"
                      length="255"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].ExternalColumns[match_first_name]"
                      dataType="wstr"
                      length="255"
                      name="match_first_name" />
                    <externalMetadataColumn
                      refId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].ExternalColumns[match_last_name]"
                      dataType="wstr"
                      length="255"
                      name="match_last_name" />
                    <externalMetadataColumn
                      refId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].ExternalColumns[match_name]"
                      dataType="wstr"
                      length="255"
                      name="match_name" />
                    <externalMetadataColumn
                      refId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input].ExternalColumns[gender]"
                      dataType="wstr"
                      length="255"
                      name="gender" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load candidates\Load candidates.Outputs[ADO NET Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="ADO NET Destination Error Output"
                  synchronousInputId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load candidates\Load candidates.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load candidates\Load candidates.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load candidates\Load candidates.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load candidates\Load candidates.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load candidates.Paths[ADO NET Source Output]"
              endId="Package\Load candidates\De-noise text.Inputs[Input 0]"
              name="ADO NET Source Output"
              startId="Package\Load candidates\Get candidates.Outputs[ADO NET Source Output]" />
            <path
              refId="Package\Load candidates.Paths[Output 0]"
              endId="Package\Load candidates\Load candidates.Inputs[ADO NET Destination Input]"
              name="Output 0"
              startId="Package\Load candidates\De-noise text.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load match data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:DelayValidation="True"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{7c9e3ef7-2b3e-44d2-a8d0-a466716c622e}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load match data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load match data\Code home DOB"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Code home DOB"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Code home DOB.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Code home DOB.Inputs[Derived Column Input].Columns[date_of_birth]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="date_of_birth"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[date_of_birth]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Code home DOB.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Load match data\Code home DOB.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code home DOB.Outputs[Derived Column Output].Columns[match_code]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load match data\Code home DOB.Outputs[Derived Column Output].Columns[match_code]"
                      name="match_code"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">7</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">7</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code home DOB.Outputs[Derived Column Output].Columns[match_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code home DOB.Outputs[Derived Column Output].Columns[match_description]"
                      name="match_description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,255)"DATE OF BIRTH"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,255)"DATE OF BIRTH"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code home DOB.Outputs[Derived Column Output].Columns[match_text]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code home DOB.Outputs[Derived Column Output].Columns[match_text]"
                      name="match_text"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[date_of_birth]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">date_of_birth</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Code home DOB.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Load match data\Code home DOB.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code home DOB.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code home DOB.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Code home DOB.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code home DOB.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Code home email"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Code home email"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Code home email.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Code home email.Inputs[Derived Column Input].Columns[email_address]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="email_address"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[email_address]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Code home email.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Load match data\Code home email.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code home email.Outputs[Derived Column Output].Columns[match_code]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load match data\Code home email.Outputs[Derived Column Output].Columns[match_code]"
                      name="match_code"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code home email.Outputs[Derived Column Output].Columns[match_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code home email.Outputs[Derived Column Output].Columns[match_description]"
                      name="match_description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,255)"HOME EMAIL"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,255)"HOME EMAIL"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code home email.Outputs[Derived Column Output].Columns[match_text]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code home email.Outputs[Derived Column Output].Columns[match_text]"
                      name="match_text"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[email_address]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">email_address</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Code home email.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Load match data\Code home email.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code home email.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code home email.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Code home email.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code home email.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Code home postcode"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Code home postcode"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Code home postcode.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Code home postcode.Inputs[Derived Column Input].Columns[home_postcode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="home_postcode"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[home_postcode]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Code home postcode.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Load match data\Code home postcode.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code home postcode.Outputs[Derived Column Output].Columns[match_code]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load match data\Code home postcode.Outputs[Derived Column Output].Columns[match_code]"
                      name="match_code"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">5</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">5</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code home postcode.Outputs[Derived Column Output].Columns[match_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code home postcode.Outputs[Derived Column Output].Columns[match_description]"
                      name="match_description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,255)"HOME POSTCODE"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,255)"HOME POSTCODE"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code home postcode.Outputs[Derived Column Output].Columns[match_text]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code home postcode.Outputs[Derived Column Output].Columns[match_text]"
                      name="match_text"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[home_postcode]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">home_postcode</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Code home postcode.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Load match data\Code home postcode.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code home postcode.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code home postcode.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Code home postcode.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code home postcode.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Code mobile"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Code mobile"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Code mobile.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Code mobile.Inputs[Derived Column Input].Columns[person_mobile]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="person_mobile"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[person_mobile]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Code mobile.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Load match data\Code mobile.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code mobile.Outputs[Derived Column Output].Columns[match_code]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load match data\Code mobile.Outputs[Derived Column Output].Columns[match_code]"
                      name="match_code"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">3</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code mobile.Outputs[Derived Column Output].Columns[match_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code mobile.Outputs[Derived Column Output].Columns[match_description]"
                      name="match_description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,255)"HOME TELEPHONE"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,255)"HOME TELEPHONE"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code mobile.Outputs[Derived Column Output].Columns[match_text]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code mobile.Outputs[Derived Column Output].Columns[match_text]"
                      name="match_text"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[person_mobile]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">person_mobile</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Code mobile.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Load match data\Code mobile.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code mobile.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code mobile.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Code mobile.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code mobile.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Code phone"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Code phone"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Code phone.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Code phone.Inputs[Derived Column Input].Columns[address_telephone]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="address_telephone"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[address_telephone]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Code phone.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Load match data\Code phone.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code phone.Outputs[Derived Column Output].Columns[match_code]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load match data\Code phone.Outputs[Derived Column Output].Columns[match_code]"
                      name="match_code"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">3</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code phone.Outputs[Derived Column Output].Columns[match_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code phone.Outputs[Derived Column Output].Columns[match_description]"
                      name="match_description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,255)"HOME TELEPHONE"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,255)"HOME TELEPHONE"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code phone.Outputs[Derived Column Output].Columns[match_text]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code phone.Outputs[Derived Column Output].Columns[match_text]"
                      name="match_text"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[address_telephone]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">address_telephone</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Code phone.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Load match data\Code phone.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code phone.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code phone.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Code phone.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code phone.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Code telephone"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Code telephone"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Code telephone.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Code telephone.Inputs[Derived Column Input].Columns[person_telephone]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="person_telephone"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[person_telephone]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Code telephone.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Load match data\Code telephone.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code telephone.Outputs[Derived Column Output].Columns[match_code]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load match data\Code telephone.Outputs[Derived Column Output].Columns[match_code]"
                      name="match_code"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">3</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code telephone.Outputs[Derived Column Output].Columns[match_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code telephone.Outputs[Derived Column Output].Columns[match_description]"
                      name="match_description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,255)"HOME TELEPHONE"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,255)"HOME TELEPHONE"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code telephone.Outputs[Derived Column Output].Columns[match_text]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code telephone.Outputs[Derived Column Output].Columns[match_text]"
                      name="match_text"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[person_telephone]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">person_telephone</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Code telephone.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Load match data\Code telephone.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code telephone.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code telephone.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Code telephone.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code telephone.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Code work email"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Code work email"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Code work email.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Code work email.Inputs[Derived Column Input].Columns[work_email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="work_email"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_email]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Code work email.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Load match data\Code work email.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code work email.Outputs[Derived Column Output].Columns[match_code]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load match data\Code work email.Outputs[Derived Column Output].Columns[match_code]"
                      name="match_code"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">2</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">2</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code work email.Outputs[Derived Column Output].Columns[match_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code work email.Outputs[Derived Column Output].Columns[match_description]"
                      name="match_description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,255)"WORK EMAIL"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,255)"WORK EMAIL"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code work email.Outputs[Derived Column Output].Columns[match_text]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code work email.Outputs[Derived Column Output].Columns[match_text]"
                      name="match_text"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_email]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">work_email</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Code work email.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Load match data\Code work email.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code work email.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code work email.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Code work email.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code work email.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Code work mobile"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Code work mobile"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Code work mobile.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Code work mobile.Inputs[Derived Column Input].Columns[work_telephone]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="work_telephone"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_telephone]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Code work mobile.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Load match data\Code work mobile.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code work mobile.Outputs[Derived Column Output].Columns[match_code]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load match data\Code work mobile.Outputs[Derived Column Output].Columns[match_code]"
                      name="match_code"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">4</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">4</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code work mobile.Outputs[Derived Column Output].Columns[match_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code work mobile.Outputs[Derived Column Output].Columns[match_description]"
                      name="match_description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,255)"WORK TELEPHONE"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,255)"WORK TELEPHONE"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code work mobile.Outputs[Derived Column Output].Columns[match_text]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code work mobile.Outputs[Derived Column Output].Columns[match_text]"
                      name="match_text"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_telephone]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">work_telephone</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Code work mobile.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Load match data\Code work mobile.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code work mobile.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code work mobile.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Code work mobile.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code work mobile.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Code work postcode"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Code work postcode"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Code work postcode.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Code work postcode.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Load match data\Code work postcode.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code work postcode.Outputs[Derived Column Output].Columns[match_code]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load match data\Code work postcode.Outputs[Derived Column Output].Columns[match_code]"
                      name="match_code"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">6</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">6</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code work postcode.Outputs[Derived Column Output].Columns[match_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="13"
                      lineageId="Package\Load match data\Code work postcode.Outputs[Derived Column Output].Columns[match_description]"
                      name="match_description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"WORK POSTCODE"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"WORK POSTCODE"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Code work postcode.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Load match data\Code work postcode.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code work postcode.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code work postcode.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Code work postcode.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code work postcode.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Code work telephone"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Code work telephone"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Code work telephone.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Code work telephone.Inputs[Derived Column Input].Columns[work_telephone]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="work_telephone"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_telephone]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Code work telephone.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Load match data\Code work telephone.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code work telephone.Outputs[Derived Column Output].Columns[match_code]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load match data\Code work telephone.Outputs[Derived Column Output].Columns[match_code]"
                      name="match_code"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">4</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">4</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code work telephone.Outputs[Derived Column Output].Columns[match_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code work telephone.Outputs[Derived Column Output].Columns[match_description]"
                      name="match_description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,255)"WORK TELEPHONE"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,255)"WORK TELEPHONE"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load match data\Code work telephone.Outputs[Derived Column Output].Columns[match_text]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Load match data\Code work telephone.Outputs[Derived Column Output].Columns[match_text]"
                      name="match_text"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_telephone]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">work_telephone</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Code work telephone.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Load match data\Code work telephone.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Code work telephone.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code work telephone.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Code work telephone.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Code work telephone.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\De-noise match text"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="De-noise match text"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0d8f7d6ab7354150b42eaf31dd0810a1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Michael Page International PLC")]
[assembly: AssemblyProduct("SC_0d8f7d6ab7354150b42eaf31dd0810a1")]
[assembly: AssemblyCopyright("Copyright @ Michael Page International PLC 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text.RegularExpressions;
using System.Linq;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if ((new[] { 1, 2, 5 }).Contains(Row.matchcode))
            Row.matchtext = Regex.Replace(Row.matchtext, @"[^A-Z0-9]", "");
        
        if ((new[] { 3, 4 }).Contains(Row.matchcode))
            Row.matchtext = Regex.Replace(Row.matchtext, @"[^0-9]|^[^0-9]*0+", "");
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String matchtext
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool matchtext_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 matchcode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool matchcode_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0d8f7d6ab7354150b42eaf31dd0810a1.Properties.Settings.get_Default():SC_0d8f7d6ab7354150b42eaf31dd0810a1.Properties.Sett" +
    "ings")]

namespace SC_0d8f7d6ab7354150b42eaf31dd0810a1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_0d8f7d6ab7354150b42eaf31dd0810a1</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_0d8f7d6ab7354150b42eaf31dd0810a1</msb:DisplayName>
		<msb:ProjectId>{B35934FB-7FD1-4721-9850-400C009ECB77}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_0d8f7d6ab7354150b42eaf31dd0810a1.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0d8f7d6ab7354150b42eaf31dd0810a1.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{d58bcbd5-fa23-4a94-af90-2fb07d1f1eb6}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_0d8f7d6ab7354150b42eaf31dd0810a1</RootNamespace><AssemblyName>SC_0A085E88EAFE44E2B4475FA906A69792</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptComponent" GeneratedNamespace="SC_0d8f7d6ab7354150b42eaf31dd0810a1" IconIndex="0"></Host><ProjectClient><HostIdentifier>SSIS_SC120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0d8f7d6ab7354150b42eaf31dd0810a1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0d8f7d6ab7354150b42eaf31dd0810a1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0d8f7d6ab7354150b42eaf31dd0810a1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0d8f7d6ab7354150b42eaf31dd0810a1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0d8f7d6ab7354150b42eaf31dd0810a1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0A085E88EAFE44E2B4475FA906A69792.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKhYD1cAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAA7jUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJQ1AABXAAAAAEAAAKgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9BUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAKgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
NQAAAAAAAEgAAAACAAUAECMAAIQSAAABAAAAAAAAAFgiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMSAAAGfQEAAAQCAnMTAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDbxAAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioAAAAAAAABAAAAAgAAAAUAAAATMAQAcgAAAAEAABEZjRgAAAEl0AgAAAQo
FAAACgNvDgAABigBAAArLBsDA28KAAAGchEAAHByJQAAcCgWAAAKbwsAAAYYjRgAAAEKBhYZngYX
Gp4GA28OAAAGKAEAACssGwMDbwoAAAZyJwAAcHIlAABwKBYAAApvCwAABioeAigBAAAGKioCAwQF
KBcAAAoqUgJ7GAAACgJ7GQAAChaUbxoAAAoqJgIWAygbAAAKKiICFigcAAAKKloDLAgCFigdAAAK
KnJLAABwcx4AAAp6UgJ7GAAACgJ7GQAACheUbx8AAAoqIgIXKBwAAAoqHgIoIAAACioeAighAAAK
KjoCKCIAAAoCA30DAAAEKjoCKCIAAAoCA30EAAAEKh4CKCIAAAoqEzACAC0AAAACAAARfgUAAAQt
IHLoAABw0AcAAAIoJAAACm8lAAAKcyYAAAoKBoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4H
AAAEKi5zGQAABoAHAAAEKh4CKCgAAAoqAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAA
AHY0LjAuMzAzMTkAAAAABQBsAAAAQAYAACN+AACsBgAAUAgAACNTdHJpbmdzAAAAAPwOAABcAQAA
I1VTAFgQAAAQAAAAI0dVSUQAAABoEAAAHAIAACNCbG9iAAAAAAAAAAIAAAFXlaIhCQsAAAD6JTMA
FgAAAQAAACcAAAAKAAAACAAAABoAAAAPAAAAKAAAABAAAAABAAAAAgAAAAMAAAAHAAAACgAAAAEA
AAABAAAABQAAAAEAAAABAAAAAQAAAAAACgABAAAAAAAGAO4AzQAGAP4AzQAKABsBFAEOADcBIgES
AHYBzQAGAIUBzQAKALYCpQIKAOcC0gIKAMADpgMKAOsD2QMKAAIE2QMKAB8E2QMKAD4E2QMKAFcE
2QMKAHAE2QMKAIsE2QMKAKYE2QMKAL8E2QMKAPgE2AQKABgF2AQKAFoFFAEKAGEFFAEGAIoFzQAK
ALEFFAEKAPwF2AQKABcGFAEKAFIG2AQKAGEGFAEKAGcGFAEWAKIGlgYKAMgGrQYOAP4G3wYKAC4H
FAEKAGQHUQcKAIEHFAEKAIYHFAEKAKoH2QMOANYHwAcOAO8HwAcAAAAAAQAAAAAAAQABAAEAEAAy
AAAABQABAAEAAQAQAEAAAAAIAAMABQABABAASwAAAAkAAwAJAAEAEABYAAAADQADABIAAQAQAGQA
AAANAAQAEwAAABAAbgB4AA0ABQAUAAABEACnAHgAEQAHABgAAAAAALcFAAANAAgAGwATAQAAIQYA
AGkACQAbAAYAWAATAAYAZAAXAAEAlQJbAAEAlQJbABEAxgJlABEA8wJpABEANwOHABMBPgasAFAg
AAAAAIYYTwEbAAEAcCAAAAAAxgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYBtAEpAAYAqiAA
AAAAxgDLARsABwCyIAAAAADGANYBGwAHAMwgAAAAAMYAtAEpAAcASiEAAAAAhhhPARsACABSIQAA
AACGGE8BLwAIAF0hAAAAAIYI4gE5AAsAciEAAAAAhgjwAT0ACwB8IQAAAACGCP4BQgAMAIUhAAAA
AIYIEwJGAAwAnCEAAAAAhggoAksADQCxIQAAAACGCDYCQgANALohAAAAAIYASwJCAA0AwiEAAAAA
hgBTAkIADQDKIQAAAACGGE8BXwANANkhAAAAAIYYTwFfAA4A6CEAAAAAgxhPARsADwDwIQAAAACT
CAMDbQAPACkiAAAAAJMIFwNyAA8AMCIAAAAAkwgjA3cADwA4IgAAAACWCEcDiwAQAEsiAAAAAIYY
TwEbABAAPyIAAAAAkRgECB4BEAAAAAEAWwMAAAIAYwMAAAMAbQMAAAQAdAMAAAEAbQMAAAEAfgMA
AAEAfgMAAAEAbQMAAAIAggMAAAMAdAMAAAEAlgMAAAEAlgMAAAEAnAMAAAEAnAMAAAEAlgNJAE8B
PQBRAE8BPQBZAE8BPQBhAE8BPQBpAE8BPQBxAE8BPQB5AE8BPQCBAE8BPQCJAE8BPQCRAE8BPQCZ
AE8BlQChAE8BGwAJAE8BGwCpAHIFmgAJAHkFoQC5AE8BGwAJAMsBGwAJANYBGwDJAE8BGwDZAHoG
sADxANYGuAABAQQHyQARAE8BLwARAG0D1QARAIID2QApAAwH3QARABYH4gARAB8H6AARACYHlQAJ
AU8BPQApAEgH7QARAEsCQgARAFMCQgAZAE8BGwARAU8BGwAZAZgH8gAZAbMH+wA5AE8BAQExAU8B
DgEhAE8BGwAuABMAagEuABsAkwEuAEMAkwEuAAsAIgEuAFsA8gEuAGMA+wEuACMAkwEuACsAmQEu
ADMAagEuADsAvQFjAIMApwCpADsBFQHJADsBFQHhAJsApwDjABsBpwAjAZsApwABAAwAAAAKANAA
CQEEAAEABwAFAAgABwAAAF8CTwAAAGkCUwAAAHoCVwAAAIQCUwAAALYCfQAAAC8DggAAAFMDkAAC
AAoAAwABAAsAAwACAAwABQABAA0ABQACAA4ABwACAA8ACQACABUACwACABYADQABABcADQACABgA
DwDAIAAACAAEgAAAAQAAADwXlD0AAAAAAAA2BQAADAAAAAAAAAAAAAAAAQCwAAAAAAAEAAAAAAAA
AAAAAAAKAAsBAAAAAAQAAAAAAAAAAAAAAAoAFAEAAAAADAAAAAAAAAAAAAAAAQBVAQAAAAAEAAAA
AAAAAAAAAAAKAIoGAAAAAAAAAAABAAAACwgAAAoACQArAMUAAAAAAAA8TW9kdWxlPgBTQ18wQTA4
NUU4OEVBRkU0NEUyQjQ0NzVGQTkwNkE2OTc5Mi5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWlu
AElucHV0MEJ1ZmZlcgBDb25uZWN0aW9ucwBWYXJpYWJsZXMAUmVzb3VyY2VzAFNDXzBkOGY3ZDZh
YjczNTQxNTBiNDJlYWYzMWRkMDgxMGExLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNx
bFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRD
b21wb25lbnQAU2NyaXB0QnVmZmVyAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZp
Z3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UALmN0b3IATWljcm9zb2Z0LlNxbFNlcnZl
ci5QaXBlbGluZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcABQcm9jZXNzSW5wdXQA
SW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AFByZUV4ZWN1dGUAUG9z
dEV4ZWN1dGUAZ2V0X21hdGNodGV4dABzZXRfbWF0Y2h0ZXh0AGdldF9tYXRjaHRleHRfSXNOdWxs
AHNldF9tYXRjaHRleHRfSXNOdWxsAGdldF9tYXRjaGNvZGUAZ2V0X21hdGNoY29kZV9Jc051bGwA
TmV4dFJvdwBFbmRPZlJvd3NldABtYXRjaHRleHQAbWF0Y2h0ZXh0X0lzTnVsbABtYXRjaGNvZGUA
bWF0Y2hjb2RlX0lzTnVsbABQYXJlbnRDb21wb25lbnQAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJj
ZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVz
b3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
Q3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABJbnB1dElEAElucHV0
TmFtZQBCdWZmZXIAT3V0cHV0TWFwAFJvdwBCdWZmZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBv
bmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBT
eXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRl
AEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAU0NfMEEwODVFODhFQUZFNDRFMkI0NDc1RkE5MDZBNjk3OTIAU3RyaW5nAFN0cmluZ0Nv
bXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5
UG9pbnRBdHRyaWJ1dGUASW50MzIAPFByaXZhdGVJbXBsZW1lbnRhdGlvbkRldGFpbHM+e0VBMTgz
MjU1LTRGMzQtNDhBOC05MDhGLTQ1MjMyRkQ3Njg3Mn0AQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUAVmFsdWVUeXBlAF9fU3RhdGljQXJyYXlJbml0VHlwZVNpemU9MTIAJCRtZXRob2QweDYwMDAw
MDctMQBSdW50aW1lSGVscGVycwBBcnJheQBSdW50aW1lRmllbGRIYW5kbGUASW5pdGlhbGl6ZUFy
cmF5AFN5c3RlbS5Db3JlAFN5c3RlbS5MaW5xAEVudW1lcmFibGUAU3lzdGVtLkNvbGxlY3Rpb25z
LkdlbmVyaWMASUVudW1lcmFibGVgMQBDb250YWlucwBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVz
c2lvbnMAUmVnZXgAUmVwbGFjZQBHZXRTdHJpbmcAc2V0X0l0ZW0ASXNOdWxsAFNldE51bGwASW52
YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBHZXRJbnQzMgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAC5jY3RvcgBTQ18wZDhmN2Q2
YWI3MzU0MTUwYjQyZWFmMzFkZDA4MTBhMS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
AAAAD0kAbgBwAHUAdAAgADAAABNbAF4AQQAtAFoAMAAtADkAXQABAQAjWwBeADAALQA5AF0AfABe
AFsAXgAwAC0AOQBdACoAMAArAAGAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBh
AG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4A
IABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBh
AGQALgAAcVMAQwBfADAAZAA4AGYANwBkADYAYQBiADcAMwA1ADQAMQA1ADAAYgA0ADIAZQBhAGYA
MwAxAGQAZAAwADgAMQAwAGEAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBj
AGUAcwAAAABVMhjqNE+oSJCPRSMv12hyAAiJhF3NgIDMkQi3elxWGTTgiQMGEhQDBhIYAyAAAQkg
BAEIDhIVEhkFIAEBEhAJIAMBEhUdCBIZAyAADgQgAQEOAyAAAgQgAQECAyAACAMoAA4DKAACAygA
CAMGEgUFIAEBEgUDBhIdAwYSIQQAABIdBAAAEiEFAAEBEiEECAASHQQIABIhAwYSIAQAABIgBAgA
EiAEIAEBCAYgAgIOEVkFIAEdCAgEAQAAAAMGESgHAAIBEnERdQwQAQICFRJ9AR4AHgADCgEIBgAD
Dg4ODgQHAR0IAwYSFQMGHQgEIAEOCAUgAgEIHAQgAQIIBCABCAgIAAESgI0RgJEFIAASgJUHIAIB
DhKAlQQHARIdBiABARGAnQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfMGQ4Zjdk
NmFiNzM1NDE1MGI0MmVhZjMxZGQwODEwYTEAAAUBAAAAACMBAB5NaWNoYWVsIFBhZ2UgSW50ZXJu
YXRpb25hbCBQTEMAADQBAC9Db3B5cmlnaHQgQCBNaWNoYWVsIFBhZ2UgSW50ZXJuYXRpb25hbCBQ
TEMgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAvDUAAAAA
AAAAAAAA3jUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAANA1AAAAAAAAAAAAAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAEwEAAAAAAAAAAAAAEwENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQCUPTwXAAABAJQ9PBc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsASsAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAACIAwAAAQAwADAAMAAw
ADAANABiADAAAABgAB8AAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAGgAYQBlAGwA
IABQAGEAZwBlACAASQBuAHQAZQByAG4AYQB0AGkAbwBuAGEAbAAgAFAATABDAAAAAABwACQAAQBG
AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMABkADgAZgA3AGQANgBhAGIA
NwAzADUANAAxADUAMABiADQAMgBlAGEAZgAzADEAZABkADAAOAAxADAAYQAxAAAAQAAPAAEARgBp
AGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQA0ADgALgAxADUANwA2ADQAAAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMABBADAAOAA1AEUAOAA4AEUAQQBG
AEUANAA0AEUAMgBCADQANAA3ADUARgBBADkAMAA2AEEANgA5ADcAOQAyAC4AZABsAGwAAACEADAA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABN
AGkAYwBoAGEAZQBsACAAUABhAGcAZQAgAEkAbgB0AGUAcgBuAGEAdABpAG8AbgBhAGwAIABQAEwA
QwAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBD
AF8AMABBADAAOAA1AEUAOAA4AEUAQQBGAEUANAA0AEUAMgBCADQANAA3ADUARgBBADkAMAA2AEEA
NgA5ADcAOQAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBf
ADAAZAA4AGYANwBkADYAYQBiADcAMwA1ADQAMQA1ADAAYgA0ADIAZQBhAGYAMwAxAGQAZAAwADgA
MQAwAGEAMQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5
ADQAOAAuADEANQA3ADYANAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA5ADQAOAAuADEANQA3ADYANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADwNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_0a085e88eafe44e2b4475fa906a69792</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">7819d112e60090157b0958d676f66b03</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load match data\De-noise match text.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\De-noise match text.Inputs[Input 0].Columns[match_text]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_text"
                      lineageId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Load match data\De-noise match text.Inputs[Input 0].Columns[match_code]"
                      cachedDataType="i4"
                      cachedName="match_code"
                      lineageId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\De-noise match text.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load match data\De-noise match text.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Get address matches"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="Get address matches"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT 
  person_ref AS ref
  ,CAST(UPPER(CASE WHEN  LEN(zipcode) &gt; 2 THEN zipcode END) AS VARCHAR(255))AS home_postcode
  ,CAST(UPPER(CASE WHEN LEN(telephone_number) &gt; 9 THEN telephone_number END) AS VARCHAR(255))AS address_telephone
FROM uk.address a
WHERE EXISTS (SELECT 1
   FROM uk.person_type pt
   WHERE type IN('A','C')
  AND pt.person_ref = a.person_ref)
  AND main_address = 'Y'
  AND type = 'HOME'</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load match data\Get address matches.Connections[IDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[source]"
                  connectionManagerRefId="Package.ConnectionManagers[source]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].ExternalColumns[ref]"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[ref]"
                      name="ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[home_postcode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].ExternalColumns[home_postcode]"
                      length="255"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[home_postcode]"
                      name="home_postcode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[address_telephone]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].ExternalColumns[address_telephone]"
                      length="255"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[address_telephone]"
                      name="address_telephone"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].ExternalColumns[ref]"
                      dataType="i4"
                      name="ref" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].ExternalColumns[home_postcode]"
                      dataType="wstr"
                      length="255"
                      name="home_postcode" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].ExternalColumns[address_telephone]"
                      dataType="wstr"
                      length="255"
                      name="address_telephone" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load match data\Get address matches.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Get address matches.Outputs[ADO NET Source Error Output].Columns[ref]"
                      dataType="i4"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Error Output].Columns[ref]"
                      name="ref" />
                    <outputColumn
                      refId="Package\Load match data\Get address matches.Outputs[ADO NET Source Error Output].Columns[home_postcode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Error Output].Columns[home_postcode]"
                      name="home_postcode" />
                    <outputColumn
                      refId="Package\Load match data\Get address matches.Outputs[ADO NET Source Error Output].Columns[address_telephone]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Error Output].Columns[address_telephone]"
                      name="address_telephone" />
                    <outputColumn
                      refId="Package\Load match data\Get address matches.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Get address matches.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Get person matches"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="Get person matches"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT   
  person_ref AS ref
  ,CAST(UPPER(CASE WHEN LEN(email_address) &gt; 2
               AND email_address LIKE '%@%'
               AND email_address NOT LIKE '%@broadbean.net%'
               AND email_address NOT LIKE '%@pagepersonnel.co.uk%'
               AND email_address NOT LIKE '%@michaelpage.com%'
              THEN email_address
              END) AS VARCHAR(255))AS email_address
  ,CAST(REPLACE(CONVERT(VARCHAR(10), date_of_birth, 121), '-', '') AS VARCHAR(255)) AS date_of_birth
  ,CAST(UPPER(CASE WHEN LEN(mobile_telno) &gt; 9 THEN mobile_telno END) AS VARCHAR(255))AS person_mobile
  ,CAST(UPPER(CASE WHEN LEN(day_telno) &gt; 9 THEN day_telno END) AS VARCHAR(255))AS person_telephone
FROM uk.person p
WHERE EXISTS 
  (SELECT 1
   FROM uk.person_type pt
   WHERE type IN('A','C')
     AND pt.person_ref = p.person_ref)</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load match data\Get person matches.Connections[IDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[source]"
                  connectionManagerRefId="Package.ConnectionManagers[source]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].ExternalColumns[ref]"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[ref]"
                      name="ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[email_address]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].ExternalColumns[email_address]"
                      length="255"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[email_address]"
                      name="email_address"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[date_of_birth]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].ExternalColumns[date_of_birth]"
                      length="255"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[date_of_birth]"
                      name="date_of_birth"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[person_mobile]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].ExternalColumns[person_mobile]"
                      length="255"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[person_mobile]"
                      name="person_mobile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[person_telephone]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].ExternalColumns[person_telephone]"
                      length="255"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[person_telephone]"
                      name="person_telephone"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].ExternalColumns[ref]"
                      dataType="i4"
                      name="ref" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].ExternalColumns[email_address]"
                      dataType="wstr"
                      length="255"
                      name="email_address" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].ExternalColumns[date_of_birth]"
                      dataType="wstr"
                      length="255"
                      name="date_of_birth" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].ExternalColumns[person_mobile]"
                      dataType="wstr"
                      length="255"
                      name="person_mobile" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].ExternalColumns[person_telephone]"
                      dataType="wstr"
                      length="255"
                      name="person_telephone" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[ref]"
                      dataType="i4"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[ref]"
                      name="ref" />
                    <outputColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[email_address]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[email_address]"
                      name="email_address" />
                    <outputColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[date_of_birth]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[date_of_birth]"
                      name="date_of_birth" />
                    <outputColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[person_mobile]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[person_mobile]"
                      name="person_mobile" />
                    <outputColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[person_telephone]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[person_telephone]"
                      name="person_telephone" />
                    <outputColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Get position matches"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="Get position matches"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT  
  person_ref AS ref
  ,CAST(UPPER(CASE WHEN LEN(email_address) &gt; 2
                    AND email_address LIKE '%@%'
                    AND email_address NOT LIKE '%dept%@%'
                    AND email_address NOT LIKE '%sale%@%'
                    AND email_address NOT LIKE '%account%@%'
                    AND email_address NOT LIKE '%team%@%'
                    AND email_address NOT LIKE '%admin%@%'
                    AND email_address NOT LIKE '%group%@%'
            THEN email_address 
            END) AS VARCHAR(255)) AS work_email
  ,CAST(UPPER(CASE WHEN LEN(telephone_number) &gt; 9 THEN telephone_number END) AS VARCHAR(255))AS work_telephone
  ,CAST(UPPER(CASE WHEN LEN(mobile_telno) &gt; 9 THEN mobile_telno END) AS VARCHAR(255))AS work_mobile
FROM uk.position p
WHERE EXISTS 
  (SELECT 1
   FROM uk.person_type pt
   WHERE type IN('A','C')
     AND pt.person_ref = p.person_ref)
  AND NOT (email_address IS NULL 
       AND telephone_number IS NULL 
       AND mobile_telno IS NULL)</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load match data\Get position matches.Connections[IDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[source]"
                  connectionManagerRefId="Package.ConnectionManagers[source]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].ExternalColumns[ref]"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[ref]"
                      name="ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].ExternalColumns[work_email]"
                      length="255"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_email]"
                      name="work_email"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_telephone]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].ExternalColumns[work_telephone]"
                      length="255"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_telephone]"
                      name="work_telephone"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_mobile]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].ExternalColumns[work_mobile]"
                      length="255"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_mobile]"
                      name="work_mobile"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].ExternalColumns[ref]"
                      dataType="i4"
                      name="ref" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].ExternalColumns[work_email]"
                      dataType="wstr"
                      length="255"
                      name="work_email" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].ExternalColumns[work_telephone]"
                      dataType="wstr"
                      length="255"
                      name="work_telephone" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].ExternalColumns[work_mobile]"
                      dataType="wstr"
                      length="255"
                      name="work_mobile" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Error Output].Columns[ref]"
                      dataType="i4"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Error Output].Columns[ref]"
                      name="ref" />
                    <outputColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Error Output].Columns[work_email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Error Output].Columns[work_email]"
                      name="work_email" />
                    <outputColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Error Output].Columns[work_telephone]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Error Output].Columns[work_telephone]"
                      name="work_telephone" />
                    <outputColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Error Output].Columns[work_mobile]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Error Output].Columns[work_mobile]"
                      name="work_mobile" />
                    <outputColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Get position matches.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Get work postcode"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="Get work postcode"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT 
  pos.person_ref AS ref
  ,UPPER(adr.zipcode) AS match_text
FROM uk.position pos
  INNER JOIN uk.address adr ON pos.address_ref = adr.address_ref
WHERE EXISTS (SELECT 1
   FROM uk.person_type pt
   WHERE type IN('A','C')
     AND pt.person_ref = pos.person_ref)
  AND adr.zipcode IS NOT NULL
  AND LEN(adr.zipcode) &gt; 2</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load match data\Get work postcode.Connections[IDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[source]"
                  connectionManagerRefId="Package.ConnectionManagers[source]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Output].Columns[ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Output].ExternalColumns[ref]"
                      lineageId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Output].Columns[ref]"
                      name="ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Output].Columns[match_text]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Output].ExternalColumns[match_text]"
                      length="64"
                      lineageId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Output].Columns[match_text]"
                      name="match_text"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Output].ExternalColumns[ref]"
                      dataType="i4"
                      name="ref" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Output].ExternalColumns[match_text]"
                      dataType="wstr"
                      length="64"
                      name="match_text" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Error Output].Columns[ref]"
                      dataType="i4"
                      lineageId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Error Output].Columns[ref]"
                      name="ref" />
                    <outputColumn
                      refId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Error Output].Columns[match_text]"
                      dataType="wstr"
                      length="64"
                      lineageId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Error Output].Columns[match_text]"
                      name="match_text" />
                    <outputColumn
                      refId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Load match data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
              name="Load match data"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  description="The Destination database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."##uk_match_candidate_data"</property>
                <property
                  dataType="System.Int32"
                  description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                  expressionType="Notify"
                  name="BatchSize">0</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                  expressionType="Notify"
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                  expressionType="Notify"
                  name="UseBulkInsertWhenPossible">true</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ADONETDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load match data\Load match data.Connections[IDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[target]"
                  connectionManagerRefId="Package.ConnectionManagers[target]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="ADO NET Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input].Columns[ref]"
                      cachedDataType="i4"
                      cachedName="ref"
                      externalMetadataColumnId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input].ExternalColumns[ref]"
                      lineageId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[ref]" />
                    <inputColumn
                      refId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input].Columns[match_text]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_text"
                      externalMetadataColumnId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input].ExternalColumns[match_text]"
                      lineageId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]" />
                    <inputColumn
                      refId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input].Columns[match_code]"
                      cachedDataType="i4"
                      cachedName="match_code"
                      externalMetadataColumnId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input].ExternalColumns[match_code]"
                      lineageId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]" />
                    <inputColumn
                      refId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input].Columns[match_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_description"
                      externalMetadataColumnId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input].ExternalColumns[match_description]"
                      lineageId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_description]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input].ExternalColumns[id]"
                      dataType="i4"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input].ExternalColumns[ref]"
                      dataType="i4"
                      name="ref" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input].ExternalColumns[match_text]"
                      dataType="wstr"
                      length="255"
                      name="match_text" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input].ExternalColumns[match_code]"
                      dataType="i4"
                      name="match_code" />
                    <externalMetadataColumn
                      refId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input].ExternalColumns[match_description]"
                      dataType="wstr"
                      length="255"
                      name="match_description" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Load match data.Outputs[ADO NET Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="ADO NET Destination Error Output"
                  synchronousInputId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Load match data.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Load match data.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Load match data.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Load match data.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Multicast address"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast address">
              <inputs>
                <input
                  refId="Package\Load match data\Multicast address.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Multicast address.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Load match data\Multicast address.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Multicast address.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Load match data\Multicast address.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Multicast address.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Load match data\Multicast address.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Multicast person"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast person">
              <inputs>
                <input
                  refId="Package\Load match data\Multicast person.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Multicast person.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Load match data\Multicast person.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Multicast person.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Load match data\Multicast person.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Multicast person.Outputs[Multicast Output 3]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Load match data\Multicast person.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Multicast person.Outputs[Multicast Output 4]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 4"
                  synchronousInputId="Package\Load match data\Multicast person.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Multicast person.Outputs[Multicast Output 5]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 5"
                  synchronousInputId="Package\Load match data\Multicast person.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Multicast position"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast position">
              <inputs>
                <input
                  refId="Package\Load match data\Multicast position.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Multicast position.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Load match data\Multicast position.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Multicast position.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Load match data\Multicast position.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Multicast position.Outputs[Multicast Output 3]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Load match data\Multicast position.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Multicast position.Outputs[Multicast Output 4]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 4"
                  synchronousInputId="Package\Load match data\Multicast position.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Remove null DOB"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove null DOB"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Remove null DOB.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Remove null DOB.Inputs[Conditional Split Input].Columns[date_of_birth]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="date_of_birth"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[date_of_birth]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Remove null DOB.Outputs[Not null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Not null"
                  synchronousInputId="Package\Load match data\Remove null DOB.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[date_of_birth]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(date_of_birth)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null DOB.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Load match data\Remove null DOB.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null DOB.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Load match data\Remove null DOB.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Remove null DOB.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null DOB.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Remove null DOB.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null DOB.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Remove null home emails"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove null home emails"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Remove null home emails.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Remove null home emails.Inputs[Conditional Split Input].Columns[email_address]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="email_address"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[email_address]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Remove null home emails.Outputs[Not null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Not null"
                  synchronousInputId="Package\Load match data\Remove null home emails.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[email_address]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(email_address)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null home emails.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Load match data\Remove null home emails.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null home emails.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Load match data\Remove null home emails.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Remove null home emails.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null home emails.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Remove null home emails.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null home emails.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Remove null home postcode"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove null home postcode"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Remove null home postcode.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Remove null home postcode.Inputs[Conditional Split Input].Columns[home_postcode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="home_postcode"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[home_postcode]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Remove null home postcode.Outputs[Not null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Not null"
                  synchronousInputId="Package\Load match data\Remove null home postcode.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[home_postcode]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(home_postcode)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null home postcode.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Load match data\Remove null home postcode.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null home postcode.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Load match data\Remove null home postcode.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Remove null home postcode.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null home postcode.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Remove null home postcode.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null home postcode.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Remove null mobile"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove null mobile"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Remove null mobile.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Remove null mobile.Inputs[Conditional Split Input].Columns[person_mobile]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="person_mobile"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[person_mobile]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Remove null mobile.Outputs[Not null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Not null"
                  synchronousInputId="Package\Load match data\Remove null mobile.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[person_mobile]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(person_mobile)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null mobile.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Load match data\Remove null mobile.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null mobile.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Load match data\Remove null mobile.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Remove null mobile.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null mobile.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Remove null mobile.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null mobile.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Remove null phone"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove null phone"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Remove null phone.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Remove null phone.Inputs[Conditional Split Input].Columns[address_telephone]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="address_telephone"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[address_telephone]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Remove null phone.Outputs[Not null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Not null"
                  synchronousInputId="Package\Load match data\Remove null phone.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[address_telephone]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(address_telephone)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null phone.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Load match data\Remove null phone.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null phone.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Load match data\Remove null phone.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Remove null phone.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null phone.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Remove null phone.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null phone.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Remove null telephone"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove null telephone"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Remove null telephone.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Remove null telephone.Inputs[Conditional Split Input].Columns[person_telephone]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="person_telephone"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[person_telephone]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Remove null telephone.Outputs[Not null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Not null"
                  synchronousInputId="Package\Load match data\Remove null telephone.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[person_telephone]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(person_telephone)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null telephone.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Load match data\Remove null telephone.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null telephone.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Load match data\Remove null telephone.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Remove null telephone.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null telephone.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Remove null telephone.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null telephone.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Remove null work email"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove null work email"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Remove null work email.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Remove null work email.Inputs[Conditional Split Input].Columns[work_mobile]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="work_mobile"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_mobile]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Remove null work email.Outputs[Not null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Not null"
                  synchronousInputId="Package\Load match data\Remove null work email.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_mobile]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(work_mobile)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null work email.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Load match data\Remove null work email.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null work email.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Load match data\Remove null work email.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Remove null work email.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null work email.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Remove null work email.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null work email.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Remove null work mobile"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove null work mobile"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Remove null work mobile.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Remove null work mobile.Inputs[Conditional Split Input].Columns[work_mobile]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="work_mobile"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_mobile]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Remove null work mobile.Outputs[Not null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Not null"
                  synchronousInputId="Package\Load match data\Remove null work mobile.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_mobile]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(work_mobile)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null work mobile.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Load match data\Remove null work mobile.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null work mobile.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Load match data\Remove null work mobile.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Remove null work mobile.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null work mobile.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Remove null work mobile.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null work mobile.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Remove null work telephone"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove null work telephone"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load match data\Remove null work telephone.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Remove null work telephone.Inputs[Conditional Split Input].Columns[work_telephone]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="work_telephone"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_telephone]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Remove null work telephone.Outputs[Not null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Not null"
                  synchronousInputId="Package\Load match data\Remove null work telephone.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[work_telephone]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(work_telephone)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null work telephone.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Load match data\Remove null work telephone.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load match data\Remove null work telephone.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Load match data\Remove null work telephone.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Remove null work telephone.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null work telephone.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load match data\Remove null work telephone.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load match data\Remove null work telephone.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load match data\Union all"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union all"
              version="1">
              <inputs>
                <input
                  refId="Package\Load match data\Union all.Inputs[Union All Input 3]"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 3].Columns[ref]"
                      cachedDataType="i4"
                      cachedName="ref"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[ref]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[ref]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 3].Columns[match_code]"
                      cachedDataType="i4"
                      cachedName="match_code"
                      lineageId="Package\Load match data\Code home email.Outputs[Derived Column Output].Columns[match_code]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 3].Columns[match_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_description"
                      lineageId="Package\Load match data\Code home email.Outputs[Derived Column Output].Columns[match_description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 3].Columns[match_text]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_text"
                      lineageId="Package\Load match data\Code home email.Outputs[Derived Column Output].Columns[match_text]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Load match data\Union all.Inputs[Union All Input 1]"
                  hasSideEffects="true"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 1].Columns[ref]"
                      cachedDataType="i4"
                      cachedName="ref"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[ref]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[ref]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 1].Columns[match_code]"
                      cachedDataType="i4"
                      cachedName="match_code"
                      lineageId="Package\Load match data\Code home DOB.Outputs[Derived Column Output].Columns[match_code]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 1].Columns[match_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_description"
                      lineageId="Package\Load match data\Code home DOB.Outputs[Derived Column Output].Columns[match_description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 1].Columns[match_text]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_text"
                      lineageId="Package\Load match data\Code home DOB.Outputs[Derived Column Output].Columns[match_text]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Load match data\Union all.Inputs[Union All Input 4]"
                  hasSideEffects="true"
                  name="Union All Input 4">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 4].Columns[ref]"
                      cachedDataType="i4"
                      cachedName="ref"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[ref]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[ref]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 4].Columns[match_code]"
                      cachedDataType="i4"
                      cachedName="match_code"
                      lineageId="Package\Load match data\Code telephone.Outputs[Derived Column Output].Columns[match_code]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 4].Columns[match_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_description"
                      lineageId="Package\Load match data\Code telephone.Outputs[Derived Column Output].Columns[match_description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 4].Columns[match_text]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_text"
                      lineageId="Package\Load match data\Code telephone.Outputs[Derived Column Output].Columns[match_text]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Load match data\Union all.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 2].Columns[ref]"
                      cachedDataType="i4"
                      cachedName="ref"
                      lineageId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output].Columns[ref]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[ref]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 2].Columns[match_code]"
                      cachedDataType="i4"
                      cachedName="match_code"
                      lineageId="Package\Load match data\Code mobile.Outputs[Derived Column Output].Columns[match_code]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 2].Columns[match_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_description"
                      lineageId="Package\Load match data\Code mobile.Outputs[Derived Column Output].Columns[match_description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 2].Columns[match_text]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_text"
                      lineageId="Package\Load match data\Code mobile.Outputs[Derived Column Output].Columns[match_text]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Load match data\Union all.Inputs[Union All Input 5]"
                  hasSideEffects="true"
                  name="Union All Input 5">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 5].Columns[ref]"
                      cachedDataType="i4"
                      cachedName="ref"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[ref]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[ref]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 5].Columns[match_code]"
                      cachedDataType="i4"
                      cachedName="match_code"
                      lineageId="Package\Load match data\Code phone.Outputs[Derived Column Output].Columns[match_code]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 5].Columns[match_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_description"
                      lineageId="Package\Load match data\Code phone.Outputs[Derived Column Output].Columns[match_description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 5].Columns[match_text]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_text"
                      lineageId="Package\Load match data\Code phone.Outputs[Derived Column Output].Columns[match_text]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Load match data\Union all.Inputs[Union All Input 6]"
                  hasSideEffects="true"
                  name="Union All Input 6">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 6].Columns[ref]"
                      cachedDataType="i4"
                      cachedName="ref"
                      lineageId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output].Columns[ref]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[ref]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 6].Columns[match_code]"
                      cachedDataType="i4"
                      cachedName="match_code"
                      lineageId="Package\Load match data\Code home postcode.Outputs[Derived Column Output].Columns[match_code]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 6].Columns[match_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_description"
                      lineageId="Package\Load match data\Code home postcode.Outputs[Derived Column Output].Columns[match_description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 6].Columns[match_text]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_text"
                      lineageId="Package\Load match data\Code home postcode.Outputs[Derived Column Output].Columns[match_text]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Load match data\Union all.Inputs[Union All Input 7]"
                  hasSideEffects="true"
                  name="Union All Input 7">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 7].Columns[ref]"
                      cachedDataType="i4"
                      cachedName="ref"
                      lineageId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Output].Columns[ref]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[ref]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 7].Columns[match_text]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="match_text"
                      lineageId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Output].Columns[match_text]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 7].Columns[match_code]"
                      cachedDataType="i4"
                      cachedName="match_code"
                      lineageId="Package\Load match data\Code work postcode.Outputs[Derived Column Output].Columns[match_code]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 7].Columns[match_description]"
                      cachedDataType="wstr"
                      cachedLength="13"
                      cachedName="match_description"
                      lineageId="Package\Load match data\Code work postcode.Outputs[Derived Column Output].Columns[match_description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_description]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Load match data\Union all.Inputs[Union All Input 8]"
                  hasSideEffects="true"
                  name="Union All Input 8">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 8].Columns[ref]"
                      cachedDataType="i4"
                      cachedName="ref"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[ref]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[ref]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 8].Columns[match_code]"
                      cachedDataType="i4"
                      cachedName="match_code"
                      lineageId="Package\Load match data\Code work telephone.Outputs[Derived Column Output].Columns[match_code]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 8].Columns[match_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_description"
                      lineageId="Package\Load match data\Code work telephone.Outputs[Derived Column Output].Columns[match_description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 8].Columns[match_text]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_text"
                      lineageId="Package\Load match data\Code work telephone.Outputs[Derived Column Output].Columns[match_text]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Load match data\Union all.Inputs[Union All Input 9]"
                  hasSideEffects="true"
                  name="Union All Input 9">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 9].Columns[ref]"
                      cachedDataType="i4"
                      cachedName="ref"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[ref]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[ref]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 9].Columns[match_code]"
                      cachedDataType="i4"
                      cachedName="match_code"
                      lineageId="Package\Load match data\Code work mobile.Outputs[Derived Column Output].Columns[match_code]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 9].Columns[match_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_description"
                      lineageId="Package\Load match data\Code work mobile.Outputs[Derived Column Output].Columns[match_description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 9].Columns[match_text]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_text"
                      lineageId="Package\Load match data\Code work mobile.Outputs[Derived Column Output].Columns[match_text]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Load match data\Union all.Inputs[Union All Input 10]"
                  hasSideEffects="true"
                  name="Union All Input 10">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 10].Columns[ref]"
                      cachedDataType="i4"
                      cachedName="ref"
                      lineageId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output].Columns[ref]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[ref]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 10].Columns[match_code]"
                      cachedDataType="i4"
                      cachedName="match_code"
                      lineageId="Package\Load match data\Code work email.Outputs[Derived Column Output].Columns[match_code]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 10].Columns[match_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_description"
                      lineageId="Package\Load match data\Code work email.Outputs[Derived Column Output].Columns[match_description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load match data\Union all.Inputs[Union All Input 10].Columns[match_text]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="match_text"
                      lineageId="Package\Load match data\Code work email.Outputs[Derived Column Output].Columns[match_text]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Load match data\Union all.Inputs[Union All Input 11]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 11">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load match data\Union all.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[ref]"
                      dataType="i4"
                      lineageId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[ref]"
                      name="ref" />
                    <outputColumn
                      refId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_text]"
                      name="match_text" />
                    <outputColumn
                      refId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]"
                      dataType="i4"
                      lineageId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_code]"
                      name="match_code" />
                    <outputColumn
                      refId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_description]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load match data\Union all.Outputs[Union All Output 1].Columns[match_description]"
                      name="match_description" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load match data.Paths[ADO NET Source Output]"
              endId="Package\Load match data\Code work postcode.Inputs[Derived Column Input]"
              name="ADO NET Source Output"
              startId="Package\Load match data\Get work postcode.Outputs[ADO NET Source Output]" />
            <path
              refId="Package\Load match data.Paths[ADO NET Source Output1]"
              endId="Package\Load match data\Multicast person.Inputs[Multicast Input 1]"
              name="ADO NET Source Output"
              startId="Package\Load match data\Get person matches.Outputs[ADO NET Source Output]" />
            <path
              refId="Package\Load match data.Paths[ADO NET Source Output3]"
              endId="Package\Load match data\Multicast position.Inputs[Multicast Input 1]"
              name="ADO NET Source Output"
              startId="Package\Load match data\Get position matches.Outputs[ADO NET Source Output]" />
            <path
              refId="Package\Load match data.Paths[ADO NET Source Output2]"
              endId="Package\Load match data\Multicast address.Inputs[Multicast Input 1]"
              name="ADO NET Source Output"
              startId="Package\Load match data\Get address matches.Outputs[ADO NET Source Output]" />
            <path
              refId="Package\Load match data.Paths[Derived Column Output8]"
              endId="Package\Load match data\Union all.Inputs[Union All Input 9]"
              name="Derived Column Output"
              startId="Package\Load match data\Code work mobile.Outputs[Derived Column Output]" />
            <path
              refId="Package\Load match data.Paths[Derived Column Output7]"
              endId="Package\Load match data\Union all.Inputs[Union All Input 8]"
              name="Derived Column Output"
              startId="Package\Load match data\Code work telephone.Outputs[Derived Column Output]" />
            <path
              refId="Package\Load match data.Paths[Derived Column Output6]"
              endId="Package\Load match data\Union all.Inputs[Union All Input 7]"
              name="Derived Column Output"
              startId="Package\Load match data\Code work postcode.Outputs[Derived Column Output]" />
            <path
              refId="Package\Load match data.Paths[Derived Column Output5]"
              endId="Package\Load match data\Union all.Inputs[Union All Input 6]"
              name="Derived Column Output"
              startId="Package\Load match data\Code home postcode.Outputs[Derived Column Output]" />
            <path
              refId="Package\Load match data.Paths[Derived Column Output4]"
              endId="Package\Load match data\Union all.Inputs[Union All Input 5]"
              name="Derived Column Output"
              startId="Package\Load match data\Code phone.Outputs[Derived Column Output]" />
            <path
              refId="Package\Load match data.Paths[Derived Column Output3]"
              endId="Package\Load match data\Union all.Inputs[Union All Input 2]"
              name="Derived Column Output"
              startId="Package\Load match data\Code mobile.Outputs[Derived Column Output]" />
            <path
              refId="Package\Load match data.Paths[Derived Column Output2]"
              endId="Package\Load match data\Union all.Inputs[Union All Input 4]"
              name="Derived Column Output"
              startId="Package\Load match data\Code telephone.Outputs[Derived Column Output]" />
            <path
              refId="Package\Load match data.Paths[Derived Column Output9]"
              endId="Package\Load match data\Union all.Inputs[Union All Input 10]"
              name="Derived Column Output"
              startId="Package\Load match data\Code work email.Outputs[Derived Column Output]" />
            <path
              refId="Package\Load match data.Paths[Derived Column Output]"
              endId="Package\Load match data\Union all.Inputs[Union All Input 3]"
              name="Derived Column Output"
              startId="Package\Load match data\Code home email.Outputs[Derived Column Output]" />
            <path
              refId="Package\Load match data.Paths[Derived Column Output1]"
              endId="Package\Load match data\Union all.Inputs[Union All Input 1]"
              name="Derived Column Output"
              startId="Package\Load match data\Code home DOB.Outputs[Derived Column Output]" />
            <path
              refId="Package\Load match data.Paths[Multicast Output 1]"
              endId="Package\Load match data\Remove null home emails.Inputs[Conditional Split Input]"
              name="Multicast Output 1"
              startId="Package\Load match data\Multicast person.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Load match data.Paths[Multicast Output 11]"
              endId="Package\Load match data\Remove null phone.Inputs[Conditional Split Input]"
              name="Multicast Output 1"
              startId="Package\Load match data\Multicast address.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Load match data.Paths[Multicast Output 12]"
              endId="Package\Load match data\Remove null work mobile.Inputs[Conditional Split Input]"
              name="Multicast Output 1"
              startId="Package\Load match data\Multicast position.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Load match data.Paths[Multicast Output 2]"
              endId="Package\Load match data\Remove null DOB.Inputs[Conditional Split Input]"
              name="Multicast Output 2"
              startId="Package\Load match data\Multicast person.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Load match data.Paths[Multicast Output 22]"
              endId="Package\Load match data\Remove null work telephone.Inputs[Conditional Split Input]"
              name="Multicast Output 2"
              startId="Package\Load match data\Multicast position.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Load match data.Paths[Multicast Output 21]"
              endId="Package\Load match data\Remove null home postcode.Inputs[Conditional Split Input]"
              name="Multicast Output 2"
              startId="Package\Load match data\Multicast address.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Load match data.Paths[Multicast Output 3]"
              endId="Package\Load match data\Remove null telephone.Inputs[Conditional Split Input]"
              name="Multicast Output 3"
              startId="Package\Load match data\Multicast person.Outputs[Multicast Output 3]" />
            <path
              refId="Package\Load match data.Paths[Multicast Output 31]"
              endId="Package\Load match data\Remove null work email.Inputs[Conditional Split Input]"
              name="Multicast Output 3"
              startId="Package\Load match data\Multicast position.Outputs[Multicast Output 3]" />
            <path
              refId="Package\Load match data.Paths[Multicast Output 4]"
              endId="Package\Load match data\Remove null mobile.Inputs[Conditional Split Input]"
              name="Multicast Output 4"
              startId="Package\Load match data\Multicast person.Outputs[Multicast Output 4]" />
            <path
              refId="Package\Load match data.Paths[Not null4]"
              endId="Package\Load match data\Code phone.Inputs[Derived Column Input]"
              name="Not null"
              startId="Package\Load match data\Remove null phone.Outputs[Not null]" />
            <path
              refId="Package\Load match data.Paths[Not null5]"
              endId="Package\Load match data\Code home postcode.Inputs[Derived Column Input]"
              name="Not null"
              startId="Package\Load match data\Remove null home postcode.Outputs[Not null]" />
            <path
              refId="Package\Load match data.Paths[Not null3]"
              endId="Package\Load match data\Code mobile.Inputs[Derived Column Input]"
              name="Not null"
              startId="Package\Load match data\Remove null mobile.Outputs[Not null]" />
            <path
              refId="Package\Load match data.Paths[Not null]"
              endId="Package\Load match data\Code home email.Inputs[Derived Column Input]"
              name="Not null"
              startId="Package\Load match data\Remove null home emails.Outputs[Not null]" />
            <path
              refId="Package\Load match data.Paths[Not null8]"
              endId="Package\Load match data\Code work email.Inputs[Derived Column Input]"
              name="Not null"
              startId="Package\Load match data\Remove null work email.Outputs[Not null]" />
            <path
              refId="Package\Load match data.Paths[Not null6]"
              endId="Package\Load match data\Code work telephone.Inputs[Derived Column Input]"
              name="Not null"
              startId="Package\Load match data\Remove null work telephone.Outputs[Not null]" />
            <path
              refId="Package\Load match data.Paths[Not null2]"
              endId="Package\Load match data\Code telephone.Inputs[Derived Column Input]"
              name="Not null"
              startId="Package\Load match data\Remove null telephone.Outputs[Not null]" />
            <path
              refId="Package\Load match data.Paths[Not null7]"
              endId="Package\Load match data\Code work mobile.Inputs[Derived Column Input]"
              name="Not null"
              startId="Package\Load match data\Remove null work mobile.Outputs[Not null]" />
            <path
              refId="Package\Load match data.Paths[Not null1]"
              endId="Package\Load match data\Code home DOB.Inputs[Derived Column Input]"
              name="Not null"
              startId="Package\Load match data\Remove null DOB.Outputs[Not null]" />
            <path
              refId="Package\Load match data.Paths[Output 0]"
              endId="Package\Load match data\Load match data.Inputs[ADO NET Destination Input]"
              name="Output 0"
              startId="Package\Load match data\De-noise match text.Outputs[Output 0]" />
            <path
              refId="Package\Load match data.Paths[Union All Output 1]"
              endId="Package\Load match data\De-noise match text.Inputs[Input 0]"
              name="Union All Output 1"
              startId="Package\Load match data\Union all.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Remove singletons"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{05B6FC1D-7556-4DC6-8E1A-42B050284B74}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Remove singletons"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CA099C18-4884-47C3-BA4F-335965B85796}"
          SQLTask:SqlStatementSource=";WITH cte AS (&#xA;SELECT ref, match_text, match_code, MIN(id) AS id&#xA;FROM ##uk_match_candidate_data&#xA;GROUP BY ref, match_text, match_code&#xA;HAVING COUNT(*) &gt; 1)&#xA;DELETE FROM a&#xA;FROM ##uk_match_candidate_data a&#xA;  INNER JOIN cte b&#xA;    ON a.ref = b.ref&#xA;   AND a.match_text = b.match_text&#xA;   AND a.match_code = b.match_code&#xA;WHERE a.id != b.id&#xA;&#xA;;WITH cte AS (&#xA;SELECT &#xA;  match_code&#xA;  ,match_text &#xA;FROM ##uk_match_candidate_data&#xA;GROUP BY&#xA;  match_code&#xA;  ,match_text &#xA;HAVING COUNT(*) = 1&#xA;)&#xA;DELETE &#xA;FROM ##uk_match_candidate_data&#xA;WHERE EXISTS &#xA;  (SELECT 1 &#xA;   FROM cte &#xA;   WHERE cte.match_code = ##uk_match_candidate_data.match_code &#xA;     AND cte.match_text = ##uk_match_candidate_data.match_text) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{43DF9889-18C8-4095-B9DC-6AD83D7C7111}"
      DTS:From="Package\Create tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load candidates" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{9DA1E987-DBC2-4AA0-A724-B1B37DF7FFFC}"
      DTS:From="Package\Load candidates"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Calculate genders" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{DA6EB389-CA38-4A5C-BE8F-8EB0536D4575}"
      DTS:From="Package\Load match data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Remove singletons" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{6B2C22B6-D530-4D6B-BAE3-DA5D2B9698F8}"
      DTS:From="Package\Load candidates"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Load match data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{44FE5265-963D-46BF-B3B4-5E6B3C83E859}"
      DTS:From="Package\Calculate genders"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Load match data" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\Create tables"
          TopLeft="65.1428582522334,42.2117652978864" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Load candidates"
          TopLeft="86.5714300457312,127.552942965353" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="136.342858252233,83.8117652978864">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28.6285717934978,43.7411776674661"
              Start="0,0"
              End="28.6285717934978,36.2411776674661">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.870588833733" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.870588833733"
                    Point2="0,21.870588833733"
                    Point3="4,21.870588833733" />
                  <mssgle:LineSegment
                    End="24.6285717934978,21.870588833733" />
                  <mssgle:CubicBezierSegment
                    Point1="24.6285717934978,21.870588833733"
                    Point2="28.6285717934978,21.870588833733"
                    Point3="28.6285717934978,25.870588833733" />
                  <mssgle:LineSegment
                    End="28.6285717934978,36.2411776674661" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\Calculate genders"
          TopLeft="87.4285729174711,215.341179490667" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="164.971430045731,169.152942965353">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-21.8095237949267,46.1882365253144"
              Start="0,0"
              End="-21.8095237949267,38.6882365253144">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4438842266917" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.4438842266917"
                    Point2="0,27.4438842266917"
                    Point3="-4,27.4438842266917" />
                  <mssgle:LineSegment
                    End="-17.8095237949267,27.4438842266917" />
                  <mssgle:CubicBezierSegment
                    Point1="-17.8095237949267,27.4438842266917"
                    Point2="-21.8095237949267,27.4438842266917"
                    Point3="-21.8095237949267,31.4438842266917" />
                  <mssgle:LineSegment
                    End="-21.8095237949267,38.6882365253144" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="169.6,41.6"
          Id="Package\Remove singletons"
          TopLeft="347.285720199955,295.764709357159" />
        <NodeLayout
          Size="160,41.6"
          Id="Package\Load match data"
          TopLeft="332.857148525666,144.835296148907" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="243.371430045731,148.352942965352">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="89.4857184799352,17.2823531835549"
              Start="0,0"
              End="81.9857184799352,17.2823531835549">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="40.7428592399676,0" />
                  <mssgle:CubicBezierSegment
                    Point1="40.7428592399676,0"
                    Point2="44.7428592399676,0"
                    Point3="44.7428592399676,4" />
                  <mssgle:LineSegment
                    End="44.7428592399676,13.2823531835549" />
                  <mssgle:CubicBezierSegment
                    Point1="44.7428592399676,13.2823531835549"
                    Point2="44.7428592399676,17.2823531835549"
                    Point3="48.7428592399676,17.2823531835549" />
                  <mssgle:LineSegment
                    End="81.9857184799352,17.2823531835549" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="194.895239584138,215.341179490667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="192.628575608195,-28.9058833417596"
              Start="0,0"
              End="192.628575608195,-21.4058833417596">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-10.4494848563209" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-10.4494848563209"
                    Point2="0,-14.4494848563209"
                    Point3="4,-14.4494848563209" />
                  <mssgle:LineSegment
                    End="188.628575608195,-14.4494848563209" />
                  <mssgle:CubicBezierSegment
                    Point1="188.628575608195,-14.4494848563209"
                    Point2="192.628575608195,-14.4494848563209"
                    Point3="192.628575608195,-18.4494848563209" />
                  <mssgle:LineSegment
                    End="192.628575608195,-21.4058833417596" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="435.138101029477,186.435296148907">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,109.329413208252"
              Start="0,0"
              End="0,101.829413208252">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,101.829413208252" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Load candidates">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Load candidates\Get candidates"
          TopLeft="76.0000012942723,36.7058828677273" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Load candidates\Load candidates"
          TopLeft="76.0000012942723,193.929414484493" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Load candidates\De-noise text"
          TopLeft="76.0000012942723,115.31764867611" />
        <EdgeLayout
          Id="Package\Load candidates.Paths[ADO NET Source Output]"
          TopLeft="154.400001294272,78.3058828677273">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.0117658083827"
              Start="0,0"
              End="0,29.5117658083827">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5117658083827" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load candidates.Paths[Output 0]"
          TopLeft="154.400001294272,156.91764867611">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.0117658083827"
              Start="0,0"
              End="0,29.5117658083827">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5117658083827" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load candidates\Get candidates">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load candidates\Load candidates">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load match data">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="176,41.6"
          Id="Package\Load match data\Code work postcode"
          TopLeft="1253.8,398.657142857143" />
        <NodeLayout
          Size="168,41.6"
          Id="Package\Load match data\Get work postcode"
          TopLeft="1261.05714285714,155.971428571429" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Load match data\Code telephone"
          TopLeft="430.400000000001,393.714285714286" />
        <NodeLayout
          Size="174.4,41.6"
          Id="Package\Load match data\Get person matches"
          TopLeft="275.6,111.114285714286" />
        <NodeLayout
          Size="158.4,41.6"
          Id="Package\Load match data\Code home DOB"
          TopLeft="236.4,385.114285714286" />
        <NodeLayout
          Size="160,41.6"
          Id="Package\Load match data\Load match data"
          TopLeft="1010.25714285714,736.828571428571" />
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\Load match data\Get address matches"
          TopLeft="849.400000000001,148.314285714286" />
        <EdgeLayout
          Id="Package\Load match data.Paths[ADO NET Source Output]"
          TopLeft="1343.42857142857,197.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,201.085714285714"
              Start="0,0"
              End="0,193.585714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,193.585714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Load match data\Multicast person"
          TopLeft="290,187.714285714286" />
        <EdgeLayout
          Id="Package\Load match data.Paths[ADO NET Source Output1]"
          TopLeft="365.6,152.714285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="201.6,41.6"
          Id="Package\Load match data\Remove null home emails"
          TopLeft="0.999999999999901,291.714285714286" />
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\Load match data\Remove null DOB"
          TopLeft="235,296.714285714286" />
        <EdgeLayout
          Id="Package\Load match data.Paths[Multicast Output 1]"
          TopLeft="323.76,229.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-221.96,62.3999999999999"
              Start="0,0"
              End="-221.96,54.8999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.7823109843081" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.7823109843081"
                    Point2="0,18.7823109843081"
                    Point3="-4,18.7823109843081" />
                  <mssgle:LineSegment
                    End="-217.96,18.7823109843081" />
                  <mssgle:CubicBezierSegment
                    Point1="-217.96,18.7823109843081"
                    Point2="-221.96,18.7823109843081"
                    Point3="-221.96,22.7823109843081" />
                  <mssgle:LineSegment
                    End="-221.96,54.8999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Multicast Output 2]"
          TopLeft="353.52,229.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-36.92,67.3999999999999"
              Start="0,0"
              End="-36.92,59.8999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.1666290868094" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.1666290868094"
                    Point2="0,30.1666290868094"
                    Point3="-4,30.1666290868094" />
                  <mssgle:LineSegment
                    End="-32.92,30.1666290868094" />
                  <mssgle:CubicBezierSegment
                    Point1="-32.92,30.1666290868094"
                    Point2="-36.92,30.1666290868094"
                    Point3="-36.92,34.1666290868094" />
                  <mssgle:LineSegment
                    End="-36.92,59.8999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="121.6,41.6"
          Id="Package\Load match data\Union all"
          TopLeft="1017.14285714286,564.285714285714" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Load match data\Code home email"
          TopLeft="32.9999999999999,382.714285714286" />
        <EdgeLayout
          Id="Package\Load match data.Paths[Not null]"
          TopLeft="101.8,333.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12,49.4"
              Start="0,0"
              End="12,41.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.7" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.7"
                    Point2="0,24.7"
                    Point3="4,24.7" />
                  <mssgle:LineSegment
                    End="8.00000000000004,24.7" />
                  <mssgle:CubicBezierSegment
                    Point1="8.00000000000004,24.7"
                    Point2="12,24.7"
                    Point3="12,28.7" />
                  <mssgle:LineSegment
                    End="12,41.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-11.44212890625,29.7,34.8842578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Derived Column Output]"
          TopLeft="113.8,424.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="921.542857142857,139.971428571428"
              Start="0,0"
              End="921.542857142857,132.471428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,103.724846292947" />
                  <mssgle:CubicBezierSegment
                    Point1="0,103.724846292947"
                    Point2="0,107.724846292947"
                    Point3="4,107.724846292947" />
                  <mssgle:LineSegment
                    End="917.542857142857,107.724846292947" />
                  <mssgle:CubicBezierSegment
                    Point1="917.542857142857,107.724846292947"
                    Point2="921.542857142857,107.724846292947"
                    Point3="921.542857142857,111.724846292947" />
                  <mssgle:LineSegment
                    End="921.542857142857,132.471428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Not null1]"
          TopLeft="316.1,338.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.8"
              Start="0,0"
              End="0,39.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-17.44212890625,14.77548828125,34.8842578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Derived Column Output1]"
          TopLeft="315.6,426.714285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="733.942857142858,137.571428571428"
              Start="0,0"
              End="733.942857142858,130.071428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,85.7461679950949" />
                  <mssgle:CubicBezierSegment
                    Point1="0,85.7461679950949"
                    Point2="0,89.7461679950949"
                    Point3="4,89.7461679950949" />
                  <mssgle:LineSegment
                    End="729.942857142858,89.7461679950949" />
                  <mssgle:CubicBezierSegment
                    Point1="729.942857142858,89.7461679950949"
                    Point2="733.942857142858,89.7461679950949"
                    Point3="733.942857142858,93.7461679950949" />
                  <mssgle:LineSegment
                    End="733.942857142858,130.071428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="176,41.6"
          Id="Package\Load match data\De-noise match text"
          TopLeft="999.571428571428,652" />
        <EdgeLayout
          Id="Package\Load match data.Paths[Union All Output 1]"
          TopLeft="1077.94285714286,605.885714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9.62857142857138,46.1142857142856"
              Start="0,0"
              End="9.62857142857138,38.6142857142856">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.0571428571428" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.0571428571428"
                    Point2="0,23.0571428571428"
                    Point3="4,23.0571428571428" />
                  <mssgle:LineSegment
                    End="5.62857142857138,23.0571428571428" />
                  <mssgle:CubicBezierSegment
                    Point1="5.62857142857138,23.0571428571428"
                    Point2="9.62857142857138,23.0571428571428"
                    Point3="9.62857142857138,27.0571428571428" />
                  <mssgle:LineSegment
                    End="9.62857142857138,38.6142857142856" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Output 0]"
          TopLeft="1088.91428571429,693.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.2285714285716"
              Start="0,0"
              End="0,35.7285714285716">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.7285714285716" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Load match data\Multicast address"
          TopLeft="852,221.714285714286" />
        <EdgeLayout
          Id="Package\Load match data.Paths[ADO NET Source Output2]"
          TopLeft="935.9,189.914285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.8"
              Start="0,0"
              End="0,24.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="214.4,41.6"
          Id="Package\Load match data\Remove null home postcode"
          TopLeft="1033,305.714285714286" />
        <EdgeLayout
          Id="Package\Load match data.Paths[Multicast Output 21]"
          TopLeft="958.4,263.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="181.8,42.4"
              Start="0,0"
              End="181.8,34.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.2094117647059" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.2094117647059"
                    Point2="0,17.2094117647059"
                    Point3="4,17.2094117647059" />
                  <mssgle:LineSegment
                    End="177.8,17.2094117647059" />
                  <mssgle:CubicBezierSegment
                    Point1="177.8,17.2094117647059"
                    Point2="181.8,17.2094117647059"
                    Point3="181.8,21.2094117647059" />
                  <mssgle:LineSegment
                    End="181.8,34.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="188.8,41.6"
          Id="Package\Load match data\Remove null telephone"
          TopLeft="421,299.714285714286" />
        <NodeLayout
          Size="172.8,41.6"
          Id="Package\Load match data\Remove null mobile"
          TopLeft="622,300.714285714286" />
        <EdgeLayout
          Id="Package\Load match data.Paths[Multicast Output 3]"
          TopLeft="383.28,229.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="132.12,70.3999999999999"
              Start="0,0"
              End="132.12,62.8999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5093573844419" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.5093573844419"
                    Point2="0,31.5093573844419"
                    Point3="4,31.5093573844419" />
                  <mssgle:LineSegment
                    End="128.12,31.5093573844419" />
                  <mssgle:CubicBezierSegment
                    Point1="128.12,31.5093573844419"
                    Point2="132.12,31.5093573844419"
                    Point3="132.12,35.5093573844419" />
                  <mssgle:LineSegment
                    End="132.12,62.8999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Multicast Output 4]"
          TopLeft="413.04,229.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="295.36,71.3999999999999"
              Start="0,0"
              End="295.36,63.8999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.4912981455064" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.4912981455064"
                    Point2="0,21.4912981455064"
                    Point3="4,21.4912981455064" />
                  <mssgle:LineSegment
                    End="291.36,21.4912981455064" />
                  <mssgle:CubicBezierSegment
                    Point1="291.36,21.4912981455064"
                    Point2="295.36,21.4912981455064"
                    Point3="295.36,25.4912981455064" />
                  <mssgle:LineSegment
                    End="295.36,63.8999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Load match data\Remove null phone"
          TopLeft="832,304.714285714286" />
        <EdgeLayout
          Id="Package\Load match data.Paths[Multicast Output 11]"
          TopLeft="907.2,263.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.3999999999996,41.4"
              Start="0,0"
              End="10.3999999999996,33.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.8035294117647" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.8035294117647"
                    Point2="0,16.8035294117647"
                    Point3="4,16.8035294117647" />
                  <mssgle:LineSegment
                    End="6.39999999999964,16.8035294117647" />
                  <mssgle:CubicBezierSegment
                    Point1="6.39999999999964,16.8035294117647"
                    Point2="10.3999999999996,16.8035294117647"
                    Point3="10.3999999999996,20.8035294117647" />
                  <mssgle:LineSegment
                    End="10.3999999999996,33.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Not null2]"
          TopLeft="515.4,341.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.19999999999908,52.4000000000001"
              Start="0,0"
              End="-8.19999999999908,44.9000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.2" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.2"
                    Point2="0,26.2"
                    Point3="-4,26.2" />
                  <mssgle:LineSegment
                    End="-4.19999999999908,26.2" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.19999999999908,26.2"
                    Point2="-8.19999999999908,26.2"
                    Point3="-8.19999999999908,30.2" />
                  <mssgle:LineSegment
                    End="-8.19999999999908,44.9000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-21.5421289062495,31.2,34.8842578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Derived Column Output2]"
          TopLeft="507.200000000001,435.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="556.542857142856,128.971428571428"
              Start="0,0"
              End="556.542857142856,121.471428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.0117584463952" />
                  <mssgle:CubicBezierSegment
                    Point1="0,69.0117584463952"
                    Point2="0,73.0117584463952"
                    Point3="4,73.0117584463952" />
                  <mssgle:LineSegment
                    End="552.542857142856,73.0117584463952" />
                  <mssgle:CubicBezierSegment
                    Point1="552.542857142856,73.0117584463952"
                    Point2="556.542857142856,73.0117584463952"
                    Point3="556.542857142856,77.0117584463952" />
                  <mssgle:LineSegment
                    End="556.542857142856,121.471428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="139.2,41.6"
          Id="Package\Load match data\Code mobile"
          TopLeft="640,401.714285714286" />
        <NodeLayout
          Size="136,41.6"
          Id="Package\Load match data\Code phone"
          TopLeft="839,404.714285714286" />
        <EdgeLayout
          Id="Package\Load match data.Paths[Not null3]"
          TopLeft="709,342.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.4"
              Start="0,0"
              End="0,51.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-17.44212890625,21.07548828125,34.8842578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Not null4]"
          TopLeft="917.6,346.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10.5999999999998,58.4"
              Start="0,0"
              End="-10.5999999999998,50.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.2" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.2"
                    Point2="0,29.2"
                    Point3="-4,29.2" />
                  <mssgle:LineSegment
                    End="-6.5999999999998,29.2" />
                  <mssgle:CubicBezierSegment
                    Point1="-6.5999999999998,29.2"
                    Point2="-10.5999999999998,29.2"
                    Point3="-10.5999999999998,33.2" />
                  <mssgle:LineSegment
                    End="-10.5999999999998,50.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-22.7421289062499,34.2,34.8842578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Derived Column Output3]"
          TopLeft="709.6,443.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="368.342857142857,120.971428571428"
              Start="0,0"
              End="368.342857142857,113.471428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.4857142857142" />
                  <mssgle:CubicBezierSegment
                    Point1="0,56.4857142857142"
                    Point2="0,60.4857142857142"
                    Point3="4,60.4857142857142" />
                  <mssgle:LineSegment
                    End="364.342857142857,60.4857142857142" />
                  <mssgle:CubicBezierSegment
                    Point1="364.342857142857,60.4857142857142"
                    Point2="368.342857142857,60.4857142857142"
                    Point3="368.342857142857,64.4857142857142" />
                  <mssgle:LineSegment
                    End="368.342857142857,113.471428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Derived Column Output4]"
          TopLeft="907,446.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="185.142857142857,117.971428571428"
              Start="0,0"
              End="185.142857142857,110.471428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.7845703644586" />
                  <mssgle:CubicBezierSegment
                    Point1="0,62.7845703644586"
                    Point2="0,66.7845703644586"
                    Point3="4,66.7845703644586" />
                  <mssgle:LineSegment
                    End="181.142857142857,66.7845703644586" />
                  <mssgle:CubicBezierSegment
                    Point1="181.142857142857,66.7845703644586"
                    Point2="185.142857142857,66.7845703644586"
                    Point3="185.142857142857,70.7845703644586" />
                  <mssgle:LineSegment
                    End="185.142857142857,110.471428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\Load match data\Code home postcode"
          TopLeft="1033,398.714285714286" />
        <EdgeLayout
          Id="Package\Load match data.Paths[Not null5]"
          TopLeft="1140.2,347.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-17.6000000000001,51.4"
              Start="0,0"
              End="-17.6000000000001,43.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.7" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.7"
                    Point2="0,25.7"
                    Point3="-4,25.7" />
                  <mssgle:LineSegment
                    End="-13.6000000000001,25.7" />
                  <mssgle:CubicBezierSegment
                    Point1="-13.6000000000001,25.7"
                    Point2="-17.6000000000001,25.7"
                    Point3="-17.6000000000001,29.7" />
                  <mssgle:LineSegment
                    End="-17.6000000000001,43.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.2421289062501,30.7,34.8842578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Derived Column Output5]"
          TopLeft="1122.6,440.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-16.2571428571428,123.971428571428"
              Start="0,0"
              End="-16.2571428571428,116.471428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.8740649908032" />
                  <mssgle:CubicBezierSegment
                    Point1="0,76.8740649908032"
                    Point2="0,80.8740649908032"
                    Point3="-4,80.8740649908032" />
                  <mssgle:LineSegment
                    End="-12.2571428571428,80.8740649908032" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.2571428571428,80.8740649908032"
                    Point2="-16.2571428571428,80.8740649908032"
                    Point3="-16.2571428571428,84.8740649908032" />
                  <mssgle:LineSegment
                    End="-16.2571428571428,116.471428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Derived Column Output6]"
          TopLeft="1341.8,440.257142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-221.257142857139,124.028571428571"
              Start="0,0"
              End="-221.257142857139,116.528571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,91.4549005424955" />
                  <mssgle:CubicBezierSegment
                    Point1="0,91.4549005424955"
                    Point2="0,95.4549005424955"
                    Point3="-4,95.4549005424955" />
                  <mssgle:LineSegment
                    End="-217.257142857139,95.4549005424955" />
                  <mssgle:CubicBezierSegment
                    Point1="-217.257142857139,95.4549005424955"
                    Point2="-221.257142857139,95.4549005424955"
                    Point3="-221.257142857139,99.4549005424955" />
                  <mssgle:LineSegment
                    End="-221.257142857139,116.528571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\Load match data\Get position matches"
          TopLeft="1491.42857142857,155.428571428571" />
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\Load match data\Code work telephone"
          TopLeft="1457,404.142857142857" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Load match data\Multicast position"
          TopLeft="1523.42857142857,242.285714285714" />
        <EdgeLayout
          Id="Package\Load match data.Paths[ADO NET Source Output3]"
          TopLeft="1581.02857142857,197.028571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23.1999999999998,45.2571428571429"
              Start="0,0"
              End="23.1999999999998,37.7571428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6285714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.6285714285714"
                    Point2="0,22.6285714285714"
                    Point3="4,22.6285714285714" />
                  <mssgle:LineSegment
                    End="19.1999999999998,22.6285714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="19.1999999999998,22.6285714285714"
                    Point2="23.1999999999998,22.6285714285714"
                    Point3="23.1999999999998,26.6285714285714" />
                  <mssgle:LineSegment
                    End="23.1999999999998,37.7571428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="214.4,41.6"
          Id="Package\Load match data\Remove null work telephone"
          TopLeft="1372.42857142857,319.571428571429" />
        <EdgeLayout
          Id="Package\Load match data.Paths[Multicast Output 22]"
          TopLeft="1604.22857142857,283.885714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-124.6,35.6857142857143"
              Start="0,0"
              End="-124.6,28.1857142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.8428571428571" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.8428571428571"
                    Point2="0,17.8428571428571"
                    Point3="-4,17.8428571428571" />
                  <mssgle:LineSegment
                    End="-120.6,17.8428571428571" />
                  <mssgle:CubicBezierSegment
                    Point1="-120.6,17.8428571428571"
                    Point2="-124.6,17.8428571428571"
                    Point3="-124.6,21.8428571428571" />
                  <mssgle:LineSegment
                    End="-124.6,28.1857142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Not null6]"
          TopLeft="1479.62857142857,361.171428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67.7714285714285,42.9714285714286"
              Start="0,0"
              End="67.7714285714285,35.4714285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.4857142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.4857142857143"
                    Point2="0,21.4857142857143"
                    Point3="4,21.4857142857143" />
                  <mssgle:LineSegment
                    End="63.7714285714285,21.4857142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="63.7714285714285,21.4857142857143"
                    Point2="67.7714285714285,21.4857142857143"
                    Point3="67.7714285714285,25.4857142857143" />
                  <mssgle:LineSegment
                    End="67.7714285714285,35.4714285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="16.4435853794642,26.4857142857143,34.8842578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="198.4,41.6"
          Id="Package\Load match data\Remove null work mobile"
          TopLeft="1619.28571428571,329.857142857143" />
        <EdgeLayout
          Id="Package\Load match data.Paths[Multicast Output 12]"
          TopLeft="1629.82857142857,283.885714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="88.6571428571428,45.9714285714285"
              Start="0,0"
              End="88.6571428571428,38.4714285714285">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.6589915966386" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.6589915966386"
                    Point2="0,18.6589915966386"
                    Point3="4,18.6589915966386" />
                  <mssgle:LineSegment
                    End="84.6571428571428,18.6589915966386" />
                  <mssgle:CubicBezierSegment
                    Point1="84.6571428571428,18.6589915966386"
                    Point2="88.6571428571428,18.6589915966386"
                    Point3="88.6571428571428,22.6589915966386" />
                  <mssgle:LineSegment
                    End="88.6571428571428,38.4714285714285" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Load match data\Code work mobile"
          TopLeft="1676.42857142857,416.714285714286" />
        <EdgeLayout
          Id="Package\Load match data.Paths[Not null7]"
          TopLeft="1718.48571428571,371.457142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="40.3428571428574,45.2571428571428"
              Start="0,0"
              End="40.3428571428574,37.7571428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6285714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.6285714285714"
                    Point2="0,22.6285714285714"
                    Point3="4,22.6285714285714" />
                  <mssgle:LineSegment
                    End="36.3428571428574,22.6285714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="36.3428571428574,22.6285714285714"
                    Point2="40.3428571428574,22.6285714285714"
                    Point3="40.3428571428574,26.6285714285714" />
                  <mssgle:LineSegment
                    End="40.3428571428574,37.7571428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="2.72929966517869,27.6285714285714,34.8842578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Derived Column Output7]"
          TopLeft="1547.4,445.742857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-425.279365079365,118.542857142857"
              Start="0,0"
              End="-425.279365079365,111.042857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,89.0922092832541" />
                  <mssgle:CubicBezierSegment
                    Point1="0,89.0922092832541"
                    Point2="0,93.0922092832541"
                    Point3="-4,93.0922092832541" />
                  <mssgle:LineSegment
                    End="-421.279365079365,93.0922092832541" />
                  <mssgle:CubicBezierSegment
                    Point1="-421.279365079365,93.0922092832541"
                    Point2="-425.279365079365,93.0922092832541"
                    Point3="-425.279365079365,97.0922092832541" />
                  <mssgle:LineSegment
                    End="-425.279365079365,111.042857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Derived Column Output8]"
          TopLeft="1758.82857142857,458.314285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-635.445714285715,105.971428571429"
              Start="0,0"
              End="-635.445714285715,98.4714285714285">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.5990396158464" />
                  <mssgle:CubicBezierSegment
                    Point1="0,80.5990396158464"
                    Point2="0,84.5990396158464"
                    Point3="-4,84.5990396158464" />
                  <mssgle:LineSegment
                    End="-631.445714285715,84.5990396158464" />
                  <mssgle:CubicBezierSegment
                    Point1="-631.445714285715,84.5990396158464"
                    Point2="-635.445714285715,84.5990396158464"
                    Point3="-635.445714285715,88.5990396158464" />
                  <mssgle:LineSegment
                    End="-635.445714285715,98.4714285714285" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="193.6,41.6"
          Id="Package\Load match data\Remove null work email"
          TopLeft="1860.42857142857,327.571428571429" />
        <EdgeLayout
          Id="Package\Load match data.Paths[Multicast Output 31]"
          TopLeft="1642.62857142857,283.885714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="314.6,43.6857142857143"
              Start="0,0"
              End="314.6,36.1857142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.034693877551" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.034693877551"
                    Point2="0,15.034693877551"
                    Point3="4,15.034693877551" />
                  <mssgle:LineSegment
                    End="310.6,15.034693877551" />
                  <mssgle:CubicBezierSegment
                    Point1="310.6,15.034693877551"
                    Point2="314.6,15.034693877551"
                    Point3="314.6,19.034693877551" />
                  <mssgle:LineSegment
                    End="314.6,36.1857142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="158.4,41.6"
          Id="Package\Load match data\Code work email"
          TopLeft="1875.28571428571,415.571428571429" />
        <EdgeLayout
          Id="Package\Load match data.Paths[Not null8]"
          TopLeft="1955.85714285714,369.171428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.3999999999999"
              Start="0,0"
              End="0,38.8999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.8999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-17.44212890625,14.57548828125,34.8842578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load match data.Paths[Derived Column Output9]"
          TopLeft="1954.48571428571,457.171428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-830.07012987013,107.114285714286"
              Start="0,0"
              End="-830.07012987013,99.6142857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,82.6868759507675" />
                  <mssgle:CubicBezierSegment
                    Point1="0,82.6868759507675"
                    Point2="0,86.6868759507675"
                    Point3="-4,86.6868759507675" />
                  <mssgle:LineSegment
                    End="-826.07012987013,86.6868759507675" />
                  <mssgle:CubicBezierSegment
                    Point1="-826.07012987013,86.6868759507675"
                    Point2="-830.07012987013,86.6868759507675"
                    Point3="-830.07012987013,90.6868759507675" />
                  <mssgle:LineSegment
                    End="-830.07012987013,99.6142857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load match data\Get person matches">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load match data\Load match data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load match data\Get address matches">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load match data\Get position matches">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>