<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/8/2015 1:34:11 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NCOH274"
  DTS:CreatorName="MPADGLOBAL\davesexton"
  DTS:DTSID="{6653DB3C-BA83-4A1A-82FD-43D929F24AF1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.2430.0"
  DTS:LocaleID="2057"
  DTS:ObjectName="person_matching"
  DTS:PackageType="5"
  DTS:VersionBuild="129"
  DTS:VersionGUID="{981D8576-D4D2-4182-8527-D74A5A9EB237}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[output_csv]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{5016FA2F-8B1E-4D25-A5BF-6A3D661031CB}"
      DTS:ObjectName="output_csv">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Projects\git\mpi_merge\output\person_matches.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="person_ref"
              DTS:DTSID="{4EA25404-79F5-4E72-AF17-FE9283FC9373}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="matched_person_ref"
              DTS:DTSID="{48F941B3-FEB3-442E-B74A-DF5C63DDFAD2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="name"
              DTS:DTSID="{FB2024AC-65FD-4090-ADCB-065697784EE1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="matched_name"
              DTS:DTSID="{4E252E3F-DA61-4D95-95F1-90C22F7855AF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="match_strength"
              DTS:DTSID="{792E5A06-1791-44F9-BCD4-1F1D68E66726}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[source]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{CA099C18-4884-47C3-BA4F-335965B85796}"
      DTS:ObjectName="source">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DEV-SR-MSSQL-17\APPREPORTS;Initial Catalog=master;Integrated Security=True;Application Name=SSIS-loader-{CA099C18-4884-47C3-BA4F-335965B85796}UK-B-SQL-114.P7MPUK;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[target]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{DF2B02C5-883B-4BAA-B3D9-17A96036ABE2}"
      DTS:ObjectName="target">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DEV-SR-MSSQL-17\APPREPORTS;Initial Catalog=datawarehouse;Integrated Security=True;Application Name=SSIS-Package-{DF2B02C5-883B-4BAA-B3D9-17A96036ABE2}localhost.un_merge;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B874E01C-8648-4E37-95A3-05E073A9F934}"
      DTS:ObjectName="linked_server_name"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">P7MPUK-SYB</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Load loop"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{9F8404F5-8B78-4938-9B9A-E9A9E0E237F6}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load loop">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachItemEnumerator"
        DTS:DTSID="{9229D20E-7CF6-4DBB-B5DD-A42753173C16}"
        DTS:ObjectName="{9229D20E-7CF6-4DBB-B5DD-A42753173C16}">
        <DTS:ObjectData>
          <FEIEItems>
            <FEIEItem>
              <FEIEItemValue
                Type="2"
                Value="1" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="2"
                Value="2" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="2"
                Value="3" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="2"
                Value="4" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="2"
                Value="5" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="2"
                Value="6" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="2"
                Value="7" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="2"
                Value="8" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="2"
                Value="9" />
            </FEIEItem>
          </FEIEItems>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{A4E7B9AC-130C-4EAB-81A4-BC358AB50364}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="match_code">
          <DTS:VariableValue
            DTS:DataType="3">8</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{F54AC206-ED20-4263-9286-9F458F410E69}"
          DTS:EvaluateAsExpression="True"
          DTS:Expression="&quot;SELECT DISTINCT * FROM OPENQUERY([&quot; + @[$Package::linked_server_name] + &quot;], '&#xA;SELECT &#xA;  person.person_ref&#xA;  ,person.first_name + '' '' + person.last_name AS name&#xA;  ,UPPER(person.first_name) AS match_first_name&#xA;  ,UPPER(person.last_name) AS match_last_name&#xA;  ,CAST(UPPER(REPLACE(address.zipcode, '' '', '''')) AS VARCHAR(255)) AS match_text&#xA;  ,UPPER(person.title) AS title&#xA;  ,person.gender&#xA;FROM person&#xA;  INNER JOIN address ON person.person_ref = address.person_ref                        &#xA;WHERE person.first_name IS NOT NULL&#xA;  AND person.last_name IS NOT NULL &#xA;  AND address.main_address = ''Y''&#xA;  AND address.zipcode IS NOT NULL&#xA;  AND LEN(address.zipcode) &gt; 2&#xA;  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')&#xA;')&quot;"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="match_sql_1">
          <DTS:VariableValue
            DTS:DataType="8">SELECT DISTINCT * FROM OPENQUERY([P7MPUK-SYB], '
SELECT 
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(UPPER(REPLACE(address.zipcode, '' '', '''')) AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
  INNER JOIN address ON person.person_ref = address.person_ref                        
WHERE person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND address.main_address = ''Y''
  AND address.zipcode IS NOT NULL
  AND LEN(address.zipcode) &gt; 2
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
')</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{212030A5-BCF1-443A-990B-49CC24B93206}"
          DTS:EvaluateAsExpression="True"
          DTS:Expression="&quot;SELECT DISTINCT * FROM OPENQUERY([&quot; + @[$Package::linked_server_name] + &quot;], '&#xA;SELECT &#xA;  person.person_ref&#xA;  ,person.first_name + '' '' + person.last_name AS name&#xA;  ,UPPER(person.first_name) AS match_first_name&#xA;  ,UPPER(person.last_name) AS match_last_name&#xA;  ,CAST(UPPER(REPLACE(organisation.name, '' '', '''')) AS VARCHAR(255)) AS match_text&#xA;  ,UPPER(person.title) AS title&#xA;  ,person.gender&#xA;FROM person&#xA;  INNER JOIN position ON person.person_ref = position.person_ref&#xA;  INNER JOIN organisation ON position.organisation_ref = organisation.organisation_ref&#xA;WHERE person.first_name IS NOT NULL&#xA;  AND person.last_name IS NOT NULL &#xA;  AND organisation.name IS NOT NULL&#xA;  AND LEN(organisation.name) &gt; 1&#xA;  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')&#xA;')&quot;"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="match_sql_2">
          <DTS:VariableValue
            DTS:DataType="8">SELECT DISTINCT * FROM OPENQUERY([P7MPUK-SYB], '
SELECT 
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(UPPER(REPLACE(organisation.name, '' '', '''')) AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
  INNER JOIN position ON person.person_ref = position.person_ref
  INNER JOIN organisation ON position.organisation_ref = organisation.organisation_ref
WHERE person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND organisation.name IS NOT NULL
  AND LEN(organisation.name) &gt; 1
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
')</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{605D40B6-9F7C-429C-85E5-EB5EAD82E301}"
          DTS:EvaluateAsExpression="True"
          DTS:Expression="&quot;SELECT DISTINCT * FROM OPENQUERY([&quot; + @[$Package::linked_server_name] + &quot;], '&#xA;SELECT &#xA;  person.person_ref&#xA;  ,person.first_name + '' '' + person.last_name AS name&#xA;  ,UPPER(person.first_name) AS match_first_name&#xA;  ,UPPER(person.last_name) AS match_last_name&#xA;  ,CAST(CONVERT(VARCHAR, person.date_of_birth, 121) AS VARCHAR(255)) AS match_text&#xA;  ,UPPER(person.title) AS title&#xA;  ,person.gender&#xA;FROM person&#xA;WHERE person.first_name IS NOT NULL&#xA;  AND person.last_name IS NOT NULL &#xA;  AND person.date_of_birth IS NOT NULL&#xA;  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')&#xA;')&quot;"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="match_sql_3">
          <DTS:VariableValue
            DTS:DataType="8">SELECT DISTINCT * FROM OPENQUERY([P7MPUK-SYB], '
SELECT 
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(CONVERT(VARCHAR, person.date_of_birth, 121) AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
WHERE person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND person.date_of_birth IS NOT NULL
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
')</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{452C4F7F-5785-45C1-9D2D-B40F1D9ACCB5}"
          DTS:EvaluateAsExpression="True"
          DTS:Expression="&quot;SELECT DISTINCT * FROM OPENQUERY([&quot; + @[$Package::linked_server_name] + &quot;], '&#xA;SELECT &#xA;  person.person_ref&#xA;  ,person.first_name + '' '' + person.last_name AS name&#xA;  ,UPPER(person.first_name) AS match_first_name&#xA;  ,UPPER(person.last_name) AS match_last_name&#xA;  ,CAST(UPPER(REPLACE(REPLACE(person.email_address, '' '', ''''), ''!'', '''')) AS VARCHAR(255)) AS match_text&#xA;  ,UPPER(person.title) AS title&#xA;  ,person.gender&#xA;FROM person&#xA;WHERE person.first_name IS NOT NULL&#xA;  AND person.last_name IS NOT NULL &#xA;  AND person.email_address IS NOT NULL&#xA;  AND LEN(person.email_address) &gt; 2&#xA;  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')&#xA;  AND person.email_address LIKE ''%@%''&#xA;  AND person.email_address NOT LIKE ''%@broadbean.net%''&#xA;  AND person.email_address NOT LIKE ''%@pagepersonnel.co.uk%''&#xA;  AND person.email_address NOT LIKE ''%@michaelpage.com%''&#xA;')&quot;"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="match_sql_4">
          <DTS:VariableValue
            DTS:DataType="8">SELECT DISTINCT * FROM OPENQUERY([P7MPUK-SYB], '
SELECT 
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(UPPER(REPLACE(REPLACE(person.email_address, '' '', ''''), ''!'', '''')) AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
WHERE person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND person.email_address IS NOT NULL
  AND LEN(person.email_address) &gt; 2
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
  AND person.email_address LIKE ''%@%''
  AND person.email_address NOT LIKE ''%@broadbean.net%''
  AND person.email_address NOT LIKE ''%@pagepersonnel.co.uk%''
  AND person.email_address NOT LIKE ''%@michaelpage.com%''
')</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{84328AA7-C152-47DE-857B-2555306ABF0B}"
          DTS:EvaluateAsExpression="True"
          DTS:Expression="&quot;SELECT DISTINCT * FROM OPENQUERY([&quot; + @[$Package::linked_server_name] + &quot;], '&#xA;SELECT &#xA;  person.person_ref&#xA;  ,person.first_name + '' '' + person.last_name AS name&#xA;  ,UPPER(person.first_name) AS match_first_name&#xA;  ,UPPER(person.last_name) AS match_last_name&#xA;  ,CAST(UPPER(REPLACE(address.zipcode, '' '', '''')) AS VARCHAR(255)) AS match_text&#xA;  ,UPPER(person.title) AS title&#xA;  ,person.gender&#xA;FROM person&#xA;  INNER JOIN position ON person.person_ref = position.person_ref&#xA;  INNER JOIN address ON position.address_ref = address.address_ref&#xA;WHERE person.first_name IS NOT NULL&#xA;  AND person.last_name IS NOT NULL &#xA;  AND address.zipcode IS NOT NULL&#xA;  AND LEN(address.zipcode) &gt; 2&#xA;  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')&#xA;')&#xA;&quot;"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="match_sql_5">
          <DTS:VariableValue
            DTS:DataType="8">SELECT DISTINCT * FROM OPENQUERY([P7MPUK-SYB], '
SELECT 
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(UPPER(REPLACE(address.zipcode, '' '', '''')) AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
  INNER JOIN position ON person.person_ref = position.person_ref
  INNER JOIN address ON position.address_ref = address.address_ref
WHERE person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND address.zipcode IS NOT NULL
  AND LEN(address.zipcode) &gt; 2
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
')
</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{875C34C1-F6CE-4327-AE00-DC41E344FE2F}"
          DTS:EvaluateAsExpression="True"
          DTS:Expression="&quot;SELECT DISTINCT * FROM OPENQUERY([&quot; + @[$Package::linked_server_name] +&quot;], '&#xA;SELECT &#xA;  person.person_ref&#xA;  ,person.first_name + '' '' + person.last_name AS name&#xA;  ,UPPER(person.first_name) AS match_first_name&#xA;  ,UPPER(person.last_name) AS match_last_name&#xA;  ,CAST(UPPER(REPLACE(position.displayname, '' '', '''')) AS VARCHAR(255)) AS match_text&#xA;  ,UPPER(person.title) AS title&#xA;  ,person.gender&#xA;FROM person&#xA;  INNER JOIN position ON person.person_ref = position.person_ref&#xA;WHERE person.first_name IS NOT NULL&#xA;  AND person.last_name IS NOT NULL &#xA;  AND position.displayname IS NOT NULL&#xA;  AND LEN(position.displayname) &gt; 2&#xA;  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')&#xA;')&quot;"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="match_sql_6">
          <DTS:VariableValue
            DTS:DataType="8">SELECT DISTINCT * FROM OPENQUERY([P7MPUK-SYB], '
SELECT 
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(UPPER(REPLACE(position.displayname, '' '', '''')) AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
  INNER JOIN position ON person.person_ref = position.person_ref
WHERE person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND position.displayname IS NOT NULL
  AND LEN(position.displayname) &gt; 2
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
')</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{42DF17BC-8242-44C5-B504-A7AB9C9B3FF6}"
          DTS:EvaluateAsExpression="True"
          DTS:Expression="&quot;SELECT DISTINCT * FROM OPENQUERY([&quot; + @[$Package::linked_server_name] +&quot;], '&#xA;SELECT &#xA;  person.person_ref&#xA;  ,person.first_name + '' '' + person.last_name AS name&#xA;  ,UPPER(person.first_name) AS match_first_name&#xA;  ,UPPER(person.last_name) AS match_last_name&#xA;  ,CAST(UPPER(REPLACE(REPLACE(position.email_address, '' '', ''''), ''!'', '''')) AS VARCHAR(255)) AS match_text&#xA;  ,UPPER(person.title) AS title&#xA;  ,person.gender&#xA;FROM person&#xA;  INNER JOIN position ON person.person_ref = position.person_ref&#xA;WHERE person.first_name IS NOT NULL&#xA;  AND person.last_name IS NOT NULL &#xA;  AND position.email_address IS NOT NULL&#xA;  AND LEN(position.email_address) &gt; 2&#xA;  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')&#xA;  AND position.email_address LIKE ''%@%''&#xA;  AND position.email_address NOT LIKE ''%dept%@%''&#xA;  AND position.email_address NOT LIKE ''%sale%@%''&#xA;  AND position.email_address NOT LIKE ''%account%@%''&#xA;  AND position.email_address NOT LIKE ''%team%@%''&#xA;  AND position.email_address NOT LIKE ''%admin%@%''&#xA;  AND position.email_address NOT LIKE ''%group%@%''&#xA;&#xA;')&quot;"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="match_sql_7">
          <DTS:VariableValue
            DTS:DataType="8">SELECT DISTINCT * FROM OPENQUERY([P7MPUK-SYB], '
SELECT 
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(UPPER(REPLACE(REPLACE(position.email_address, '' '', ''''), ''!'', '''')) AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
  INNER JOIN position ON person.person_ref = position.person_ref
WHERE person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND position.email_address IS NOT NULL
  AND LEN(position.email_address) &gt; 2
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
  AND position.email_address LIKE ''%@%''
  AND position.email_address NOT LIKE ''%dept%@%''
  AND position.email_address NOT LIKE ''%sale%@%''
  AND position.email_address NOT LIKE ''%account%@%''
  AND position.email_address NOT LIKE ''%team%@%''
  AND position.email_address NOT LIKE ''%admin%@%''
  AND position.email_address NOT LIKE ''%group%@%''

')</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{F739870C-1781-41EB-A790-6AF42FF72272}"
          DTS:EvaluateAsExpression="True"
          DTS:Expression="&quot;SELECT DISTINCT * FROM OPENQUERY([&quot; + @[$Package::linked_server_name] +&quot;], '&#xA;SELECT&#xA;  person.person_ref&#xA;  ,person.first_name + '' '' + person.last_name AS name&#xA;  ,UPPER(person.first_name) AS match_first_name&#xA;  ,UPPER(person.last_name) AS match_last_name&#xA;  ,CAST(address.zc_telephone_number AS VARCHAR(255)) AS match_text&#xA;  ,UPPER(person.title) AS title&#xA;  ,person.gender&#xA;FROM person&#xA;  INNER JOIN address ON person.person_ref = address.person_ref&#xA;WHERE LEN(zc_telephone_number) &gt; 9&#xA;  AND address.person_ref IS NOT NULL&#xA;  AND address.type = ''HOME''&#xA;  AND address.main_address = ''Y''&#xA;  AND ISNUMERIC(zc_telephone_number) != 0&#xA;  AND zc_telephone_number IS NOT NULL&#xA;  AND person.first_name IS NOT NULL&#xA;  AND person.last_name IS NOT NULL &#xA;  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')&#xA;UNION ALL&#xA;SELECT&#xA;  person.person_ref&#xA;  ,person.first_name + '' '' + person.last_name AS name&#xA;  ,UPPER(person.first_name) AS match_first_name&#xA;  ,UPPER(person.last_name) AS match_last_name&#xA;  ,CAST(zc_mobile_telno AS VARCHAR(255)) AS match_text&#xA;  ,UPPER(person.title) AS title&#xA;  ,person.gender&#xA;FROM person&#xA;WHERE LEN(zc_mobile_telno) &gt; 9&#xA;  AND ISNUMERIC(zc_mobile_telno) != 0&#xA;  AND zc_mobile_telno IS NOT NULL&#xA;  AND person.first_name IS NOT NULL&#xA;  AND person.last_name IS NOT NULL &#xA;  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')&#xA;UNION ALL&#xA;SELECT &#xA;  person.person_ref&#xA;  ,person.first_name + '' '' + person.last_name AS name&#xA;  ,UPPER(person.first_name) AS match_first_name&#xA;  ,UPPER(person.last_name) AS match_last_name&#xA;  ,CAST(zc_day_telno AS VARCHAR(255)) AS match_text&#xA;  ,UPPER(person.title) AS title&#xA;  ,person.gender&#xA;FROM person&#xA;WHERE LEN(zc_day_telno) &gt; 9&#xA;  AND ISNUMERIC(zc_day_telno) != 0&#xA;  AND zc_day_telno IS NOT NULL&#xA;  AND person.first_name IS NOT NULL&#xA;  AND person.last_name IS NOT NULL &#xA;  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')&#xA;')&quot;"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="match_sql_8">
          <DTS:VariableValue
            DTS:DataType="8">SELECT DISTINCT * FROM OPENQUERY([P7MPUK-SYB], '
SELECT
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(address.zc_telephone_number AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
  INNER JOIN address ON person.person_ref = address.person_ref
WHERE LEN(zc_telephone_number) &gt; 9
  AND address.person_ref IS NOT NULL
  AND address.type = ''HOME''
  AND address.main_address = ''Y''
  AND ISNUMERIC(zc_telephone_number) != 0
  AND zc_telephone_number IS NOT NULL
  AND person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
UNION ALL
SELECT
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(zc_mobile_telno AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
WHERE LEN(zc_mobile_telno) &gt; 9
  AND ISNUMERIC(zc_mobile_telno) != 0
  AND zc_mobile_telno IS NOT NULL
  AND person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
UNION ALL
SELECT 
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(zc_day_telno AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
WHERE LEN(zc_day_telno) &gt; 9
  AND ISNUMERIC(zc_day_telno) != 0
  AND zc_day_telno IS NOT NULL
  AND person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
')</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{96ED1A9E-F7D2-4628-9417-AE20DDF82AFC}"
          DTS:EvaluateAsExpression="True"
          DTS:Expression="&quot;SELECT DISTINCT * FROM OPENQUERY([&quot; + @[$Package::linked_server_name] +&quot;], '&#xA;SELECT&#xA;  person.person_ref&#xA;  ,person.first_name + '' '' + person.last_name AS name&#xA;  ,UPPER(person.first_name) AS match_first_name&#xA;  ,UPPER(person.last_name) AS match_last_name&#xA;  ,CAST(position.zc_telephone_number AS VARCHAR(255)) AS match_text&#xA;  ,UPPER(person.title) AS title&#xA;  ,person.gender&#xA;FROM person&#xA;  INNER JOIN position ON person.person_ref = position.person_ref&#xA;WHERE LEN(position.zc_telephone_number) &gt; 9&#xA;  AND person.person_ref IS NOT NULL&#xA;  AND ISNUMERIC(position.zc_telephone_number) != 0&#xA;  AND position.zc_telephone_number IS NOT NULL&#xA;  AND person.first_name IS NOT NULL&#xA;  AND person.last_name IS NOT NULL &#xA;  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')&#xA;UNION ALL&#xA;SELECT&#xA;  person.person_ref&#xA;  ,person.first_name + '' '' + person.last_name AS name&#xA;  ,UPPER(person.first_name) AS match_first_name&#xA;  ,UPPER(person.last_name) AS match_last_name&#xA;  ,CAST(position.zc_mobile_telno AS VARCHAR(255)) AS match_text&#xA;  ,UPPER(person.title) AS title&#xA;  ,person.gender&#xA;FROM person&#xA;  INNER JOIN position ON person.person_ref = position.person_ref&#xA;WHERE LEN(position.zc_mobile_telno) &gt; 9&#xA;  AND person.person_ref IS NOT NULL&#xA;  AND ISNUMERIC(position.zc_mobile_telno) != 0&#xA;  AND position.zc_mobile_telno IS NOT NULL&#xA;  AND person.first_name IS NOT NULL&#xA;  AND person.last_name IS NOT NULL&#xA;  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')&#xA;')&quot;"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="match_sql_9">
          <DTS:VariableValue
            DTS:DataType="8">SELECT DISTINCT * FROM OPENQUERY([P7MPUK-SYB], '
SELECT
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(position.zc_telephone_number AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
  INNER JOIN position ON person.person_ref = position.person_ref
WHERE LEN(position.zc_telephone_number) &gt; 9
  AND person.person_ref IS NOT NULL
  AND ISNUMERIC(position.zc_telephone_number) != 0
  AND position.zc_telephone_number IS NOT NULL
  AND person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
UNION ALL
SELECT
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(position.zc_mobile_telno AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
  INNER JOIN position ON person.person_ref = position.person_ref
WHERE LEN(position.zc_mobile_telno) &gt; 9
  AND person.person_ref IS NOT NULL
  AND ISNUMERIC(position.zc_mobile_telno) != 0
  AND position.zc_mobile_telno IS NOT NULL
  AND person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
')</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Load loop\Load"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{6B82B788-9F2F-41D0-B5C4-D9735A0B8899}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="[Get match data].[SqlCommand]">(@[User::match_code] ==1 ?  @[User::match_sql_1]  : "")
 + (@[User::match_code] ==2 ?  @[User::match_sql_2]  : "")
 + (@[User::match_code] ==3 ?  @[User::match_sql_3]  : "")
 + (@[User::match_code] ==4 ?  @[User::match_sql_4]  : "")
 + (@[User::match_code] ==5 ?  @[User::match_sql_5]  : "")
 + (@[User::match_code] ==6 ?  @[User::match_sql_6]  : "")
 + (@[User::match_code] ==7 ?  @[User::match_sql_7]  : "")
 + (@[User::match_code] ==8 ?  @[User::match_sql_8]  : "")
 + (@[User::match_code] ==9 ?  @[User::match_sql_9]  : "")



</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Load loop\Load\Add columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Load loop\Load\Add columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load loop\Load\Add columns.Inputs[Derived Column Input].Columns[match_first_name]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="match_first_name"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_first_name]" />
                        <inputColumn
                          refId="Package\Load loop\Load\Add columns.Inputs[Derived Column Input].Columns[match_last_name]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="match_last_name"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_last_name]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load loop\Load\Add columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Load loop\Load\Add columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load loop\Load\Add columns.Outputs[Derived Column Output].Columns[match_name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="129"
                          lineageId="Package\Load loop\Load\Add columns.Outputs[Derived Column Output].Columns[match_name]"
                          name="match_name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_first_name]} + " " + #{Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_last_name]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">match_first_name + " " + match_last_name</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load loop\Load\Add columns.Outputs[Derived Column Output].Columns[match_code]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load loop\Load\Add columns.Outputs[Derived Column Output].Columns[match_code]"
                          name="match_code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::match_code]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::match_code]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load loop\Load\Add columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Load loop\Load\Add columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load loop\Load\Add columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load loop\Load\Add columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load loop\Load\Add columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load loop\Load\Add columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load loop\Load\Clean strings"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Clean strings"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text.RegularExpressions;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    Regex re1 = new Regex(@"[^A-Z0-9 ]");
    Regex re2 = new Regex(@"[^A-Z0-9]");
    Regex re3 = new Regex(@"\([^)]+\)");
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string matchname = re1.Replace(Row.matchname, "");
        string[] names = Regex.Split(matchname, @"\s+");
        Array.Sort(names);
        string tempname = "";
        foreach (string name in names)
        {
            tempname += name;
        }
        Row.matchname = tempname;
        Row.matchfirstname = re2.Replace(Row.matchfirstname, "");
        Row.matchlastname = re2.Replace(Row.matchlastname, "");

        if (Row.matchcode == 6)
            Row.matchtext = re3.Replace(Row.matchtext, "");

        if (!(Row.matchcode == 4 || Row.matchcode == 7 || Row.matchcode == 8))
            Row.matchtext = re2.Replace(Row.matchtext, "");

        if (Row.gender_IsNull && !Row.title_IsNull)
        {
            if (Regex.Match(Row.title, @"MR|SIR|HERR").Success)
                Row.gender = "M";

            if (Regex.Match(Row.title, @"MS|MIS|MRS|LADY").Success)
                Row.gender = "F";
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String matchfirstname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool matchfirstname_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String matchlastname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool matchlastname_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String matchtext
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool matchtext_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String matchname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool matchname_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String title
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool title_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String gender
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
        set
        {
            this[5] = value;
        }
    }
    public bool gender_IsNull
    {
        get
        {
            return IsNull(5);
        }
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 matchcode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[6]);
        }
    }
    public bool matchcode_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c6f026eb42304400ae9451bc6533a333.Properties.Settings.get_Default():SC_c6f026eb42304400ae9451bc6533a333.Properties.Sett" +
    "ings")]

namespace SC_c6f026eb42304400ae9451bc6533a333.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_c6f026eb42304400ae9451bc6533a333.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{71a6adc9-2432-4abf-b63b-692a6dfd85ba}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_c6f026eb42304400ae9451bc6533a333</RootNamespace>
    <AssemblyName>SC_c6f026eb42304400ae9451bc6533a333</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_c6f026eb42304400ae9451bc6533a333" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_c6f026eb42304400ae9451bc6533a333</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_c6f026eb42304400ae9451bc6533a333</msb:DisplayName>
		<msb:ProjectId>{2E2CE75F-F931-45F6-B2A5-EC792DA994A5}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_c6f026eb42304400ae9451bc6533a333.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_c6f026eb42304400ae9451bc6533a333")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Michael Page International PLC")]
[assembly: AssemblyProduct("SC_c6f026eb42304400ae9451bc6533a333")]
[assembly: AssemblyCopyright("Copyright @ Michael Page International PLC 2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c6f026eb42304400ae9451bc6533a333.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c6f026eb42304400ae9451bc6533a333.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c6f026eb42304400ae9451bc6533a333.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_c6f026eb42304400ae9451bc6533a333.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_c6f026eb42304400ae9451bc6533a333.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_c6f026eb42304400ae9451bc6533a333.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOwrrlUAAAAAAAAAAOAAAiELAQsAABwAAAAIAAAAAAAAzjoA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHw6AABPAAAAAEAAAKgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1BoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAKgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
OgAAAAAAAEgAAAACAAUAGCUAAGQVAAABAAAAAAAAAGAkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMkAAAGfQEAAAQCAnMlAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDbyIAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioAABMwBABDAQAAAQAAEQJ7AwAABANvFgAABnIRAABwbxMAAAoKBnITAABw
KBQAAAoLBygBAAArchEAAHAMBxMEFhMFKxQRBBEFmg0ICSgWAAAKDBEFF1gTBREFEQSOaTLkAwhv
FwAABgMCewQAAAQDbwoAAAZyEQAAcG8TAAAKbwsAAAYDAnsEAAAEA28OAAAGchEAAHBvEwAACm8P
AAAGA28gAAAGHDMcAwJ7BQAABANvEgAABnIRAABwbxMAAApvEwAABgNvIAAABhouLgNvIAAABh0u
JQNvIAAABh4uHAMCewQAAAQDbxIAAAZyEQAAcG8TAAAKbxMAAAYDbx4AAAYsTANvGwAABi1EA28a
AAAGchsAAHAoFwAACm8YAAAKLAsDcjMAAHBvHQAABgNvGgAABnI3AABwKBcAAApvGAAACiwLA3JX
AABwbx0AAAYq3gJyWwAAcHMZAAAKfQMAAAQCcnEAAHBzGQAACn0EAAAEAnKFAABwcxkAAAp9BQAA
BAIoAQAABioqAgMEBSgaAAAKKlICexsAAAoCexwAAAoWlG8dAAAKKiYCFgMoHgAACioiAhYoHwAA
CipaAywIAhYoIAAACipymQAAcHMhAAAKelICexsAAAoCexwAAAoXlG8dAAAKKiYCFwMoHgAACioi
AhcoHwAACipaAywIAhcoIAAACipymQAAcHMhAAAKelICexsAAAoCexwAAAoYlG8dAAAKKiYCGAMo
HgAACioiAhgoHwAACipaAywIAhgoIAAACipymQAAcHMhAAAKelICexsAAAoCexwAAAoZlG8dAAAK
KiYCGQMoHgAACioiAhkoHwAACipaAywIAhkoIAAACipymQAAcHMhAAAKelICexsAAAoCexwAAAoa
lG8dAAAKKiICGigfAAAKKlICexsAAAoCexwAAAoblG8dAAAKKiYCGwMoHgAACioiAhsoHwAACipa
AywIAhsoIAAACipymQAAcHMhAAAKelICexsAAAoCexwAAAoclG8iAAAKKiICHCgfAAAKKh4CKCMA
AAoqHgIoJAAACio6AiglAAAKAgN9BgAABCo6AiglAAAKAgN9BwAABCoeAiglAAAKKgATMAIALQAA
AAIAABF+CAAABC0gcjYBAHDQBwAAAignAAAKbygAAApzKQAACgoGgAgAAAR+CAAABCoafgkAAAQq
HgKACQAABCoafgoAAAQqLnMrAAAGgAoAAAQqHgIoLAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEA
AAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMwHAAAjfgAAOAgAAFAJAAAjU3RyaW5ncwAAAACI
EQAAqAEAACNVUwAwEwAAEAAAACNHVUlEAAAAQBMAACQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkJ
AAAA+iUzABYAAAEAAAAjAAAACAAAAAoAAAAsAAAAFwAAACwAAAAPAAAAAgAAAAMAAAARAAAAHAAA
AAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgB2Ac0A
BgCFAc0ADgABAuIBCgC9BKwECgDuBNkECgDHBa0FCgDyBeAFCgAJBuAFCgAmBuAFCgBFBuAFCgBe
BuAFCgB3BuAFCgCSBuAFCgCtBuAFCgDGBuAFCgD/Bt8GCgAfB98GCgBhBxQBCgBoBxQBBgCRB80A
CgDGBxQBDgDYB+IBDgDeB+IBCgASCBQBCgBICDUICgBlCBQBCgBqCBQBCgCOCOAFDgC6CKQIDgDT
CKQICgDoCN8GAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABAAAAACAADAAUAAQAQAEsA
AAAJAAYACQABABAAWAAAAA0ABgAkAAEAEABkAAAADQAHACUAAAAQAG4AeAANAAgAJgAAARAApwB4
ABEACgAqAAYAWAATAAYAZAAXAAEABwIvAAEACwIvAAEADwIvAAEAnARfAAEAnARfABEAzQRpABEA
+gRtABEAPgWLAFAgAAAAAIYYTwEbAAEAcCAAAAAAxgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAA
AMYBtAEpAAYAqiAAAAAAxgDLARsABwCyIAAAAADGANYBGwAHALwgAAAAAMYAtAEpAAcACyIAAAAA
hhhPARsACABDIgAAAACGGE8BMwAIAE4iAAAAAIYIEwI9AAsAYyIAAAAAhggmAkEACwBtIgAAAACG
CDkCRgAMAHYiAAAAAIYIUwJKAAwAjSIAAAAAhghtAj0ADQCiIgAAAACGCH8CQQANAKwiAAAAAIYI
kQJGAA4AtSIAAAAAhgiqAkoADgDMIgAAAACGCMMCPQAPAOEiAAAAAIYI0QJBAA8A6yIAAAAAhgjf
AkYAEAD0IgAAAACGCPQCSgAQAAsjAAAAAIYICQM9ABEAICMAAAAAhggXA0EAEQAqIwAAAACGCCUD
RgASADMjAAAAAIYIOgNKABIASiMAAAAAhghPAz0AEwBfIwAAAACGCFkDRgATAGgjAAAAAIYIagM9
ABMAfSMAAAAAhgh1A0EAEwCHIwAAAACGCIADRgAUAJAjAAAAAIYIkgNKABQApyMAAAAAhgikA08A
FQC8IwAAAACGCLIDRgAVAMUjAAAAAIYAxwNGABUAzSMAAAAAhgDPA0YAFQDVIwAAAACGGE8BYwAV
AOQjAAAAAIYYTwFjABYA8yMAAAAAgxhPARsAFwD8IwAAAACTCAoFcQAXADUkAAAAAJMIHgV2ABcA
PCQAAAAAkwgqBXsAFwBEJAAAAACWCE4FjwAYAFckAAAAAIYYTwEbABgASyQAAAAAkRgDCSgBGAAA
AAEAYgUAAAIAagUAAAMAdAUAAAQAewUAAAEAdAUAAAEAhQUAAAEAhQUAAAEAdAUAAAIAiQUAAAMA
ewUAAAEAnQUAAAEAnQUAAAEAnQUAAAEAnQUAAAEAnQUAAAEAnQUAAAEAnQUAAAEAnQUAAAEAnQUA
AAEAnQUAAAEAowUAAAEAowUAAAEAnQVRAE8BQQBZAE8BQQBhAE8BQQBpAE8BQQBxAE8BQQB5AE8B
QQCBAE8BQQCJAE8BQQCRAE8BQQCZAE8BQQChAE8BmQCpAE8BGwAJAE8BGwCxAHkHngAJAIAHpQDB
AE8BGwAJAMsBGwAJANYBGwA5ALgHsAA5AMAHtgDJAMwHvQCxANEHyQA5ANgHzwDZAOQHRgA5AE8B
QQARAE8BMwARAHQF4QARAIkF5QApAPAH6QARAPoH7gARAAMI9AARAAoImQDhAE8BQQApACwI+QAR
AMcDRgARAM8DRgAZAE8BGwDpAE8BGwDxAHwI/gDxAJcIBQFBAE8BCwEJAU8BGAEZAU8BGwAhAE8B
GwAuABsAnQEuAGMABQIuAAsALAEuABMAdAEuACMAnQEuACsAowEuADMAdAEuADsAxwEuAEMAnQEu
AFsA/AFjAIMAqwDjADMBqwBBAVsBqwDpAVMBHwEJAlMBHwHWABMBBAABAAcADwAIABEAAADbA1MA
AADqA1cAAAAABFMAAAAOBFcAAAAjBFMAAAAtBFcAAAA+BFMAAABIBFcAAABZBFMAAABfBFcAAABs
BFMAAABzBFcAAACBBFsAAACLBFcAAAC9BIEAAAA2BYYAAABaBZQAAgAKAAMAAQALAAMAAgAMAAUA
AQANAAUAAQAPAAcAAgAOAAcAAgAQAAkAAQARAAkAAgASAAsAAQATAAsAAgAUAA0AAQAVAA0AAQAX
AA8AAgAWAA8AAgAYABEAAQAZABEAAgAaABMAAgAbABUAAgAcABcAAQAdABcAAgAeABkAAQAfABkA
AgAgABsAAgAhAB0AAgAnAB8AAgAoACEAAQApACEAAgAqACMABIAAAAEAAAAwFjZQAAAAAAAAPQcA
AAwAAAAAAAAAAAAAAAEAsAAAAAAABAAAAAAAAAAAAAAACgALAQAAAAAEAAAAAAAAAAAAAAAKABQB
AAAAAAwAAAAAAAAAAAAAAAEAVQEAAAAAAAAAAAEAAAAKCQAAKwDFAAAAAAAAPE1vZHVsZT4AU0Nf
YzZmMDI2ZWI0MjMwNDQwMGFlOTQ1MWJjNjUzM2EzMzMuZGxsAFVzZXJDb21wb25lbnQAU2NyaXB0
TWFpbgBJbnB1dDBCdWZmZXIAQ29ubmVjdGlvbnMAVmFyaWFibGVzAFJlc291cmNlcwBTQ19jNmYw
MjZlYjQyMzA0NDAwYWU5NDUxYmM2NTMzYTMzMy5Qcm9wZXJ0aWVzAFNldHRpbmdzAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAU2Ny
aXB0Q29tcG9uZW50AFNjcmlwdEJ1ZmZlcgBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5D
b25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAC5jdG9yAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91dHB1dE5hbWVNYXAAUHJvY2Vzc0lu
cHV0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBQcmVFeGVjdXRl
AFBvc3RFeGVjdXRlAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBSZWdleAByZTEAcmUy
AHJlMwBnZXRfbWF0Y2hmaXJzdG5hbWUAc2V0X21hdGNoZmlyc3RuYW1lAGdldF9tYXRjaGZpcnN0
bmFtZV9Jc051bGwAc2V0X21hdGNoZmlyc3RuYW1lX0lzTnVsbABnZXRfbWF0Y2hsYXN0bmFtZQBz
ZXRfbWF0Y2hsYXN0bmFtZQBnZXRfbWF0Y2hsYXN0bmFtZV9Jc051bGwAc2V0X21hdGNobGFzdG5h
bWVfSXNOdWxsAGdldF9tYXRjaHRleHQAc2V0X21hdGNodGV4dABnZXRfbWF0Y2h0ZXh0X0lzTnVs
bABzZXRfbWF0Y2h0ZXh0X0lzTnVsbABnZXRfbWF0Y2huYW1lAHNldF9tYXRjaG5hbWUAZ2V0X21h
dGNobmFtZV9Jc051bGwAc2V0X21hdGNobmFtZV9Jc051bGwAZ2V0X3RpdGxlAGdldF90aXRsZV9J
c051bGwAZ2V0X2dlbmRlcgBzZXRfZ2VuZGVyAGdldF9nZW5kZXJfSXNOdWxsAHNldF9nZW5kZXJf
SXNOdWxsAGdldF9tYXRjaGNvZGUAZ2V0X21hdGNoY29kZV9Jc051bGwATmV4dFJvdwBFbmRPZlJv
d3NldABtYXRjaGZpcnN0bmFtZQBtYXRjaGZpcnN0bmFtZV9Jc051bGwAbWF0Y2hsYXN0bmFtZQBt
YXRjaGxhc3RuYW1lX0lzTnVsbABtYXRjaHRleHQAbWF0Y2h0ZXh0X0lzTnVsbABtYXRjaG5hbWUA
bWF0Y2huYW1lX0lzTnVsbAB0aXRsZQB0aXRsZV9Jc051bGwAZ2VuZGVyAGdlbmRlcl9Jc051bGwA
bWF0Y2hjb2RlAG1hdGNoY29kZV9Jc051bGwAUGFyZW50Q29tcG9uZW50AFN5c3RlbS5SZXNvdXJj
ZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1
cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5w
dXRJRABJbnB1dE5hbWUAQnVmZmVyAE91dHB1dE1hcABSb3cAQnVmZmVyQ29sdW1uSW5kZXhlcwB2
YWx1ZQBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVy
ZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAFNDX2M2ZjAyNmViNDIzMDQ0MDBhZTk0NTFiYzY1MzNhMzMzAFN0cmlu
ZwBTdHJpbmdDb21wYXJpc29uAEVxdWFscwBHZXRDb2x1bW5JbmRleGVzAFNTSVNTY3JpcHRDb21w
b25lbnRFbnRyeVBvaW50QXR0cmlidXRlAFJlcGxhY2UAU3BsaXQAQXJyYXkAU29ydABDb25jYXQA
TWF0Y2gAR3JvdXAAZ2V0X1N1Y2Nlc3MAR2V0U3RyaW5nAHNldF9JdGVtAElzTnVsbABTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AR2V0SW50MzIAU3lzdGVtLkRpYWdub3N0aWNzAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQAuY2N0b3IAU0NfYzZmMDI2ZWI0MjMwNDQwMGFlOTQ1MWJjNjUzM2EzMzMu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAAAPSQBuAHAAdQB0ACAAMAAAAQAHXABz
ACsAABdNAFIAfABTAEkAUgB8AEgARQBSAFIAAANNAAAfTQBTAHwATQBJAFMAfABNAFIAUwB8AEwA
QQBEAFkAAANGAAAVWwBeAEEALQBaADAALQA5ACAAXQABE1sAXgBBAC0AWgAwAC0AOQBdAAETXAAo
AFsAXgApAF0AKwBcACkAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBu
AG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEA
IAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAu
AABxUwBDAF8AYwA2AGYAMAAyADYAZQBiADQAMgAzADAANAA0ADAAMABhAGUAOQA0ADUAMQBiAGMA
NgA1ADMAMwBhADMAMwAzAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AACVTWHvnYU4Ra9E1XrqXLdpAAiJhF3NgIDMkQi3elxWGTTgiQMGEhQDBhIYAyAAAQkgBAEIDhIV
EhkFIAEBEhADBhIdCSADARIVHQgSGQMgAA4EIAEBDgMgAAIEIAEBAgMgAAgDKAAOAygAAgMoAAgD
BhIFBSABARIFAwYSIQMGEiUEAAASIQQAABIlBQABARIlBAgAEiEECAASJQMGEiAEAAASIAQIABIg
BCABAQgGIAICDhFdBSABHQgIBAEAAAAFIAIODg4GAAIdDg4OBxABAQEdHgADCgEOBQACDg4OBgAC
EmkODgoHBg4dDg4OHQ4IAwYSFQMGHQgEIAEOCAUgAgEIHAQgAQIIBCABCAgGAAESeRF9BSAAEoCB
ByACAQ4SgIEEBwESIQYgAQERgIkIAQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NDX2M2
ZjAyNmViNDIzMDQ0MDBhZTk0NTFiYzY1MzNhMzMzAAAFAQAAAAAjAQAeTWljaGFlbCBQYWdlIElu
dGVybmF0aW9uYWwgUExDAAA0AQAvQ29weXJpZ2h0IEAgTWljaGFlbCBQYWdlIEludGVybmF0aW9u
YWwgUExDIDIwMTUAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwGkOgAA
AAAAAAAAAAC+OgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsDoAAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAEwEAAAAAAAAAAAAAEwENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQA2UDAWAAABADZQMBY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsASsAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAACIAwAAAQAwADAAMAAwADAA
NABiADAAAABgAB8AAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAGgAYQBlAGwAIABQ
AGEAZwBlACAASQBuAHQAZQByAG4AYQB0AGkAbwBuAGEAbAAgAFAATABDAAAAAABwACQAAQBGAGkA
bABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AYwA2AGYAMAAyADYAZQBiADQAMgAz
ADAANAA0ADAAMABhAGUAOQA0ADUAMQBiAGMANgA1ADMAMwBhADMAMwAzAAAAQAAPAAEARgBpAGwA
ZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANgA4ADAALgAyADAANQAzADQAAAAAAHAAKAAB
AEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYwA2AGYAMAAyADYAZQBiADQAMgAzADAA
NAA0ADAAMABhAGUAOQA0ADUAMQBiAGMANgA1ADMAMwBhADMAMwAzAC4AZABsAGwAAACEADAAAQBM
AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkA
YwBoAGEAZQBsACAAUABhAGcAZQAgAEkAbgB0AGUAcgBuAGEAdABpAG8AbgBhAGwAIABQAEwAQwAg
ADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
YwA2AGYAMAAyADYAZQBiADQAMgAzADAANAA0ADAAMABhAGUAOQA0ADUAMQBiAGMANgA1ADMAMwBh
ADMAMwAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGMA
NgBmADAAMgA2AGUAYgA0ADIAMwAwADQANAAwADAAYQBlADkANAA1ADEAYgBjADYANQAzADMAYQAz
ADMAMwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA2ADgA
MAAuADIAMAA1ADMANAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANQA2ADgAMAAuADIAMAA1ADMANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADQOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_c6f026eb42304400ae9451bc6533a333</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">d693c7113dd8d2f8497c1a8851f78c81</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Load loop\Load\Clean strings.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load loop\Load\Clean strings.Inputs[Input 0].Columns[match_first_name]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="match_first_name"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_first_name]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Load loop\Load\Clean strings.Inputs[Input 0].Columns[match_last_name]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="match_last_name"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_last_name]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Load loop\Load\Clean strings.Inputs[Input 0].Columns[match_text]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="match_text"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_text]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Load loop\Load\Clean strings.Inputs[Input 0].Columns[match_name]"
                          cachedDataType="wstr"
                          cachedLength="129"
                          cachedName="match_name"
                          lineageId="Package\Load loop\Load\Add columns.Outputs[Derived Column Output].Columns[match_name]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Load loop\Load\Clean strings.Inputs[Input 0].Columns[title]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="title"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[title]" />
                        <inputColumn
                          refId="Package\Load loop\Load\Clean strings.Inputs[Input 0].Columns[gender]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="gender"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[gender]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Load loop\Load\Clean strings.Inputs[Input 0].Columns[match_code]"
                          cachedDataType="i4"
                          cachedName="match_code"
                          lineageId="Package\Load loop\Load\Add columns.Outputs[Derived Column Output].Columns[match_code]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load loop\Load\Clean strings.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Load loop\Load\Clean strings.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load loop\Load\Get match data"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
                  name="Get match data"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement used by the component to extract data."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT * FROM OPENQUERY([P7MPUK-SYB], '
SELECT
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(address.zc_telephone_number AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
  INNER JOIN address ON person.person_ref = address.person_ref
WHERE LEN(zc_telephone_number) &gt; 9
  AND address.person_ref IS NOT NULL
  AND address.type = ''HOME''
  AND address.main_address = ''Y''
  AND ISNUMERIC(zc_telephone_number) != 0
  AND zc_telephone_number IS NOT NULL
  AND person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
UNION ALL
SELECT
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(zc_mobile_telno AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
WHERE LEN(zc_mobile_telno) &gt; 9
  AND ISNUMERIC(zc_mobile_telno) != 0
  AND zc_mobile_telno IS NOT NULL
  AND person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
UNION ALL
SELECT 
  person.person_ref
  ,person.first_name + '' '' + person.last_name AS name
  ,UPPER(person.first_name) AS match_first_name
  ,UPPER(person.last_name) AS match_last_name
  ,CAST(zc_day_telno AS VARCHAR(255)) AS match_text
  ,UPPER(person.title) AS title
  ,person.gender
FROM person
WHERE LEN(zc_day_telno) &gt; 9
  AND ISNUMERIC(zc_day_telno) != 0
  AND zc_day_telno IS NOT NULL
  AND person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL 
  AND person.person_ref NOT IN(SELECT person_ref FROM person_type WHERE type LIKE ''Z%'')
')</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                      name="AllowImplicitStringConversion">true</property>
                    <property
                      dataType="System.String"
                      description="The Source database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specify the mode to retrieve external column information"
                      name="AccessMode"
                      typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load loop\Load\Get match data.Connections[IDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[source]"
                      connectionManagerRefId="Package.ConnectionManagers[source]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output]"
                      name="ADO NET Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[person_ref]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[person_ref]"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[person_ref]"
                          name="person_ref"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[name]"
                          length="129"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[name]"
                          name="name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_first_name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[match_first_name]"
                          length="64"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_first_name]"
                          name="match_first_name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_last_name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[match_last_name]"
                          length="64"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_last_name]"
                          name="match_last_name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_text]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[match_text]"
                          length="255"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_text]"
                          name="match_text"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[title]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[title]"
                          length="64"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[title]"
                          name="title"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[gender]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[gender]"
                          length="1"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[gender]"
                          name="gender"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[person_ref]"
                          dataType="i4"
                          name="person_ref" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[name]"
                          dataType="wstr"
                          length="129"
                          name="name" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[match_first_name]"
                          dataType="wstr"
                          length="64"
                          name="match_first_name" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[match_last_name]"
                          dataType="wstr"
                          length="64"
                          name="match_last_name" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[match_text]"
                          dataType="wstr"
                          length="255"
                          name="match_text" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[title]"
                          dataType="wstr"
                          length="64"
                          name="title" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].ExternalColumns[gender]"
                          dataType="wstr"
                          length="1"
                          name="gender" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output]"
                      isErrorOut="true"
                      name="ADO NET Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[person_ref]"
                          dataType="i4"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[person_ref]"
                          name="person_ref" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[name]"
                          dataType="wstr"
                          length="129"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[name]"
                          name="name" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[match_first_name]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[match_first_name]"
                          name="match_first_name" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[match_last_name]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[match_last_name]"
                          name="match_last_name" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[match_text]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[match_text]"
                          name="match_text" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[title]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[title]"
                          name="title" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[gender]"
                          dataType="wstr"
                          length="1"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[gender]"
                          name="gender" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load loop\Load\Load data"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                  name="Load data"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      description="The Destination database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."matchdata_person"</property>
                    <property
                      dataType="System.Int32"
                      description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                      expressionType="Notify"
                      name="BatchSize">0</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                      expressionType="Notify"
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                      expressionType="Notify"
                      name="UseBulkInsertWhenPossible">true</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load loop\Load\Load data.Connections[IDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[target]"
                      connectionManagerRefId="Package.ConnectionManagers[target]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="ADO NET Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].Columns[person_ref]"
                          cachedDataType="i4"
                          cachedName="person_ref"
                          externalMetadataColumnId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[person_ref]"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[person_ref]" />
                        <inputColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].Columns[name]"
                          cachedDataType="wstr"
                          cachedLength="129"
                          cachedName="name"
                          externalMetadataColumnId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[name]"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[name]" />
                        <inputColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].Columns[match_first_name]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="match_first_name"
                          externalMetadataColumnId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[match_first_name]"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_first_name]" />
                        <inputColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].Columns[match_last_name]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="match_last_name"
                          externalMetadataColumnId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[match_last_name]"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_last_name]" />
                        <inputColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].Columns[match_text]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="match_text"
                          externalMetadataColumnId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[match_text]"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[match_text]" />
                        <inputColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].Columns[gender]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="gender"
                          externalMetadataColumnId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[gender]"
                          lineageId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output].Columns[gender]" />
                        <inputColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].Columns[match_name]"
                          cachedDataType="wstr"
                          cachedLength="129"
                          cachedName="match_name"
                          externalMetadataColumnId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[match_name]"
                          lineageId="Package\Load loop\Load\Add columns.Outputs[Derived Column Output].Columns[match_name]" />
                        <inputColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].Columns[match_code]"
                          cachedDataType="i4"
                          cachedName="match_code"
                          externalMetadataColumnId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[match_code]"
                          lineageId="Package\Load loop\Load\Add columns.Outputs[Derived Column Output].Columns[match_code]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[id]"
                          dataType="i4"
                          name="id" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[person_ref]"
                          dataType="i4"
                          name="person_ref" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[name]"
                          dataType="wstr"
                          length="255"
                          name="name" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[match_name]"
                          dataType="wstr"
                          length="255"
                          name="match_name" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[match_first_name]"
                          dataType="wstr"
                          length="255"
                          name="match_first_name" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[match_last_name]"
                          dataType="wstr"
                          length="255"
                          name="match_last_name" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[match_code]"
                          dataType="wstr"
                          length="255"
                          name="match_code" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[match_text]"
                          dataType="wstr"
                          length="255"
                          name="match_text" />
                        <externalMetadataColumn
                          refId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input].ExternalColumns[gender]"
                          dataType="wstr"
                          length="255"
                          name="gender" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load loop\Load\Load data.Outputs[ADO NET Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="ADO NET Destination Error Output"
                      synchronousInputId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load loop\Load\Load data.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load loop\Load\Load data.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load loop\Load\Load data.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load loop\Load\Load data.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Load loop\Load.Paths[ADO NET Source Output]"
                  endId="Package\Load loop\Load\Add columns.Inputs[Derived Column Input]"
                  name="ADO NET Source Output"
                  startId="Package\Load loop\Load\Get match data.Outputs[ADO NET Source Output]" />
                <path
                  refId="Package\Load loop\Load.Paths[Derived Column Output]"
                  endId="Package\Load loop\Load\Clean strings.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Load loop\Load\Add columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Load loop\Load.Paths[Output 0]"
                  endId="Package\Load loop\Load\Load data.Inputs[ADO NET Destination Input]"
                  name="Output 0"
                  startId="Package\Load loop\Load\Clean strings.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{73ABEE7C-CDCD-43B3-9B89-D62C29768B25}"
          DTS:ObjectName="{73ABEE7C-CDCD-43B3-9B89-D62C29768B25}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::match_code" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Output"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{F2BB9802-0309-44D5-B1DC-529683507851}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Output"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Output\ADO NET Destination"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
              name="ADO NET Destination"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  description="The Destination database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."matchdata_person_temp"</property>
                <property
                  dataType="System.Int32"
                  description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                  expressionType="Notify"
                  name="BatchSize">0</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                  expressionType="Notify"
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                  expressionType="Notify"
                  name="UseBulkInsertWhenPossible">true</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ADONETDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Output\ADO NET Destination.Connections[IDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[target]"
                  connectionManagerRefId="Package.ConnectionManagers[target]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="ADO NET Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[person_ref]"
                      cachedDataType="i4"
                      cachedName="person_ref"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[person_ref]"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[person_ref]" />
                    <inputColumn
                      refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[matched_person_ref]"
                      cachedDataType="i4"
                      cachedName="matched_person_ref"
                      externalMetadataColumnId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[matched_person_ref]"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[matched_person_ref]" />
                    <inputColumn
                      refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="name"
                      externalMetadataColumnId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[name]"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[name]" />
                    <inputColumn
                      refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[matched_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="matched_name"
                      externalMetadataColumnId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[matched_name]"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[matched_name]" />
                    <inputColumn
                      refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[check]"
                      cachedDataType="i4"
                      cachedName="check"
                      externalMetadataColumnId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[check]"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[check]" />
                    <inputColumn
                      refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[match_strength]"
                      cachedDataType="i4"
                      cachedName="match_strength"
                      externalMetadataColumnId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[match_strength]"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[match_strength]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[id]"
                      dataType="i4"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[person_ref]"
                      dataType="i4"
                      name="person_ref" />
                    <externalMetadataColumn
                      refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[matched_person_ref]"
                      dataType="i4"
                      name="matched_person_ref" />
                    <externalMetadataColumn
                      refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[name]"
                      dataType="wstr"
                      length="255"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[matched_name]"
                      dataType="wstr"
                      length="255"
                      name="matched_name" />
                    <externalMetadataColumn
                      refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[check]"
                      dataType="i4"
                      name="check" />
                    <externalMetadataColumn
                      refId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[match_strength]"
                      dataType="i4"
                      name="match_strength" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Output\ADO NET Destination.Outputs[ADO NET Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="ADO NET Destination Error Output"
                  synchronousInputId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Output\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Output\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Output\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Output\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Output\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Output\Aggregate.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Output\Aggregate.Inputs[Aggregate Input 1].Columns[matched_person_ref]"
                      cachedDataType="i4"
                      cachedName="matched_person_ref"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[matched_person_ref]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Output\Aggregate.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Output\Aggregate.Outputs[Aggregate Output 1].Columns[person_ref]"
                      dataType="i4"
                      lineageId="Package\Output\Aggregate.Outputs[Aggregate Output 1].Columns[person_ref]"
                      name="person_ref">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[matched_person_ref]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Output\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Output\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Output\Conditional Split.Inputs[Conditional Split Input].Columns[check]"
                      cachedDataType="i4"
                      cachedName="check"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[check]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Output\Conditional Split.Outputs[Is Null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Is Null"
                  synchronousInputId="Package\Output\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Output\Merge Join.Outputs[Merge Join Output].Columns[check]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(check)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Output\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Output\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Output\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Output\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Output\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Output\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Output\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Output\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Output\Get matches"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="Get matches"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT 
  person_ref
  ,matched_person_ref
  ,name
  ,matched_name
  ,MAX(match_score) AS match_strength
FROM (

SELECT   
  person_ref
  ,matched_person_ref
  ,name
  ,matched_name
  ,SUM(match_score) AS match_score 
FROM 
  (SELECT 
     md1.person_ref AS person_ref
     ,md2.person_ref AS matched_person_ref
     ,md1.name AS name
     ,md2.name AS matched_name
     ,(CASE md1.match_code 
         WHEN 4 THEN 4 WHEN 7 THEN 3 WHEN 8 THEN 3 WHEN 9 THEN 2 
         ELSE 1 END) AS match_score
   FROM matchdata_person md1
     INNER JOIN matchdata_person md2 ON md1.match_code = md2.match_code 
       AND md1.match_text = md2.match_text
       AND md1.match_first_name = md2.match_first_name 
   WHERE md2.person_ref &gt; md1.person_ref
   GROUP BY
     md1.person_ref
     ,md2.person_ref
     ,md1.name
     ,md2.name
     ,md1.match_code) a
GROUP BY
  person_ref
  ,matched_person_ref
  ,name
  ,matched_name
HAVING SUM(match_score) &gt;= 6

UNION

SELECT   
  person_ref
  ,matched_person_ref
  ,name
  ,matched_name
  ,SUM(match_score) AS match_score 
FROM 
  (SELECT 
     md1.person_ref AS person_ref
     ,md2.person_ref AS matched_person_ref
     ,md1.name AS name
     ,md2.name AS matched_name
     ,(CASE md1.match_code 
         WHEN 4 THEN 3 WHEN 7 THEN 2 WHEN 8 THEN 3 WHEN 9 THEN 2 
         ELSE 1 END) AS match_score
   FROM matchdata_person md1
     INNER JOIN matchdata_person md2 ON md1.match_code = md2.match_code 
       AND md1.match_text = md2.match_text
       AND md1.match_last_name = md2.match_last_name 
       AND ISNULL(md1.gender, ISNULL(md2.gender, '')) = ISNULL(md2.gender, ISNULL(md1.gender, ''))
   WHERE md2.person_ref &gt; md1.person_ref
   GROUP BY
     md1.person_ref
     ,md2.person_ref
     ,md1.name
     ,md2.name
     ,md1.match_code) a
GROUP BY
  person_ref
  ,matched_person_ref
  ,name
  ,matched_name
HAVING SUM(match_score) &gt;= 3

UNION

SELECT   
  person_ref
  ,matched_person_ref
  ,name
  ,matched_name
  ,SUM(match_score) AS match_score 
FROM 
  (SELECT 
     md1.person_ref AS person_ref
     ,md2.person_ref AS matched_person_ref
     ,md1.name AS name
     ,md2.name AS matched_name
     ,(CASE md1.match_code 
         WHEN 4 THEN 3 WHEN 7 THEN 2 WHEN 8 THEN 3 WHEN 9 THEN 2 
         ELSE 1 END) AS match_score
   FROM matchdata_person md1
     INNER JOIN matchdata_person md2 ON md1.match_code = md2.match_code 
       AND md1.match_text = md2.match_text
       AND md1.match_name = md2.match_name 
   WHERE md2.person_ref &gt; md1.person_ref
   GROUP BY
     md1.person_ref
     ,md2.person_ref
     ,md1.name
     ,md2.name
     ,md1.match_code) a
GROUP BY
  person_ref
  ,matched_person_ref
  ,name
  ,matched_name
HAVING SUM(match_score) &gt;= 3

UNION

SELECT 
  md1.person_ref AS person_ref
  ,md2.person_ref AS matched_person_ref
  ,md1.name AS name
  ,md2.name AS matched_name
  ,3 AS match_score
FROM matchdata_person md1
  INNER JOIN matchdata_person md2 ON md1.match_text = md2.match_text
WHERE md2.person_ref &gt; md1.person_ref
  AND md1.match_code = 4
  AND md2.match_code = 4
  AND md1.match_first_name != md2.match_first_name
  AND md1.match_last_name != md2.match_last_name
  AND md1.match_name != md2.match_name
  AND CHARINDEX(md1.match_first_name, md2.match_first_name) +
    CHARINDEX(md2.match_first_name, md1.match_first_name) +
    CHARINDEX(md1.match_last_name, md2.match_last_name) +
    CHARINDEX(md2.match_last_name, md1.match_last_name) &gt; 0
  AND ISNULL(md1.gender, ISNULL(md2.gender, '')) = ISNULL(md2.gender, ISNULL(md1.gender, ''))

) a
GROUP BY
  person_ref
  ,matched_person_ref
  ,name
  ,matched_name</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Output\Get matches.Connections[IDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[target]"
                  connectionManagerRefId="Package.ConnectionManagers[target]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Output\Get matches.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[person_ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Output\Get matches.Outputs[ADO NET Source Output].ExternalColumns[person_ref]"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[person_ref]"
                      name="person_ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[matched_person_ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Output\Get matches.Outputs[ADO NET Source Output].ExternalColumns[matched_person_ref]"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[matched_person_ref]"
                      name="matched_person_ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Output\Get matches.Outputs[ADO NET Source Output].ExternalColumns[name]"
                      length="255"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[name]"
                      name="name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[matched_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Output\Get matches.Outputs[ADO NET Source Output].ExternalColumns[matched_name]"
                      length="255"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[matched_name]"
                      name="matched_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[match_strength]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Output\Get matches.Outputs[ADO NET Source Output].ExternalColumns[match_strength]"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[match_strength]"
                      name="match_strength"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Output].ExternalColumns[person_ref]"
                      dataType="i4"
                      name="person_ref" />
                    <externalMetadataColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Output].ExternalColumns[matched_person_ref]"
                      dataType="i4"
                      name="matched_person_ref" />
                    <externalMetadataColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Output].ExternalColumns[name]"
                      dataType="wstr"
                      length="255"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Output].ExternalColumns[matched_name]"
                      dataType="wstr"
                      length="255"
                      name="matched_name" />
                    <externalMetadataColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Output].ExternalColumns[match_strength]"
                      dataType="i4"
                      name="match_strength" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Output\Get matches.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[person_ref]"
                      dataType="i4"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[person_ref]"
                      name="person_ref" />
                    <outputColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[matched_person_ref]"
                      dataType="i4"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[matched_person_ref]"
                      name="matched_person_ref" />
                    <outputColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[matched_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[matched_name]"
                      name="matched_name" />
                    <outputColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[match_strength]"
                      dataType="i4"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[match_strength]"
                      name="match_strength" />
                    <outputColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Output\Merge Join"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Output\Merge Join.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Output\Merge Join.Inputs[Merge Join Left Input].Columns[person_ref]"
                      cachedDataType="i4"
                      cachedName="person_ref"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Output\Sort.Outputs[Sort Output].Columns[person_ref]" />
                    <inputColumn
                      refId="Package\Output\Merge Join.Inputs[Merge Join Left Input].Columns[matched_person_ref]"
                      cachedDataType="i4"
                      cachedName="matched_person_ref"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Output\Sort.Outputs[Sort Output].Columns[matched_person_ref]" />
                    <inputColumn
                      refId="Package\Output\Merge Join.Inputs[Merge Join Left Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="name"
                      lineageId="Package\Output\Sort.Outputs[Sort Output].Columns[name]" />
                    <inputColumn
                      refId="Package\Output\Merge Join.Inputs[Merge Join Left Input].Columns[matched_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="matched_name"
                      lineageId="Package\Output\Sort.Outputs[Sort Output].Columns[matched_name]" />
                    <inputColumn
                      refId="Package\Output\Merge Join.Inputs[Merge Join Left Input].Columns[match_strength]"
                      cachedDataType="i4"
                      cachedName="match_strength"
                      lineageId="Package\Output\Sort.Outputs[Sort Output].Columns[match_strength]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Output\Merge Join.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Output\Merge Join.Inputs[Merge Join Right Input].Columns[person_ref]"
                      cachedDataType="i4"
                      cachedName="person_ref"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Output\Sort 1.Outputs[Sort Output].Columns[person_ref]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Output\Merge Join.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[person_ref]"
                      dataType="i4"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[person_ref]"
                      name="person_ref"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Output\Merge Join.Inputs[Merge Join Left Input].Columns[person_ref]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[matched_person_ref]"
                      dataType="i4"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[matched_person_ref]"
                      name="matched_person_ref">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Output\Merge Join.Inputs[Merge Join Left Input].Columns[matched_person_ref]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[name]"
                      name="name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Output\Merge Join.Inputs[Merge Join Left Input].Columns[name]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[matched_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[matched_name]"
                      name="matched_name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Output\Merge Join.Inputs[Merge Join Left Input].Columns[matched_name]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[check]"
                      dataType="i4"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[check]"
                      name="check">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Output\Merge Join.Inputs[Merge Join Right Input].Columns[person_ref]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[match_strength]"
                      dataType="i4"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[match_strength]"
                      name="match_strength">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Output\Merge Join.Inputs[Merge Join Left Input].Columns[match_strength]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Output\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Output\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Output\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Output\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Output\Multicast.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Output\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Output\Multicast.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Output\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Output\Multicast 1"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast 1">
              <inputs>
                <input
                  refId="Package\Output\Multicast 1.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Output\Multicast 1.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Output\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Output\Multicast 1.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Output\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Output\Multicast 1.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Output\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Output\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Output\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Output\Sort.Inputs[Sort Input].Columns[person_ref]"
                      cachedDataType="i4"
                      cachedName="person_ref"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[person_ref]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Output\Sort.Inputs[Sort Input].Columns[matched_person_ref]"
                      cachedDataType="i4"
                      cachedName="matched_person_ref"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[matched_person_ref]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Output\Sort.Inputs[Sort Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="name"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[name]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Output\Sort.Inputs[Sort Input].Columns[matched_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="matched_name"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[matched_name]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Output\Sort.Inputs[Sort Input].Columns[match_strength]"
                      cachedDataType="i4"
                      cachedName="match_strength"
                      lineageId="Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[match_strength]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Output\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Output\Sort.Outputs[Sort Output].Columns[person_ref]"
                      dataType="i4"
                      lineageId="Package\Output\Sort.Outputs[Sort Output].Columns[person_ref]"
                      name="person_ref"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[person_ref]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Output\Sort.Outputs[Sort Output].Columns[matched_person_ref]"
                      dataType="i4"
                      lineageId="Package\Output\Sort.Outputs[Sort Output].Columns[matched_person_ref]"
                      name="matched_person_ref"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[matched_person_ref]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Output\Sort.Outputs[Sort Output].Columns[name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Output\Sort.Outputs[Sort Output].Columns[name]"
                      name="name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[name]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Output\Sort.Outputs[Sort Output].Columns[matched_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Output\Sort.Outputs[Sort Output].Columns[matched_name]"
                      name="matched_name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[matched_name]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Output\Sort.Outputs[Sort Output].Columns[match_strength]"
                      dataType="i4"
                      lineageId="Package\Output\Sort.Outputs[Sort Output].Columns[match_strength]"
                      name="match_strength">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Output\Get matches.Outputs[ADO NET Source Output].Columns[match_strength]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Output\Sort 1"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort 1"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Output\Sort 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Output\Sort 1.Inputs[Sort Input].Columns[person_ref]"
                      cachedDataType="i4"
                      cachedName="person_ref"
                      lineageId="Package\Output\Aggregate.Outputs[Aggregate Output 1].Columns[person_ref]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Output\Sort 1.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Output\Sort 1.Outputs[Sort Output].Columns[person_ref]"
                      dataType="i4"
                      lineageId="Package\Output\Sort 1.Outputs[Sort Output].Columns[person_ref]"
                      name="person_ref"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Output\Aggregate.Outputs[Aggregate Output 1].Columns[person_ref]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Output\Write matches"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="2057"
              name="Write matches">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Output\Write matches.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[output_csv]"
                  connectionManagerRefId="Package.ConnectionManagers[output_csv]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Output\Write matches.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Output\Write matches.Inputs[Flat File Destination Input].Columns[person_ref]"
                      cachedDataType="i4"
                      cachedName="person_ref"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Output\Write matches.Inputs[Flat File Destination Input].ExternalColumns[person_ref]"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[person_ref]" />
                    <inputColumn
                      refId="Package\Output\Write matches.Inputs[Flat File Destination Input].Columns[matched_person_ref]"
                      cachedDataType="i4"
                      cachedName="matched_person_ref"
                      externalMetadataColumnId="Package\Output\Write matches.Inputs[Flat File Destination Input].ExternalColumns[matched_person_ref]"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[matched_person_ref]" />
                    <inputColumn
                      refId="Package\Output\Write matches.Inputs[Flat File Destination Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="name"
                      externalMetadataColumnId="Package\Output\Write matches.Inputs[Flat File Destination Input].ExternalColumns[name]"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[name]" />
                    <inputColumn
                      refId="Package\Output\Write matches.Inputs[Flat File Destination Input].Columns[matched_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="matched_name"
                      externalMetadataColumnId="Package\Output\Write matches.Inputs[Flat File Destination Input].ExternalColumns[matched_name]"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[matched_name]" />
                    <inputColumn
                      refId="Package\Output\Write matches.Inputs[Flat File Destination Input].Columns[match_strength]"
                      cachedDataType="i4"
                      cachedName="match_strength"
                      externalMetadataColumnId="Package\Output\Write matches.Inputs[Flat File Destination Input].ExternalColumns[match_strength]"
                      lineageId="Package\Output\Merge Join.Outputs[Merge Join Output].Columns[match_strength]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Output\Write matches.Inputs[Flat File Destination Input].ExternalColumns[person_ref]"
                      dataType="i4"
                      name="person_ref" />
                    <externalMetadataColumn
                      refId="Package\Output\Write matches.Inputs[Flat File Destination Input].ExternalColumns[matched_person_ref]"
                      dataType="i4"
                      name="matched_person_ref" />
                    <externalMetadataColumn
                      refId="Package\Output\Write matches.Inputs[Flat File Destination Input].ExternalColumns[name]"
                      dataType="wstr"
                      length="255"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Output\Write matches.Inputs[Flat File Destination Input].ExternalColumns[matched_name]"
                      dataType="wstr"
                      length="255"
                      name="matched_name" />
                    <externalMetadataColumn
                      refId="Package\Output\Write matches.Inputs[Flat File Destination Input].ExternalColumns[match_strength]"
                      dataType="i4"
                      name="match_strength" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Output.Paths[ADO NET Source Output]"
              endId="Package\Output\Multicast.Inputs[Multicast Input 1]"
              name="ADO NET Source Output"
              startId="Package\Output\Get matches.Outputs[ADO NET Source Output]" />
            <path
              refId="Package\Output.Paths[Aggregate Output 1]"
              endId="Package\Output\Sort 1.Inputs[Sort Input]"
              name="Aggregate Output 1"
              startId="Package\Output\Aggregate.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\Output.Paths[Is Null]"
              endId="Package\Output\Multicast 1.Inputs[Multicast Input 1]"
              name="Is Null"
              startId="Package\Output\Conditional Split.Outputs[Is Null]" />
            <path
              refId="Package\Output.Paths[Merge Join Output]"
              endId="Package\Output\Conditional Split.Inputs[Conditional Split Input]"
              name="Merge Join Output"
              startId="Package\Output\Merge Join.Outputs[Merge Join Output]" />
            <path
              refId="Package\Output.Paths[Multicast Output 1]"
              endId="Package\Output\Aggregate.Inputs[Aggregate Input 1]"
              name="Multicast Output 1"
              startId="Package\Output\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Output.Paths[Multicast Output 11]"
              endId="Package\Output\Write matches.Inputs[Flat File Destination Input]"
              name="Multicast Output 1"
              startId="Package\Output\Multicast 1.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Output.Paths[Multicast Output 2]"
              endId="Package\Output\Sort.Inputs[Sort Input]"
              name="Multicast Output 2"
              startId="Package\Output\Multicast.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Output.Paths[Multicast Output 21]"
              endId="Package\Output\ADO NET Destination.Inputs[ADO NET Destination Input]"
              name="Multicast Output 2"
              startId="Package\Output\Multicast 1.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Output.Paths[Sort Output]"
              endId="Package\Output\Merge Join.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Output\Sort.Outputs[Sort Output]" />
            <path
              refId="Package\Output.Paths[Sort Output1]"
              endId="Package\Output\Merge Join.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Output\Sort 1.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Remove duplicates"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{42B58971-9049-4270-80E4-E76719C60877}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Remove duplicates"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DF2B02C5-883B-4BAA-B3D9-17A96036ABE2}"
          SQLTask:SqlStatementSource="WITH cte AS (&#xA;SELECT &#xA;  id, ROW_NUMBER() OVER(PARTITION BY person_ref, match_code, match_text ORDER BY id) AS match_pos&#xA;FROM matchdata_person)&#xA;DELETE FROM matchdata_person &#xA;WHERE id IN( &#xA;SELECT id&#xA;FROM cte &#xA;WHERE match_pos != 1)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{1639D9FB-545A-4145-B145-AA3F28D1128C}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DF2B02C5-883B-4BAA-B3D9-17A96036ABE2}"
          SQLTask:SqlStatementSource="IF OBJECT_ID('matchdata_person') IS NULL&#xA;BEGIN&#xA;&#xA;  CREATE TABLE [matchdata_person](&#xA;    [id] [int] IDENTITY(1,1) NOT NULL,&#xA;    [person_ref] [int] NULL,&#xA;    [name] [varchar](255) NULL,&#xA;    [match_name] [varchar](255) NULL,&#xA;    [match_first_name] [varchar](255) NULL,&#xA;    [match_last_name] [varchar](255) NULL,&#xA;    [match_code] [varchar](255) NULL,&#xA;    [match_text] [varchar](255) NULL,&#xA;    [gender] [varchar](255) NULL,&#xA;    PRIMARY KEY CLUSTERED ([id] ASC)&#xA;  );&#xA;&#xA;  CREATE NONCLUSTERED INDEX [idx_matchdata_person] ON [matchdata_person]&#xA;  (&#xA;    [match_code] ASC,&#xA;    [match_text] ASC&#xA;  );&#xA;  &#xA;  CREATE NONCLUSTERED INDEX [idx_matchdata_person_name] ON [matchdata_person]&#xA;  (&#xA;    [match_name] ASC,&#xA;    [match_first_name] ASC,&#xA;    [match_last_name] ASC&#xA;  );&#xA;  &#xA;  CREATE NONCLUSTERED INDEX [idx_matchdata_person_ref] ON [matchdata_person]&#xA;  (&#xA;    [person_ref] ASC&#xA;  );&#xA;&#xA;END;&#xA; &#xA;TRUNCATE TABLE matchdata_person" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{1A27D95B-A2A5-4F72-98DA-39049AF5F5EC}"
      DTS:From="Package\Truncate table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Load loop" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{6B6FCE2E-9BE8-403E-B9C1-2D797EA0F241}"
      DTS:From="Package\Load loop"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Remove duplicates" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{011F921F-5548-4CF6-B14E-B5E1C6F0192E}"
      DTS:From="Package\Remove duplicates"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Output" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="102.4,41.6"
          Id="Package\Load loop\Load"
          TopLeft="26.9714309653457,20.094121653811" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="156.8,116.8"
          Size="156.8,160"
          Id="Package\Load loop"
          TopLeft="107.871427286888,112.56470746103" />
        <NodeLayout
          Size="113.6,41.6"
          Id="Package\Output"
          TopLeft="135.000002299036,378.235298117964" />
        <NodeLayout
          Size="168,41.6"
          Id="Package\Remove duplicates"
          TopLeft="105.000001788139,299.76471008644" />
        <NodeLayout
          Size="148.8,41.6"
          Id="Package\Truncate table"
          TopLeft="33.7142862884366,23.0941179709451" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="108.114286288437,64.6941179709451">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="78.1571409984514,47.8705894900849"
              Start="0,0"
              End="78.1571409984514,40.3705894900849">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.9352947450425" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.9352947450425"
                    Point2="0,23.9352947450425"
                    Point3="4,23.9352947450425" />
                  <mssgle:LineSegment
                    End="74.1571409984514,23.9352947450425" />
                  <mssgle:CubicBezierSegment
                    Point1="74.1571409984514,23.9352947450425"
                    Point2="78.1571409984514,23.9352947450425"
                    Point3="78.1571409984514,27.9352947450425" />
                  <mssgle:LineSegment
                    End="78.1571409984514,40.3705894900849" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="187.635714537514,272.56470746103">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.2000026254098"
              Start="0,0"
              End="0,19.7000026254098">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7000026254098" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="190.400002043588,341.36471008644">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.8705880315245"
              Start="0,0"
              End="0,29.3705880315245">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.3705880315245" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Load loop\Load">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\Load loop\Load\Load data"
          TopLeft="69.6,288.8" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Load loop\Load\Get match data"
          TopLeft="60,60" />
        <NodeLayout
          Size="140.8,41.6"
          Id="Package\Load loop\Load\Clean strings"
          TopLeft="59.2,212" />
        <NodeLayout
          Size="140.8,41.6"
          Id="Package\Load loop\Load\Add columns"
          TopLeft="64.8,134.4" />
        <EdgeLayout
          Id="Package\Load loop\Load.Paths[Derived Column Output]"
          TopLeft="132.4,176">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.0000000000001"
              Start="0,0"
              End="0,28.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load loop\Load.Paths[ADO NET Source Output]"
          TopLeft="136,101.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.8"
              Start="0,0"
              End="0,25.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load loop\Load.Paths[Output 0]"
          TopLeft="131.2,253.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.2"
              Start="0,0"
              End="0,27.7">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.7" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load loop\Load\Load data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load loop\Load\Get match data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Output">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="99.2,41.6"
          Id="Package\Output\Sort"
          TopLeft="168,200.8" />
        <NodeLayout
          Size="131.2,41.6"
          Id="Package\Output\Merge Join"
          TopLeft="169.6,280.8" />
        <NodeLayout
          Size="108.8,41.6"
          Id="Package\Output\Sort 1"
          TopLeft="356,199.2" />
        <NodeLayout
          Size="131.2,41.6"
          Id="Package\Output\Multicast 1"
          TopLeft="384,414.4" />
        <NodeLayout
          Size="128,41.6"
          Id="Package\Output\Aggregate"
          TopLeft="340,120" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Output\Conditional Split"
          TopLeft="163.2,371.2" />
        <NodeLayout
          Size="121.6,41.6"
          Id="Package\Output\Multicast"
          TopLeft="150.4,119.2" />
        <NodeLayout
          Size="148.8,41.6"
          Id="Package\Output\Write matches"
          TopLeft="169.6,464" />
        <NodeLayout
          Size="139.2,41.6"
          Id="Package\Output\Get matches"
          TopLeft="140.8,41.6" />
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\Output\ADO NET Destination"
          TopLeft="572.8,416.8" />
        <EdgeLayout
          Id="Package\Output.Paths[Sort Output1]"
          TopLeft="410.4,240.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-154.666666666667,39.9999999999999"
              Start="0,0"
              End="-154.666666666667,32.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7108433734939" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.7108433734939"
                    Point2="0,23.7108433734939"
                    Point3="-4,23.7108433734939" />
                  <mssgle:LineSegment
                    End="-150.666666666667,23.7108433734939" />
                  <mssgle:CubicBezierSegment
                    Point1="-150.666666666667,23.7108433734939"
                    Point2="-154.666666666667,23.7108433734939"
                    Point3="-154.666666666667,27.7108433734939" />
                  <mssgle:LineSegment
                    End="-154.666666666667,32.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Output.Paths[Sort Output]"
          TopLeft="217.6,242.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="17.6,38.4"
              Start="0,0"
              End="17.6,30.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.2" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.2"
                    Point2="0,19.2"
                    Point3="4,19.2" />
                  <mssgle:LineSegment
                    End="13.6,19.2" />
                  <mssgle:CubicBezierSegment
                    Point1="13.6,19.2"
                    Point2="17.6,19.2"
                    Point3="17.6,23.2" />
                  <mssgle:LineSegment
                    End="17.6,30.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Output.Paths[Multicast Output 21]"
          TopLeft="515.2,436.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="57.6,0"
              Start="0,0"
              End="50.1,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="50.1,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Output.Paths[Multicast Output 2]"
          TopLeft="214.4,160.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Output.Paths[Multicast Output 11]"
          TopLeft="384,440.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-65.6,44"
              Start="0,0"
              End="-58.1,44">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-23.6977777777778,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-23.6977777777778,0"
                    Point2="-27.6977777777778,0"
                    Point3="-27.6977777777778,4" />
                  <mssgle:LineSegment
                    End="-27.6977777777778,40" />
                  <mssgle:CubicBezierSegment
                    Point1="-27.6977777777778,40"
                    Point2="-27.6977777777778,44"
                    Point3="-31.6977777777778,44" />
                  <mssgle:LineSegment
                    End="-58.1,44" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Output.Paths[Multicast Output 1]"
          TopLeft="272,140.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="68,0"
              Start="0,0"
              End="60.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="60.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Output.Paths[Merge Join Output]"
          TopLeft="238.4,322.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.8"
              Start="0,0"
              End="0,41.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Output.Paths[Is Null]"
          TopLeft="320,392">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="64,43.2"
              Start="0,0"
              End="56.5,43.2">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28,0" />
                  <mssgle:CubicBezierSegment
                    Point1="28,0"
                    Point2="32,0"
                    Point3="32,4" />
                  <mssgle:LineSegment
                    End="32,39.2" />
                  <mssgle:CubicBezierSegment
                    Point1="32,39.2"
                    Point2="32,43.2"
                    Point3="36,43.2" />
                  <mssgle:LineSegment
                    End="56.5,43.2" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="17.49626953125,-15.7490234375,29.0074609375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Output.Paths[Aggregate Output 1]"
          TopLeft="407.2,161.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.6"
              Start="0,0"
              End="0,30.1">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.1" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Output.Paths[ADO NET Source Output]"
          TopLeft="210.8,83.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Output\Get matches">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Output\ADO NET Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>