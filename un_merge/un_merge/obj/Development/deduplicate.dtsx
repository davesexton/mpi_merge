<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/5/2015 12:46:27 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NCOH274"
  DTS:CreatorName="MPADGLOBAL\davesexton"
  DTS:DTSID="{80F54AAA-9905-49A6-90B2-074B91408D4A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.2430.0"
  DTS:LocaleID="2057"
  DTS:ObjectName="deduplicate"
  DTS:PackageType="5"
  DTS:VersionBuild="46"
  DTS:VersionGUID="{AE89075E-172E-40D6-AF7B-94DFC959A853}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[person_mp_duplicates_csv]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{12736D49-CD0D-4D53-A9E0-84BAA5860531}"
      DTS:ObjectName="person_mp_duplicates_csv">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Projects\git\mpi_merge\output\person_mp_duplicates.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="mp1_person_ref"
              DTS:DTSID="{E87F4542-876B-4943-A683-4BCD60D6CE2B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="256"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="mp1_name"
              DTS:DTSID="{42B891D3-C72D-4C8C-9FEC-1BD9207B6505}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="mp2_person_ref"
              DTS:DTSID="{641FB695-1981-427B-A797-724C4B360EBA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="256"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="mp2_name"
              DTS:DTSID="{88E6D76A-5A79-465D-A69A-E4150F8C5E13}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[person_pp_duplicates_csv]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{A45EAA57-4937-4588-B81B-2D13236638E6}"
      DTS:ObjectName="person_pp_duplicates_csv">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Projects\git\mpi_merge\output\person_pp_duplicates.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="pp1_person_ref"
              DTS:DTSID="{1143D990-AD1C-4EB3-B624-79F6AC7E53BB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="256"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="pp1_name"
              DTS:DTSID="{FC320901-31B2-450E-BA5C-81D831D3B334}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="pp2_person_ref"
              DTS:DTSID="{BA7BC018-8A43-4CB3-A165-3D5C919232C7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="256"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="pp2_name"
              DTS:DTSID="{CFE89264-C207-440A-A81B-88524C761BF4}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[person_x_duplicates_csv]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{1D7B05C9-735C-418F-987A-A96F82D6CCE6}"
      DTS:ObjectName="person_x_duplicates_csv">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Projects\git\mpi_merge\output\person_x_duplicates.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="pp_person_ref"
              DTS:DTSID="{20E13367-07B4-41A3-B654-0E37EEE6D84A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="256"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="pp_name"
              DTS:DTSID="{1F95E04A-4911-4F80-A730-551A43EFD231}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="mp_person_ref"
              DTS:DTSID="{7A05DE01-3D6E-45E0-BD7F-38F1427E995C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="256"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="mp_name"
              DTS:DTSID="{22668A14-8A65-42AC-86DA-9BE285E06552}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4A87D537-AB10-4949-9171-3F47D79515A5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="rs">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Clear tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8AC39155-F48D-40B3-85C2-87C709C46A8D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; Â© 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DF2B02C5-883B-4BAA-B3D9-17A96036ABE2}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE person_pp_matchdata;&#xA;TRUNCATE TABLE person_mp_matchdata;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\MP matches"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{f32ce213-e9fe-41b9-8e08-f30c598347ed}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="MP matches"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\MP matches\Aggregate 1"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate 1"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\MP matches\Aggregate 1.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\MP matches\Aggregate 1.Inputs[Aggregate Input 1].Columns[mp1_person_ref]"
                      cachedDataType="i4"
                      cachedName="mp1_person_ref"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp1_person_ref]" />
                    <inputColumn
                      refId="Package\MP matches\Aggregate 1.Inputs[Aggregate Input 1].Columns[mp1_name]"
                      cachedDataType="wstr"
                      cachedLength="256"
                      cachedName="mp1_name"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp1_name]" />
                    <inputColumn
                      refId="Package\MP matches\Aggregate 1.Inputs[Aggregate Input 1].Columns[mp2_person_ref]"
                      cachedDataType="i4"
                      cachedName="mp2_person_ref"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp2_person_ref]" />
                    <inputColumn
                      refId="Package\MP matches\Aggregate 1.Inputs[Aggregate Input 1].Columns[mp2_name]"
                      cachedDataType="wstr"
                      cachedLength="256"
                      cachedName="mp2_name"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp2_name]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1].Columns[mp1_person_ref]"
                      dataType="i4"
                      lineageId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1].Columns[mp1_person_ref]"
                      name="mp1_person_ref">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp1_person_ref]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1].Columns[mp1_name]"
                      dataType="wstr"
                      length="256"
                      lineageId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1].Columns[mp1_name]"
                      name="mp1_name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp1_name]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1].Columns[mp2_person_ref]"
                      dataType="i4"
                      lineageId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1].Columns[mp2_person_ref]"
                      name="mp2_person_ref">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp2_person_ref]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1].Columns[mp2_name]"
                      dataType="wstr"
                      length="256"
                      lineageId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1].Columns[mp2_name]"
                      name="mp2_name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp2_name]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\MP matches\Get mp duplicates"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; Â© Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="Get mp duplicates"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT * FROM (
SELECT 
  mp1.person_ref AS mp1_person_ref
  ,mp1.name AS mp1_name
  ,mp2.person_ref AS mp2_person_ref
  ,mp2.name AS mp2_name
FROM person_mp_matchdata mp1
  INNER JOIN person_mp_matchdata mp2 ON mp1.matchname = mp2.matchname
WHERE mp1.person_ref != mp2.person_ref
  AND (CASE mp1.matchtext01 WHEN mp2.matchtext01 THEN 2 ELSE 0 END
  + CASE mp1.matchtext02 WHEN mp2.matchtext02 THEN 1 ELSE 0 END
  + CASE mp1.matchtext03 WHEN mp2.matchtext03 THEN 1 ELSE 0 END
  + CASE mp1.matchtext04 WHEN mp2.matchtext04 THEN 1 ELSE 0 END
  + CASE mp1.matchtext05 WHEN mp2.matchtext05 THEN 1 ELSE 0 END
  + CASE mp1.matchtext06 WHEN mp2.matchtext06 THEN 1 ELSE 0 END
  + CASE mp1.matchtext07 WHEN mp2.matchtext07 THEN 2 ELSE 0 END
  + CASE mp1.matchtext08 WHEN mp2.matchtext08 THEN 1 ELSE 0 END
  + CASE mp1.matchtext09 WHEN mp2.matchtext09 THEN 1 ELSE 0 END
  + CASE mp1.matchtext10 WHEN mp2.matchtext10 THEN 1 ELSE 0 END &gt; 1)
UNION ALL
SELECT
  mp1.person_ref
  ,mp1.name
  ,mp2.person_ref
  ,mp2.name
FROM person_mp_matchdata mp1
  INNER JOIN person_mp_matchdata mp2 ON mp1.matchlastname = mp2.matchlastname
WHERE mp1.person_ref != mp2.person_ref
  AND mp1.matchname != mp2.matchname
  AND (CASE mp1.matchtext01 WHEN mp2.matchtext01 THEN 2 ELSE 0 END
  + CASE mp1.matchtext02 WHEN mp2.matchtext02 THEN 1 ELSE 0 END
  + CASE mp1.matchtext03 WHEN mp2.matchtext03 THEN 1 ELSE 0 END
  + CASE mp1.matchtext04 WHEN mp2.matchtext04 THEN 1 ELSE 0 END
  + CASE mp1.matchtext05 WHEN mp2.matchtext05 THEN 1 ELSE 0 END
  + CASE mp1.matchtext06 WHEN mp2.matchtext06 THEN 1 ELSE 0 END
  + CASE mp1.matchtext07 WHEN mp2.matchtext07 THEN 2 ELSE 0 END
  + CASE mp1.matchtext08 WHEN mp2.matchtext08 THEN 1 ELSE 0 END
  + CASE mp1.matchtext09 WHEN mp2.matchtext09 THEN 1 ELSE 0 END
  + CASE mp1.matchtext10 WHEN mp2.matchtext10 THEN 1 ELSE 0 END &gt; 1)
UNION ALL
SELECT 
  mp1.person_ref
  ,mp1.name
  ,mp2.person_ref
  ,mp2.name
FROM person_mp_matchdata mp1
  INNER JOIN person_mp_matchdata mp2 ON mp1.matchfirstname = mp2.matchfirstname
WHERE mp1.person_ref != mp2.person_ref
  AND mp1.matchname != mp2.matchname
  AND (CASE mp1.matchtext01 WHEN mp2.matchtext01 THEN 2 ELSE 0 END
  + CASE mp1.matchtext02 WHEN mp2.matchtext02 THEN 1 ELSE 0 END
  + CASE mp1.matchtext03 WHEN mp2.matchtext03 THEN 1 ELSE 0 END
  + CASE mp1.matchtext04 WHEN mp2.matchtext04 THEN 1 ELSE 0 END
  + CASE mp1.matchtext05 WHEN mp2.matchtext05 THEN 1 ELSE 0 END
  + CASE mp1.matchtext06 WHEN mp2.matchtext06 THEN 1 ELSE 0 END
  + CASE mp1.matchtext07 WHEN mp2.matchtext07 THEN 2 ELSE 0 END
  + CASE mp1.matchtext08 WHEN mp2.matchtext08 THEN 1 ELSE 0 END
  + CASE mp1.matchtext09 WHEN mp2.matchtext09 THEN 1 ELSE 0 END
  + CASE mp1.matchtext10 WHEN mp2.matchtext10 THEN 1 ELSE 0 END &gt; 2)
  ) a</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\MP matches\Get mp duplicates.Connections[IDbConnection]"
                  connectionManagerID="{DF2B02C5-883B-4BAA-B3D9-17A96036ABE2}:external"
                  connectionManagerRefId="Project.ConnectionManagers[target]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp1_person_ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].ExternalColumns[mp1_person_ref]"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp1_person_ref]"
                      name="mp1_person_ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp1_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].ExternalColumns[mp1_name]"
                      length="256"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp1_name]"
                      name="mp1_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp2_person_ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].ExternalColumns[mp2_person_ref]"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp2_person_ref]"
                      name="mp2_person_ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp2_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].ExternalColumns[mp2_name]"
                      length="256"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].Columns[mp2_name]"
                      name="mp2_name"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].ExternalColumns[mp1_person_ref]"
                      dataType="i4"
                      name="mp1_person_ref" />
                    <externalMetadataColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].ExternalColumns[mp1_name]"
                      dataType="wstr"
                      length="256"
                      name="mp1_name" />
                    <externalMetadataColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].ExternalColumns[mp2_person_ref]"
                      dataType="i4"
                      name="mp2_person_ref" />
                    <externalMetadataColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output].ExternalColumns[mp2_name]"
                      dataType="wstr"
                      length="256"
                      name="mp2_name" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Error Output].Columns[mp1_person_ref]"
                      dataType="i4"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Error Output].Columns[mp1_person_ref]"
                      name="mp1_person_ref" />
                    <outputColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Error Output].Columns[mp1_name]"
                      dataType="wstr"
                      length="256"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Error Output].Columns[mp1_name]"
                      name="mp1_name" />
                    <outputColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Error Output].Columns[mp2_person_ref]"
                      dataType="i4"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Error Output].Columns[mp2_person_ref]"
                      name="mp2_person_ref" />
                    <outputColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Error Output].Columns[mp2_name]"
                      dataType="wstr"
                      length="256"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Error Output].Columns[mp2_name]"
                      name="mp2_name" />
                    <outputColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\MP matches\Output mp duplicates"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="2057"
              name="Output mp duplicates">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\MP matches\Output mp duplicates.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[person_mp_duplicates_csv]"
                  connectionManagerRefId="Package.ConnectionManagers[person_mp_duplicates_csv]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input].Columns[mp1_person_ref]"
                      cachedDataType="i4"
                      cachedName="mp1_person_ref"
                      externalMetadataColumnId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input].ExternalColumns[mp1_person_ref]"
                      lineageId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1].Columns[mp1_person_ref]" />
                    <inputColumn
                      refId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input].Columns[mp1_name]"
                      cachedDataType="wstr"
                      cachedLength="256"
                      cachedName="mp1_name"
                      externalMetadataColumnId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input].ExternalColumns[mp1_name]"
                      lineageId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1].Columns[mp1_name]" />
                    <inputColumn
                      refId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input].Columns[mp2_person_ref]"
                      cachedDataType="i4"
                      cachedName="mp2_person_ref"
                      externalMetadataColumnId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input].ExternalColumns[mp2_person_ref]"
                      lineageId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1].Columns[mp2_person_ref]" />
                    <inputColumn
                      refId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input].Columns[mp2_name]"
                      cachedDataType="wstr"
                      cachedLength="256"
                      cachedName="mp2_name"
                      externalMetadataColumnId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input].ExternalColumns[mp2_name]"
                      lineageId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1].Columns[mp2_name]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input].ExternalColumns[mp1_person_ref]"
                      dataType="i4"
                      name="mp1_person_ref" />
                    <externalMetadataColumn
                      refId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input].ExternalColumns[mp1_name]"
                      dataType="wstr"
                      length="256"
                      name="mp1_name" />
                    <externalMetadataColumn
                      refId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input].ExternalColumns[mp2_person_ref]"
                      dataType="i4"
                      name="mp2_person_ref" />
                    <externalMetadataColumn
                      refId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input].ExternalColumns[mp2_name]"
                      dataType="wstr"
                      length="256"
                      name="mp2_name" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\MP matches.Paths[ADO NET Source Output]"
              endId="Package\MP matches\Aggregate 1.Inputs[Aggregate Input 1]"
              name="ADO NET Source Output"
              startId="Package\MP matches\Get mp duplicates.Outputs[ADO NET Source Output]" />
            <path
              refId="Package\MP matches.Paths[Aggregate Output 1]"
              endId="Package\MP matches\Output mp duplicates.Inputs[Flat File Destination Input]"
              name="Aggregate Output 1"
              startId="Package\MP matches\Aggregate 1.Outputs[Aggregate Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Normalise person"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{6D14F92D-A167-4794-86AC-36635AF28EC3}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Normalise person"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Normalise person\Get MP"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; Â© Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="Get MP"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT
  person.person_ref
  ,person.first_name + ' ' + person.last_name AS name
  ,person.first_name + ' ' + person.last_name AS matchname
  ,person.first_name AS matchfirstname
  ,person.last_name AS matchlastname
  ,position.email_address AS xmatchtext01
  ,person.email_address AS xmatchtext02
  ,CASE position.record_status WHEN 'C' 
                               THEN organisation.name + position.displayname 
						       END AS xmatchtext03
  ,CASE position.record_status WHEN 'C' 
                               THEN organisation.name + pos_address.zipcode 
						       END AS xmatchtext04
  ,organisation.name + CONVERT(VARCHAR, person.date_of_birth, 121) AS xmatchtext05
  ,organisation.name + address.zipcode AS xmatchtext06
  ,CONVERT(VARCHAR, person.date_of_birth, 121) + address.zipcode AS xmatchtext07
  ,CONVERT(VARCHAR, person.date_of_birth, 121) + position.displayname AS xmatchtext08
  ,CONVERT(VARCHAR, person.date_of_birth, 121) + pos_address.zipcode AS xmatchtext09
  ,position.displayname + address.zipcode AS xmatchtext10
FROM P7MPUK..person
  LEFT OUTER JOIN P7MPUK..position ON person.person_ref = position.person_ref
  LEFT OUTER JOIN P7MPUK..organisation ON position.organisation_ref = organisation.organisation_ref
  LEFT OUTER JOIN P7MPUK..address pos_address ON position.address_ref = pos_address.address_ref
  LEFT OUTER JOIN P7MPUK..address ON person.person_ref = address.person_ref
                         AND address.main_address = 'Y'
WHERE EXISTS (SELECT 1
              FROM P7MPUK..person_type pt
              WHERE person.person_ref = pt.person_ref
                AND pt.type IN('A','C'))
  AND NOT EXISTS (SELECT 1
                  FROM P7MPUK..position
                  WHERE contact_status IS NOT NULL
                    AND person.person_ref = position.person_ref)
  AND person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Normalise person\Get MP.Connections[IDbConnection]"
                  connectionManagerID="{CA099C18-4884-47C3-BA4F-335965B85796}:external"
                  connectionManagerRefId="Project.ConnectionManagers[source]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[person_ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[person_ref]"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[person_ref]"
                      name="person_ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[name]"
                      length="129"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[name]"
                      name="name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[matchname]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[matchname]"
                      length="129"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[matchname]"
                      name="matchname"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[matchfirstname]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[matchfirstname]"
                      length="64"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[matchfirstname]"
                      name="matchfirstname"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[matchlastname]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[matchlastname]"
                      length="64"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[matchlastname]"
                      name="matchlastname"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext01]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext01]"
                      length="64"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext01]"
                      name="xmatchtext01"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext02]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext02]"
                      length="64"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext02]"
                      name="xmatchtext02"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext03]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext03]"
                      length="192"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext03]"
                      name="xmatchtext03"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext04]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext04]"
                      length="192"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext04]"
                      name="xmatchtext04"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext05]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext05]"
                      length="158"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext05]"
                      name="xmatchtext05"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext06]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext06]"
                      length="192"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext06]"
                      name="xmatchtext06"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext07]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext07]"
                      length="94"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext07]"
                      name="xmatchtext07"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext08]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext08]"
                      length="94"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext08]"
                      name="xmatchtext08"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext09]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext09]"
                      length="94"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext09]"
                      name="xmatchtext09"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext10]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext10]"
                      length="128"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext10]"
                      name="xmatchtext10"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[person_ref]"
                      dataType="i4"
                      name="person_ref" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[name]"
                      dataType="wstr"
                      length="129"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[matchname]"
                      dataType="wstr"
                      length="129"
                      name="matchname" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[matchfirstname]"
                      dataType="wstr"
                      length="64"
                      name="matchfirstname" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[matchlastname]"
                      dataType="wstr"
                      length="64"
                      name="matchlastname" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext01]"
                      dataType="wstr"
                      length="64"
                      name="xmatchtext01" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext02]"
                      dataType="wstr"
                      length="64"
                      name="xmatchtext02" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext03]"
                      dataType="wstr"
                      length="192"
                      name="xmatchtext03" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext04]"
                      dataType="wstr"
                      length="192"
                      name="xmatchtext04" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext05]"
                      dataType="wstr"
                      length="158"
                      name="xmatchtext05" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext06]"
                      dataType="wstr"
                      length="192"
                      name="xmatchtext06" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext07]"
                      dataType="wstr"
                      length="94"
                      name="xmatchtext07" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext08]"
                      dataType="wstr"
                      length="94"
                      name="xmatchtext08" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext09]"
                      dataType="wstr"
                      length="94"
                      name="xmatchtext09" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext10]"
                      dataType="wstr"
                      length="128"
                      name="xmatchtext10" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[person_ref]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[person_ref]"
                      name="person_ref" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[name]"
                      dataType="wstr"
                      length="129"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[matchname]"
                      dataType="wstr"
                      length="129"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[matchname]"
                      name="matchname" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[matchfirstname]"
                      dataType="wstr"
                      length="64"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[matchfirstname]"
                      name="matchfirstname" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[matchlastname]"
                      dataType="wstr"
                      length="64"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[matchlastname]"
                      name="matchlastname" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext01]"
                      dataType="wstr"
                      length="64"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext01]"
                      name="xmatchtext01" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext02]"
                      dataType="wstr"
                      length="64"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext02]"
                      name="xmatchtext02" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext03]"
                      dataType="wstr"
                      length="192"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext03]"
                      name="xmatchtext03" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext04]"
                      dataType="wstr"
                      length="192"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext04]"
                      name="xmatchtext04" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext05]"
                      dataType="wstr"
                      length="158"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext05]"
                      name="xmatchtext05" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext06]"
                      dataType="wstr"
                      length="192"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext06]"
                      name="xmatchtext06" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext07]"
                      dataType="wstr"
                      length="94"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext07]"
                      name="xmatchtext07" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext08]"
                      dataType="wstr"
                      length="94"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext08]"
                      name="xmatchtext08" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext09]"
                      dataType="wstr"
                      length="94"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext09]"
                      name="xmatchtext09" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext10]"
                      dataType="wstr"
                      length="128"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[xmatchtext10]"
                      name="xmatchtext10" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Normalise person\Get PP"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; Â© Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="Get PP"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT
  person.person_ref
  ,person.first_name + ' ' + person.last_name AS name
  ,person.first_name + ' ' + person.last_name AS matchname
  ,person.first_name AS matchfirstname
  ,person.last_name AS matchlastname
  ,position.email_address AS xmatchtext01
  ,person.email_address AS xmatchtext02
  ,CASE position.record_status WHEN 'C' 
                               THEN organisation.name + position.displayname 
						       END AS xmatchtext03
  ,CASE position.record_status WHEN 'C' 
                               THEN organisation.name + pos_address.zipcode 
						       END AS xmatchtext04
  ,organisation.name + CONVERT(VARCHAR, person.date_of_birth, 121) AS xmatchtext05
  ,organisation.name + address.zipcode AS xmatchtext06
  ,CONVERT(VARCHAR, person.date_of_birth, 121) + address.zipcode AS xmatchtext07
  ,CONVERT(VARCHAR, person.date_of_birth, 121) + position.displayname AS xmatchtext08
  ,CONVERT(VARCHAR, person.date_of_birth, 121) + pos_address.zipcode AS xmatchtext09
  ,position.displayname + address.zipcode AS xmatchtext10
FROM P7AAUK..person
  LEFT OUTER JOIN P7AAUK..position ON person.person_ref = position.person_ref
  LEFT OUTER JOIN P7AAUK..organisation ON position.organisation_ref = organisation.organisation_ref
  LEFT OUTER JOIN P7AAUK..address pos_address ON position.address_ref = pos_address.address_ref
  LEFT OUTER JOIN P7AAUK..address ON person.person_ref = address.person_ref
                         AND address.main_address = 'Y'
WHERE EXISTS (SELECT 1
              FROM P7AAUK..person_type pt
              WHERE person.person_ref = pt.person_ref
                AND pt.type IN('A','C'))
  AND NOT EXISTS (SELECT 1
                  FROM P7AAUK..position
                  WHERE contact_status IS NOT NULL
                    AND person.person_ref = position.person_ref)
  AND person.first_name IS NOT NULL
  AND person.last_name IS NOT NULL</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Normalise person\Get PP.Connections[IDbConnection]"
                  connectionManagerID="{CA099C18-4884-47C3-BA4F-335965B85796}:external"
                  connectionManagerRefId="Project.ConnectionManagers[source]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[person_ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[person_ref]"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[person_ref]"
                      name="person_ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[name]"
                      length="129"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[name]"
                      name="name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[matchname]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[matchname]"
                      length="129"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[matchname]"
                      name="matchname"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[matchfirstname]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[matchfirstname]"
                      length="64"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[matchfirstname]"
                      name="matchfirstname"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[matchlastname]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[matchlastname]"
                      length="64"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[matchlastname]"
                      name="matchlastname"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext01]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext01]"
                      length="64"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext01]"
                      name="xmatchtext01"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext02]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext02]"
                      length="64"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext02]"
                      name="xmatchtext02"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext03]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext03]"
                      length="319"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext03]"
                      name="xmatchtext03"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext04]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext04]"
                      length="319"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext04]"
                      name="xmatchtext04"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext05]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext05]"
                      length="285"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext05]"
                      name="xmatchtext05"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext06]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext06]"
                      length="319"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext06]"
                      name="xmatchtext06"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext07]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext07]"
                      length="94"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext07]"
                      name="xmatchtext07"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext08]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext08]"
                      length="94"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext08]"
                      name="xmatchtext08"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext09]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext09]"
                      length="94"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext09]"
                      name="xmatchtext09"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext10]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext10]"
                      length="128"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext10]"
                      name="xmatchtext10"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[person_ref]"
                      dataType="i4"
                      name="person_ref" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[name]"
                      dataType="wstr"
                      length="129"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[matchname]"
                      dataType="wstr"
                      length="129"
                      name="matchname" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[matchfirstname]"
                      dataType="wstr"
                      length="64"
                      name="matchfirstname" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[matchlastname]"
                      dataType="wstr"
                      length="64"
                      name="matchlastname" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext01]"
                      dataType="wstr"
                      length="64"
                      name="xmatchtext01" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext02]"
                      dataType="wstr"
                      length="64"
                      name="xmatchtext02" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext03]"
                      dataType="wstr"
                      length="319"
                      name="xmatchtext03" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext04]"
                      dataType="wstr"
                      length="319"
                      name="xmatchtext04" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext05]"
                      dataType="wstr"
                      length="285"
                      name="xmatchtext05" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext06]"
                      dataType="wstr"
                      length="319"
                      name="xmatchtext06" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext07]"
                      dataType="wstr"
                      length="94"
                      name="xmatchtext07" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext08]"
                      dataType="wstr"
                      length="94"
                      name="xmatchtext08" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext09]"
                      dataType="wstr"
                      length="94"
                      name="xmatchtext09" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].ExternalColumns[xmatchtext10]"
                      dataType="wstr"
                      length="128"
                      name="xmatchtext10" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[person_ref]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[person_ref]"
                      name="person_ref" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[name]"
                      dataType="wstr"
                      length="129"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[matchname]"
                      dataType="wstr"
                      length="129"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[matchname]"
                      name="matchname" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[matchfirstname]"
                      dataType="wstr"
                      length="64"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[matchfirstname]"
                      name="matchfirstname" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[matchlastname]"
                      dataType="wstr"
                      length="64"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[matchlastname]"
                      name="matchlastname" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext01]"
                      dataType="wstr"
                      length="64"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext01]"
                      name="xmatchtext01" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext02]"
                      dataType="wstr"
                      length="64"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext02]"
                      name="xmatchtext02" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext03]"
                      dataType="wstr"
                      length="319"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext03]"
                      name="xmatchtext03" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext04]"
                      dataType="wstr"
                      length="319"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext04]"
                      name="xmatchtext04" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext05]"
                      dataType="wstr"
                      length="285"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext05]"
                      name="xmatchtext05" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext06]"
                      dataType="wstr"
                      length="319"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext06]"
                      name="xmatchtext06" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext07]"
                      dataType="wstr"
                      length="94"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext07]"
                      name="xmatchtext07" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext08]"
                      dataType="wstr"
                      length="94"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext08]"
                      name="xmatchtext08" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext09]"
                      dataType="wstr"
                      length="94"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext09]"
                      name="xmatchtext09" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext10]"
                      dataType="wstr"
                      length="128"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[xmatchtext10]"
                      name="xmatchtext10" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Normalise person\Load MP"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; Â© Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
              name="Load MP"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  description="The Destination database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."person_mp_matchdata"</property>
                <property
                  dataType="System.Int32"
                  description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                  expressionType="Notify"
                  name="BatchSize">0</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                  expressionType="Notify"
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                  expressionType="Notify"
                  name="UseBulkInsertWhenPossible">true</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ADONETDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Normalise person\Load MP.Connections[IDbConnection]"
                  connectionManagerID="{DF2B02C5-883B-4BAA-B3D9-17A96036ABE2}:external"
                  connectionManagerRefId="Project.ConnectionManagers[target]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="ADO NET Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[person_ref]"
                      cachedDataType="i4"
                      cachedName="person_ref"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[person_ref]"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[person_ref]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="129"
                      cachedName="name"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[name]"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[name]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[matchname]"
                      cachedDataType="wstr"
                      cachedLength="129"
                      cachedName="matchname"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchname]"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[matchname]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[matchfirstname]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="matchfirstname"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchfirstname]"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[matchfirstname]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[matchlastname]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="matchlastname"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchlastname]"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[matchlastname]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[matchtext01]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext01"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext01]"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext01]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[matchtext02]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext02"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext02]"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext02]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[matchtext03]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext03"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext03]"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext03]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[matchtext04]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext04"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext04]"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext04]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[matchtext05]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext05"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext05]"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext05]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[matchtext06]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext06"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext06]"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext06]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[matchtext07]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext07"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext07]"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext07]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[matchtext08]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext08"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext08]"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext08]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[matchtext09]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext09"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext09]"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext09]" />
                    <inputColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].Columns[matchtext10]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext10"
                      externalMetadataColumnId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext10]"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext10]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[person_ref]"
                      dataType="i4"
                      name="person_ref" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[name]"
                      dataType="wstr"
                      length="256"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchname]"
                      dataType="wstr"
                      length="256"
                      name="matchname" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchfirstname]"
                      dataType="wstr"
                      length="256"
                      name="matchfirstname" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchlastname]"
                      dataType="wstr"
                      length="256"
                      name="matchlastname" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext01]"
                      dataType="wstr"
                      length="40"
                      name="matchtext01" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext02]"
                      dataType="wstr"
                      length="40"
                      name="matchtext02" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext03]"
                      dataType="wstr"
                      length="40"
                      name="matchtext03" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext04]"
                      dataType="wstr"
                      length="40"
                      name="matchtext04" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext05]"
                      dataType="wstr"
                      length="40"
                      name="matchtext05" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext06]"
                      dataType="wstr"
                      length="40"
                      name="matchtext06" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext07]"
                      dataType="wstr"
                      length="40"
                      name="matchtext07" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext08]"
                      dataType="wstr"
                      length="40"
                      name="matchtext08" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext09]"
                      dataType="wstr"
                      length="40"
                      name="matchtext09" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext10]"
                      dataType="wstr"
                      length="40"
                      name="matchtext10" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Normalise person\Load MP.Outputs[ADO NET Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="ADO NET Destination Error Output"
                  synchronousInputId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Normalise person\Load MP.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Load MP.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Normalise person\Load MP.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Load MP.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Normalise person\Load PP"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; Â© Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
              name="Load PP"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  description="The Destination database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."person_pp_matchdata"</property>
                <property
                  dataType="System.Int32"
                  description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                  expressionType="Notify"
                  name="BatchSize">0</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                  expressionType="Notify"
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                  expressionType="Notify"
                  name="UseBulkInsertWhenPossible">true</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ADONETDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Normalise person\Load PP.Connections[IDbConnection]"
                  connectionManagerID="{DF2B02C5-883B-4BAA-B3D9-17A96036ABE2}:external"
                  connectionManagerRefId="Project.ConnectionManagers[target]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="ADO NET Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[person_ref]"
                      cachedDataType="i4"
                      cachedName="person_ref"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[person_ref]"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[person_ref]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="129"
                      cachedName="name"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[name]"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[name]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[matchname]"
                      cachedDataType="wstr"
                      cachedLength="129"
                      cachedName="matchname"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchname]"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[matchname]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[matchfirstname]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="matchfirstname"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchfirstname]"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[matchfirstname]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[matchlastname]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="matchlastname"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchlastname]"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[matchlastname]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[matchtext01]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext01"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext01]"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext01]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[matchtext02]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext02"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext02]"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext02]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[matchtext03]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext03"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext03]"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext03]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[matchtext04]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext04"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext04]"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext04]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[matchtext05]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext05"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext05]"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext05]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[matchtext06]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext06"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext06]"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext06]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[matchtext07]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext07"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext07]"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext07]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[matchtext08]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext08"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext08]"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext08]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[matchtext09]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext09"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext09]"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext09]" />
                    <inputColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].Columns[matchtext10]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="matchtext10"
                      externalMetadataColumnId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext10]"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext10]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[person_ref]"
                      dataType="i4"
                      name="person_ref" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[name]"
                      dataType="wstr"
                      length="256"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchname]"
                      dataType="wstr"
                      length="256"
                      name="matchname" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchfirstname]"
                      dataType="wstr"
                      length="256"
                      name="matchfirstname" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchlastname]"
                      dataType="wstr"
                      length="256"
                      name="matchlastname" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext01]"
                      dataType="wstr"
                      length="40"
                      name="matchtext01" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext02]"
                      dataType="wstr"
                      length="40"
                      name="matchtext02" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext03]"
                      dataType="wstr"
                      length="40"
                      name="matchtext03" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext04]"
                      dataType="wstr"
                      length="40"
                      name="matchtext04" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext05]"
                      dataType="wstr"
                      length="40"
                      name="matchtext05" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext06]"
                      dataType="wstr"
                      length="40"
                      name="matchtext06" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext07]"
                      dataType="wstr"
                      length="40"
                      name="matchtext07" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext08]"
                      dataType="wstr"
                      length="40"
                      name="matchtext08" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext09]"
                      dataType="wstr"
                      length="40"
                      name="matchtext09" />
                    <externalMetadataColumn
                      refId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input].ExternalColumns[matchtext10]"
                      dataType="wstr"
                      length="40"
                      name="matchtext10" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Normalise person\Load PP.Outputs[ADO NET Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="ADO NET Destination Error Output"
                  synchronousInputId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Normalise person\Load PP.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Load PP.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Normalise person\Load PP.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Load PP.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Normalise person\Normalise MP"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Normalise MP"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text.RegularExpressions;
using System.Text;
using System.Security.Cryptography;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    private string CreateHash(string data)
    {

        //get byte array of long data string
        var dataToHash = (new UnicodeEncoding()).GetBytes(data);

        //create hash provider and compute hash of byte array
        var sha1 = new SHA1CryptoServiceProvider();
        var hashedData = sha1.ComputeHash(dataToHash);

        RNGCryptoServiceProvider.Create().GetBytes(dataToHash);
        //convert results to hexadecimal string (SQL friendly format)
        var result = BitConverter.ToString(hashedData).Replace("-", "");

        return result;

    }
    Regex re = new Regex(@"[^A-Z0-9]");
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        string matchname = Regex.Replace(Row.matchname, @"[^a-zA-Z ]", "").ToUpper();
        string[] names = Regex.Split(matchname, @"\s+");
        Array.Sort(names);
        string tempname = "";
        foreach (string name in names) {
            tempname += name;
        }
        
        Row.matchname = tempname;
        Row.matchfirstname = Regex.Replace(Row.matchfirstname, @"[^a-zA-Z]", "").ToUpper();
        Row.matchlastname = Regex.Replace(Row.matchlastname, @"[^a-zA-Z]", "").ToUpper();

        String temp;

        if (!Row.xmatchtext01_IsNull)
        {
            temp = re.Replace(Row.xmatchtext01.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext01_IsNull = true;
            }
            else
            {
                Row.xmatchtext01 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext02_IsNull)
        {
            temp = re.Replace(Row.xmatchtext02.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext02_IsNull = true;
            }
            else
            {
                Row.xmatchtext02 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext03_IsNull)
        {
            temp = re.Replace(Row.xmatchtext03.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext03_IsNull = true;
            }
            else
            {
                Row.xmatchtext03 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext04_IsNull)
        {
            temp = re.Replace(Row.xmatchtext04.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext04_IsNull = true;
            }
            else
            {
                Row.xmatchtext04 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext05_IsNull)
        {
            temp = re.Replace(Row.xmatchtext05.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext05_IsNull = true;
            }
            else
            {
                Row.xmatchtext05 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext06_IsNull)
        {
            temp = re.Replace(Row.xmatchtext06.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext06_IsNull = true;
            }
            else
            {
                Row.xmatchtext06 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext07_IsNull)
        {
            temp = re.Replace(Row.xmatchtext07.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext07_IsNull = true;
            }
            else
            {
                Row.xmatchtext07 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext08_IsNull)
        {
            temp = re.Replace(Row.xmatchtext08.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext08_IsNull = true;
            }
            else
            {
                Row.xmatchtext08 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext09_IsNull)
        {
            temp = re.Replace(Row.xmatchtext09.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext09_IsNull = true;
            }
            else
            {
                Row.xmatchtext09 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext10_IsNull)
        {
            temp = re.Replace(Row.xmatchtext10.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext10_IsNull = true;
            }
            else
            {
                Row.xmatchtext10 = CreateHash(temp);
            }
        }

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String matchname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool matchname_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String matchfirstname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool matchfirstname_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String matchlastname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool matchlastname_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext01
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool xmatchtext01_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext02
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
        set
        {
            this[4] = value;
        }
    }
    public bool xmatchtext02_IsNull
    {
        get
        {
            return IsNull(4);
        }
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext03
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
        set
        {
            this[5] = value;
        }
    }
    public bool xmatchtext03_IsNull
    {
        get
        {
            return IsNull(5);
        }
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext04
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
        set
        {
            this[6] = value;
        }
    }
    public bool xmatchtext04_IsNull
    {
        get
        {
            return IsNull(6);
        }
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext05
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
        set
        {
            this[7] = value;
        }
    }
    public bool xmatchtext05_IsNull
    {
        get
        {
            return IsNull(7);
        }
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext06
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
        set
        {
            this[8] = value;
        }
    }
    public bool xmatchtext06_IsNull
    {
        get
        {
            return IsNull(8);
        }
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext07
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
        set
        {
            this[9] = value;
        }
    }
    public bool xmatchtext07_IsNull
    {
        get
        {
            return IsNull(9);
        }
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext08
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
        set
        {
            this[10] = value;
        }
    }
    public bool xmatchtext08_IsNull
    {
        get
        {
            return IsNull(10);
        }
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext09
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
        set
        {
            this[11] = value;
        }
    }
    public bool xmatchtext09_IsNull
    {
        get
        {
            return IsNull(11);
        }
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext10
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
        set
        {
            this[12] = value;
        }
    }
    public bool xmatchtext10_IsNull
    {
        get
        {
            return IsNull(12);
        }
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties.Settings.get_Default():SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties.Sett" +
    "ings")]

namespace SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_840a1e5a8ae24f1b9f4a25dd75983a48.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{c32566e5-f74e-478d-aede-1a96aa83dd79}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_840a1e5a8ae24f1b9f4a25dd75983a48</RootNamespace><AssemblyName>SC_C082B504E6ED42ACB73ABEDC4A00AC10</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptComponent" GeneratedNamespace="SC_840a1e5a8ae24f1b9f4a25dd75983a48" IconIndex="0"></Host><ProjectClient><HostIdentifier>SSIS_SC120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_840a1e5a8ae24f1b9f4a25dd75983a48</msb:CodeName>
		<msb:DisplayName>SC_840a1e5a8ae24f1b9f4a25dd75983a48</msb:DisplayName>
		<msb:ProjectId>{A677D965-1CA7-4B58-A534-886BA24F9791}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_840a1e5a8ae24f1b9f4a25dd75983a48.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_840a1e5a8ae24f1b9f4a25dd75983a48")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Michael Page International PLC")]
[assembly: AssemblyProduct("SC_840a1e5a8ae24f1b9f4a25dd75983a48")]
[assembly: AssemblyCopyright("Copyright @ Michael Page International PLC 2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_C082B504E6ED42ACB73ABEDC4A00AC10.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAShdVUAAAAAAAAAAOAAAiELAQsAACgAAAAIAAAAAAAALkYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANhFAABTAAAAAGAAAKgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANCYAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAKgEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
RgAAAAAAAEgAAAACAAUAUCkAAIgcAAABAAAAAAAAAJgoAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnNBAAAGfQEAAAQCAnNCAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCgAABm8DAAAGKkorBwIDbwQAAAYDbz8AAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioAABMwAwA9AAAAAQAAEXMTAAAKA28UAAAKCnMVAAAKCwcGbxYAAAoMKBcA
AAoGbxgAAAoIKBkAAApyEQAAcHIVAABwbxoAAAoNCSoAAAATMAQAggMAAAIAABEDbwsAAAZyFwAA
cHIVAABwKBsAAApvHAAACgoGci0AAHAoHQAACgsHKAEAACtyFQAAcAwHEwUWEwYrFBEFEQaaDQgJ
KB8AAAoMEQYXWBMGEQYRBY5pMuQDCG8MAAAGAwNvDwAABnI1AABwchUAAHAoGwAACm8cAAAKbxAA
AAYDA28TAAAGcjUAAHByFQAAcCgbAAAKbxwAAApvFAAABgNvGQAABi1CAnsDAAAEA28XAAAGbxwA
AApyFQAAcG8gAAAKEwQRBHIVAABwKCEAAAosCQMXbxoAAAYrDgMCEQQoBwAABm8YAAAGA28dAAAG
LUICewMAAAQDbxsAAAZvHAAACnIVAABwbyAAAAoTBBEEchUAAHAoIQAACiwJAxdvHgAABisOAwIR
BCgHAAAGbxwAAAYDbyEAAAYtQgJ7AwAABANvHwAABm8cAAAKchUAAHBvIAAAChMEEQRyFQAAcCgh
AAAKLAkDF28iAAAGKw4DAhEEKAcAAAZvIAAABgNvJQAABi1CAnsDAAAEA28jAAAGbxwAAApyFQAA
cG8gAAAKEwQRBHIVAABwKCEAAAosCQMXbyYAAAYrDgMCEQQoBwAABm8kAAAGA28pAAAGLUICewMA
AAQDbycAAAZvHAAACnIVAABwbyAAAAoTBBEEchUAAHAoIQAACiwJAxdvKgAABisOAwIRBCgHAAAG
bygAAAYDby0AAAYtQgJ7AwAABANvKwAABm8cAAAKchUAAHBvIAAAChMEEQRyFQAAcCghAAAKLAkD
F28uAAAGKw4DAhEEKAcAAAZvLAAABgNvMQAABi1CAnsDAAAEA28vAAAGbxwAAApyFQAAcG8gAAAK
EwQRBHIVAABwKCEAAAosCQMXbzIAAAYrDgMCEQQoBwAABm8wAAAGA281AAAGLUICewMAAAQDbzMA
AAZvHAAACnIVAABwbyAAAAoTBBEEchUAAHAoIQAACiwJAxdvNgAABisOAwIRBCgHAAAGbzQAAAYD
bzkAAAYtQgJ7AwAABANvNwAABm8cAAAKchUAAHBvIAAAChMEEQRyFQAAcCghAAAKLAkDF286AAAG
Kw4DAhEEKAcAAAZvOAAABgNvPQAABi1BAnsDAAAEA287AAAGbxwAAApyFQAAcG8gAAAKEwQRBHIV
AABwKCEAAAosCAMXbz4AAAYqAwIRBCgHAAAGbzwAAAYqXgJySQAAcHMiAAAKfQMAAAQCKAEAAAYq
KgIDBAUoIwAACipSAnskAAAKAnslAAAKFpRvJgAACiomAhYDKCcAAAoqIgIWKCgAAAoqWgMsCAIW
KCkAAAoqcl0AAHBzKgAACnpSAnskAAAKAnslAAAKF5RvJgAACiomAhcDKCcAAAoqIgIXKCgAAAoq
WgMsCAIXKCkAAAoqcl0AAHBzKgAACnpSAnskAAAKAnslAAAKGJRvJgAACiomAhgDKCcAAAoqIgIY
KCgAAAoqWgMsCAIYKCkAAAoqcl0AAHBzKgAACnpSAnskAAAKAnslAAAKGZRvJgAACiomAhkDKCcA
AAoqIgIZKCgAAAoqWgMsCAIZKCkAAAoqcl0AAHBzKgAACnpSAnskAAAKAnslAAAKGpRvJgAACiom
AhoDKCcAAAoqIgIaKCgAAAoqWgMsCAIaKCkAAAoqcl0AAHBzKgAACnpSAnskAAAKAnslAAAKG5Rv
JgAACiomAhsDKCcAAAoqIgIbKCgAAAoqWgMsCAIbKCkAAAoqcl0AAHBzKgAACnpSAnskAAAKAnsl
AAAKHJRvJgAACiomAhwDKCcAAAoqIgIcKCgAAAoqWgMsCAIcKCkAAAoqcl0AAHBzKgAACnpSAnsk
AAAKAnslAAAKHZRvJgAACiomAh0DKCcAAAoqIgIdKCgAAAoqWgMsCAIdKCkAAAoqcl0AAHBzKgAA
CnpSAnskAAAKAnslAAAKHpRvJgAACiomAh4DKCcAAAoqIgIeKCgAAAoqWgMsCAIeKCkAAAoqcl0A
AHBzKgAACnpWAnskAAAKAnslAAAKHwmUbyYAAAoqKgIfCQMoJwAACiomAh8JKCgAAAoqXgMsCQIf
CSgpAAAKKnJdAABwcyoAAAp6VgJ7JAAACgJ7JQAACh8KlG8mAAAKKioCHwoDKCcAAAoqJgIfCigo
AAAKKl4DLAkCHwooKQAACipyXQAAcHMqAAAKelYCeyQAAAoCeyUAAAofC5RvJgAACioqAh8LAygn
AAAKKiYCHwsoKAAACipeAywJAh8LKCkAAAoqcl0AAHBzKgAACnpWAnskAAAKAnslAAAKHwyUbyYA
AAoqKgIfDAMoJwAACiomAh8MKCgAAAoqXgMsCQIfDCgpAAAKKnJdAABwcyoAAAp6HgIoKwAACioe
AigsAAAKKjoCKC0AAAoCA30EAAAEKjoCKC0AAAoCA30FAAAEKh4CKC0AAAoqAAATMAIALQAAAAMA
ABF+BgAABC0gcvoAAHDQBwAAAigvAAAKbzAAAApzMQAACgoGgAYAAAR+BgAABCoafgcAAAQqHgKA
BwAABCoafggAAAQqLnNIAAAGgAgAAAQqHgIoNAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAPQKAAAjfgAAYAsAAFwNAAAjU3RyaW5ncwAAAAC8GAAA
bAEAACNVUwAoGgAAEAAAACNHVUlEAAAAOBoAAFACAAAjQmxvYgAAAAAAAAACAAABVxWiAQkJAAAA
+iUzABYAAAEAAAAnAAAACAAAAAgAAABJAAAAKAAAADQAAAAPAAAAAwAAAAMAAAAdAAAAOAAAAAEA
AAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgB2Ac0ABgCF
Ac0ADgAMAu0BCgAhCBAICgBSCD0ICgAwCRYJCgBbCUkJCgByCUkJCgCPCUkJCgCuCUkJCgDHCUkJ
CgDgCUkJCgD7CUkJCgAWCkkJCgAvCkkJCgBoCkgKCgCICkgKCgDKChQBCgDRChQBBgD6Cs0ACgAt
CyELCgA9CyELCgBsC08LCgCGC08LCgCgC08LCgC9CxQBCgDpCxQBCgApDBQBCgBWDEMMCgBzDBQB
CgB4DBQBCgCcDEkJDgDIDLIMDgDhDLIMCgD2DEgKAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQAB
AAEAEABAAAAACAADAAUAAQAQAEsAAAAJAAQACgABABAAWAAAAA0ABABBAAEAEABkAAAADQAFAEIA
AAAQAG4AeAANAAYAQwAAARAApwB4ABEACABHAAYAWAATAAYAZAAXAAEAEgI0AAEAAAhcAAEAAAhc
ABEAMQhmABEAXghqABEAogiIAFAgAAAAAIYYTwEbAAEAcCAAAAAAxgCTAR8AAQCVIAAAAADGAaAB
KQAFAKggAAAAAMYBtAEpAAYAqiAAAAAAxgDLARsABwCyIAAAAADGANYBGwAHALwgAAAAAIEA4gEv
AAcACCEAAAAAxgC0ASkACACWJAAAAACGGE8BGwAJAK4kAAAAAIYYTwE4AAkAuSQAAAAAhggVAkIA
DADOJAAAAACGCCMCRgAMANgkAAAAAIYIMQJLAA0A4SQAAAAAhghGAk8ADQD4JAAAAACGCFsCQgAO
AA0lAAAAAIYIbgJGAA4AFyUAAAAAhgiBAksADwAgJQAAAACGCJsCTwAPADclAAAAAIYItQJCABAA
TCUAAAAAhgjHAkYAEABWJQAAAACGCNkCSwARAF8lAAAAAIYI8gJPABEAdiUAAAAAhggLA0IAEgCL
JQAAAACGCBwDRgASAJUlAAAAAIYILQNLABMAniUAAAAAhghFA08AEwC1JQAAAACGCF0DQgAUAMol
AAAAAIYIbgNGABQA1CUAAAAAhgh/A0sAFQDdJQAAAACGCJcDTwAVAPQlAAAAAIYIrwNCABYACSYA
AAAAhgjAA0YAFgATJgAAAACGCNEDSwAXABwmAAAAAIYI6QNPABcAMyYAAAAAhggBBEIAGABIJgAA
AACGCBIERgAYAFImAAAAAIYIIwRLABkAWyYAAAAAhgg7BE8AGQByJgAAAACGCFMEQgAaAIcmAAAA
AIYIZARGABoAkSYAAAAAhgh1BEsAGwCaJgAAAACGCI0ETwAbALEmAAAAAIYIpQRCABwAxiYAAAAA
hgi2BEYAHADQJgAAAACGCMcESwAdANkmAAAAAIYI3wRPAB0A8CYAAAAAhgj3BEIAHgAGJwAAAACG
CAgFRgAeABEnAAAAAIYIGQVLAB8AGycAAAAAhggxBU8AHwAzJwAAAACGCEkFQgAgAEknAAAAAIYI
WgVGACAAVCcAAAAAhghrBUsAIQBeJwAAAACGCIMFTwAhAHYnAAAAAIYImwVCACIAjCcAAAAAhgis
BUYAIgCXJwAAAACGCL0FSwAjAKEnAAAAAIYI1QVPACMAuScAAAAAhgjtBUIAJADPJwAAAACGCP4F
RgAkANonAAAAAIYIDwZLACUA5CcAAAAAhggnBk8AJQD8JwAAAACGAD8GSwAmAAQoAAAAAIYARwZL
ACYADCgAAAAAhhhPAWAAJgAbKAAAAACGGE8BYAAnACooAAAAAIMYTwEbACgANCgAAAAAkwhuCG4A
KABtKAAAAACTCIIIcwAoAHQoAAAAAJMIjgh4ACgAfCgAAAAAlgiyCIwAKQCPKAAAAACGGE8BGwAp
AIMoAAAAAJEYEQ1RASkAAAABAMYIAAACAM4IAAADANgIAAAEAN8IAAABANgIAAABAOkIAAABAO0I
AAABAOkIAAABANgIAAACAPIIAAADAN8IAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAAB
AAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJ
AAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAAB
AAYJAAABAAYJAAABAAwJAAABAAwJAAABAAYJUQBPAUYAWQBPAUYAYQBPAUYAaQBPAUYAcQBPAUYA
eQBPAUYAgQBPAUYAiQBPAUYAkQBPAUYAmQBPAUYAoQBPAZYAqQBPARsACQBPARsAsQDiCpsACQDp
CqIAwQBPARsACQDLARsACQDWARsAyQBPARsA0QBGC60A2QBPARsA4QCUC7MA6QC2C7oA6QBGC78A
8QDKC8UAsQDTC8sAOQDTC9sAsQDbC0IAOQDjC+IA+QDvC+kAsQD0C/UAOQDTC8sAsQD7C/sAOQBP
AUYAEQBPATgAEQDYCA0BEQDyCBEBKQAHDBUBEQARDBoBEQAaDCABEQAhDJYAAQFPAUYAEQA/BksA
EQBHBksAGQBPARsACQFPARsAEQGKDCUBEQGlDC4BQQBPATQBKQFPAUEBOQFPARsAIQBPARsALgAb
AMYBLgBjAC4CLgALAFUBLgATAJ0BLgAjAMYBLgArAMwBLgAzAJ0BLgA7APABLgBDAMYBLgBbACUC
YwCDAKgA4wBzAagAAQGbAagAaQOTAUgBiQOTAUgB0QABATwBBAABAAcAGwAIAB0AAABTBlQAAABd
BlgAAABuBlQAAAB9BlgAAACTBlQAAAChBlgAAAC2BlQAAADDBlgAAADXBlQAAADkBlgAAAD4BlQA
AAAFB1gAAAAZB1QAAAAmB1gAAAA6B1QAAABHB1gAAABbB1QAAABoB1gAAAB8B1QAAACJB1gAAACd
B1QAAACqB1gAAAC+B1QAAADLB1gAAADfB1QAAADsB1gAAAAhCH4AAACaCIMAAAC+CJEAAgALAAMA
AQAMAAMAAgANAAUAAQAOAAUAAQAQAAcAAgAPAAcAAgARAAkAAQASAAkAAgATAAsAAQAUAAsAAgAV
AA0AAQAWAA0AAgAXAA8AAQAYAA8AAQAaABEAAgAZABEAAgAbABMAAQAcABMAAQAeABUAAgAdABUA
AgAfABcAAQAgABcAAgAhABkAAQAiABkAAgAjABsAAQAkABsAAQAmAB0AAgAlAB0AAQAoAB8AAgAn
AB8AAgApACEAAQAqACEAAQAsACMAAgArACMAAgAtACUAAQAuACUAAgAvACcAAQAwACcAAgAxACkA
AQAyACkAAQA0ACsAAgAzACsAAgA1AC0AAQA2AC0AAgA3AC8AAQA4AC8AAgA5ADEAAQA6ADEAAgA7
ADMAAQA8ADMAAgA9ADUAAQA+ADUAAgBEADcAAgBFADkAAQBGADkAAgBHADsABIAAAAEAAAAFFgJj
AAAAAAAApgoAAAwAAAAAAAAAAAAAAAEAsAAAAAAABAAAAAAAAAAAAAAACgALAQAAAAAEAAAAAAAA
AAAAAAAKABQBAAAAAAwAAAAAAAAAAAAAAAEAVQEAAAAAAAAAAAEAAAAYDQAAPQDxAAAAADxNb2R1
bGU+AFNDX0MwODJCNTA0RTZFRDQyQUNCNzNBQkVEQzRBMDBBQzEwLmRsbABVc2VyQ29tcG9uZW50
AFNjcmlwdE1haW4ASW5wdXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMA
U0NfODQwYTFlNWE4YWUyNGYxYjlmNGEyNWRkNzU5ODNhNDguUHJvcGVydGllcwBTZXR0aW5ncwBN
aWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVs
aW5lAFNjcmlwdENvbXBvbmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABT
eXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUHJl
RXhlY3V0ZQBQb3N0RXhlY3V0ZQBDcmVhdGVIYXNoAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNz
aW9ucwBSZWdleAByZQBnZXRfbWF0Y2huYW1lAHNldF9tYXRjaG5hbWUAZ2V0X21hdGNobmFtZV9J
c051bGwAc2V0X21hdGNobmFtZV9Jc051bGwAZ2V0X21hdGNoZmlyc3RuYW1lAHNldF9tYXRjaGZp
cnN0bmFtZQBnZXRfbWF0Y2hmaXJzdG5hbWVfSXNOdWxsAHNldF9tYXRjaGZpcnN0bmFtZV9Jc051
bGwAZ2V0X21hdGNobGFzdG5hbWUAc2V0X21hdGNobGFzdG5hbWUAZ2V0X21hdGNobGFzdG5hbWVf
SXNOdWxsAHNldF9tYXRjaGxhc3RuYW1lX0lzTnVsbABnZXRfeG1hdGNodGV4dDAxAHNldF94bWF0
Y2h0ZXh0MDEAZ2V0X3htYXRjaHRleHQwMV9Jc051bGwAc2V0X3htYXRjaHRleHQwMV9Jc051bGwA
Z2V0X3htYXRjaHRleHQwMgBzZXRfeG1hdGNodGV4dDAyAGdldF94bWF0Y2h0ZXh0MDJfSXNOdWxs
AHNldF94bWF0Y2h0ZXh0MDJfSXNOdWxsAGdldF94bWF0Y2h0ZXh0MDMAc2V0X3htYXRjaHRleHQw
MwBnZXRfeG1hdGNodGV4dDAzX0lzTnVsbABzZXRfeG1hdGNodGV4dDAzX0lzTnVsbABnZXRfeG1h
dGNodGV4dDA0AHNldF94bWF0Y2h0ZXh0MDQAZ2V0X3htYXRjaHRleHQwNF9Jc051bGwAc2V0X3ht
YXRjaHRleHQwNF9Jc051bGwAZ2V0X3htYXRjaHRleHQwNQBzZXRfeG1hdGNodGV4dDA1AGdldF94
bWF0Y2h0ZXh0MDVfSXNOdWxsAHNldF94bWF0Y2h0ZXh0MDVfSXNOdWxsAGdldF94bWF0Y2h0ZXh0
MDYAc2V0X3htYXRjaHRleHQwNgBnZXRfeG1hdGNodGV4dDA2X0lzTnVsbABzZXRfeG1hdGNodGV4
dDA2X0lzTnVsbABnZXRfeG1hdGNodGV4dDA3AHNldF94bWF0Y2h0ZXh0MDcAZ2V0X3htYXRjaHRl
eHQwN19Jc051bGwAc2V0X3htYXRjaHRleHQwN19Jc051bGwAZ2V0X3htYXRjaHRleHQwOABzZXRf
eG1hdGNodGV4dDA4AGdldF94bWF0Y2h0ZXh0MDhfSXNOdWxsAHNldF94bWF0Y2h0ZXh0MDhfSXNO
dWxsAGdldF94bWF0Y2h0ZXh0MDkAc2V0X3htYXRjaHRleHQwOQBnZXRfeG1hdGNodGV4dDA5X0lz
TnVsbABzZXRfeG1hdGNodGV4dDA5X0lzTnVsbABnZXRfeG1hdGNodGV4dDEwAHNldF94bWF0Y2h0
ZXh0MTAAZ2V0X3htYXRjaHRleHQxMF9Jc051bGwAc2V0X3htYXRjaHRleHQxMF9Jc051bGwATmV4
dFJvdwBFbmRPZlJvd3NldABtYXRjaG5hbWUAbWF0Y2huYW1lX0lzTnVsbABtYXRjaGZpcnN0bmFt
ZQBtYXRjaGZpcnN0bmFtZV9Jc051bGwAbWF0Y2hsYXN0bmFtZQBtYXRjaGxhc3RuYW1lX0lzTnVs
bAB4bWF0Y2h0ZXh0MDEAeG1hdGNodGV4dDAxX0lzTnVsbAB4bWF0Y2h0ZXh0MDIAeG1hdGNodGV4
dDAyX0lzTnVsbAB4bWF0Y2h0ZXh0MDMAeG1hdGNodGV4dDAzX0lzTnVsbAB4bWF0Y2h0ZXh0MDQA
eG1hdGNodGV4dDA0X0lzTnVsbAB4bWF0Y2h0ZXh0MDUAeG1hdGNodGV4dDA1X0lzTnVsbAB4bWF0
Y2h0ZXh0MDYAeG1hdGNodGV4dDA2X0lzTnVsbAB4bWF0Y2h0ZXh0MDcAeG1hdGNodGV4dDA3X0lz
TnVsbAB4bWF0Y2h0ZXh0MDgAeG1hdGNodGV4dDA4X0lzTnVsbAB4bWF0Y2h0ZXh0MDkAeG1hdGNo
dGV4dDA5X0lzTnVsbAB4bWF0Y2h0ZXh0MTAAeG1hdGNodGV4dDEwX0lzTnVsbABQYXJlbnRDb21w
b25lbnQAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X0RlZmF1bHQARGVmYXVsdABJbnB1dElEAElucHV0TmFtZQBCdWZmZXIAT3V0cHV0TWFwAFJvdwBk
YXRhAEJ1ZmZlckNvbHVtbkluZGV4ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNv
bmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmli
dXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ19DMDgyQjUwNEU2RUQ0
MkFDQjczQUJFREM0QTAwQUMxMABTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29s
dW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBTeXN0ZW0u
VGV4dABVbmljb2RlRW5jb2RpbmcARW5jb2RpbmcAR2V0Qnl0ZXMAU3lzdGVtLlNlY3VyaXR5LkNy
eXB0b2dyYXBoeQBTSEExQ3J5cHRvU2VydmljZVByb3ZpZGVyAEhhc2hBbGdvcml0aG0AQ29tcHV0
ZUhhc2gAUmFuZG9tTnVtYmVyR2VuZXJhdG9yAENyZWF0ZQBCaXRDb252ZXJ0ZXIAVG9TdHJpbmcA
UmVwbGFjZQBUb1VwcGVyAFNwbGl0AEFycmF5AFNvcnQAQ29uY2F0AG9wX0VxdWFsaXR5AEdldFN0
cmluZwBzZXRfSXRlbQBJc051bGwAU2V0TnVsbABJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN5
c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3Rl
bS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNDXzg0MGExZTVhOGFlMjRm
MWI5ZjRhMjVkZDc1OTgzYTQ4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAA9JAG4A
cAB1AHQAIAAwAAADLQABAQAVWwBeAGEALQB6AEEALQBaACAAXQABB1wAcwArAAATWwBeAGEALQB6
AEEALQBaAF0AARNbAF4AQQAtAFoAMAAtADkAXQABgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQBy
AHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEA
cwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABp
AG4AcwB0AGUAYQBkAC4AAHFTAEMAXwA4ADQAMABhADEAZQA1AGEAOABhAGUAMgA0AGYAMQBiADkA
ZgA0AGEAMgA1AGQAZAA3ADUAOQA4ADMAYQA0ADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAABU03KisGCNOscbzYbgNJbQACImEXc2AgMyRCLd6XFYZNOCJAwYSFAMG
EhgDIAABCSAEAQgOEhUSGQUgAQESEAQgAQ4OAwYSHQkgAwESFR0IEhkDIAAOBCABAQ4DIAACBCAB
AQIDKAAOAygAAgMGEgUFIAEBEgUDBhIhAwYSJQQAABIhBAAAEiUFAAEBEiUECAASIQQIABIlAwYS
IAQAABIgBAgAEiAEIAEBCAYgAgIOEV0FIAEdCAgEAQAAAAUgAR0FDgYgAR0FHQUEAAASdQUgAQEd
BQUAAQ4dBQUgAg4ODgkHBB0FEm0dBQ4GAAMODg4OBgACHQ4ODgcQAQEBHR4AAwoBDgUAAg4ODgUA
AgIODgsHBw4dDg4ODh0OCAMGEhUDBh0IBCABDggFIAIBCBwEIAECCAgAARKAiRGAjQUgABKAkQcg
AgEOEoCRBAcBEiEGIAEBEYCZCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTQ184NDBh
MWU1YThhZTI0ZjFiOWY0YTI1ZGQ3NTk4M2E0OAAABQEAAAAAIwEAHk1pY2hhZWwgUGFnZSBJbnRl
cm5hdGlvbmFsIFBMQwAANAEAL0NvcHlyaWdodCBAIE1pY2hhZWwgUGFnZSBJbnRlcm5hdGlvbmFs
IFBMQyAyMDE1AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAAAEYA
AAAAAAAAAAAAHkYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBGAAAAAAAAAAAAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAEwE
AAAAAAAAAAAAAEwENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQACYwUWAAABAAJjBRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASs
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAACIAwAAAQAwADAAMAAwADAANABiADAA
AABgAB8AAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAGgAYQBlAGwAIABQAGEAZwBl
ACAASQBuAHQAZQByAG4AYQB0AGkAbwBuAGEAbAAgAFAATABDAAAAAABwACQAAQBGAGkAbABlAEQA
ZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AOAA0ADAAYQAxAGUANQBhADgAYQBlADIANABm
ADEAYgA5AGYANABhADIANQBkAGQANwA1ADkAOAAzAGEANAA4AAAAQAAPAAEARgBpAGwAZQBWAGUA
cgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANgAzADcALgAyADUAMwA0ADYAAAAAAHAAKAABAEkAbgB0
AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AQwAwADgAMgBCADUAMAA0AEUANgBFAEQANAAyAEEA
QwBCADcAMwBBAEIARQBEAEMANABBADAAMABBAEMAMQAwAC4AZABsAGwAAACEADAAAQBMAGUAZwBh
AGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwBoAGEA
ZQBsACAAUABhAGcAZQAgAEkAbgB0AGUAcgBuAGEAdABpAG8AbgBhAGwAIABQAEwAQwAgADIAMAAx
ADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AQwAwADgA
MgBCADUAMAA0AEUANgBFAEQANAAyAEEAQwBCADcAMwBBAEIARQBEAEMANABBADAAMABBAEMAMQAw
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADgANAAwAGEA
MQBlADUAYQA4AGEAZQAyADQAZgAxAGIAOQBmADQAYQAyADUAZABkADcANQA5ADgAMwBhADQAOAAA
AEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA2ADMANwAuADIA
NQAzADQANgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANQA2ADMANwAuADIANQAzADQANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAAwNgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_c082b504e6ed42acb73abedc4a00ac10</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">1f03a54fb210468022a7acb4cc1ad699</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Normalise person\Normalise MP.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Normalise person\Normalise MP.Inputs[Input 0].Columns[matchname]"
                      cachedDataType="wstr"
                      cachedLength="129"
                      cachedName="matchname"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[matchname]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise MP.Inputs[Input 0].Columns[matchfirstname]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="matchfirstname"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[matchfirstname]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise MP.Inputs[Input 0].Columns[matchlastname]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="matchlastname"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[matchlastname]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise MP.Inputs[Input 0].Columns[xmatchtext01]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="xmatchtext01"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext01]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise MP.Inputs[Input 0].Columns[xmatchtext02]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="xmatchtext02"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext02]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise MP.Inputs[Input 0].Columns[xmatchtext03]"
                      cachedDataType="wstr"
                      cachedLength="192"
                      cachedName="xmatchtext03"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext03]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise MP.Inputs[Input 0].Columns[xmatchtext04]"
                      cachedDataType="wstr"
                      cachedLength="192"
                      cachedName="xmatchtext04"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext04]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise MP.Inputs[Input 0].Columns[xmatchtext05]"
                      cachedDataType="wstr"
                      cachedLength="158"
                      cachedName="xmatchtext05"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext05]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise MP.Inputs[Input 0].Columns[xmatchtext06]"
                      cachedDataType="wstr"
                      cachedLength="192"
                      cachedName="xmatchtext06"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext06]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise MP.Inputs[Input 0].Columns[xmatchtext07]"
                      cachedDataType="wstr"
                      cachedLength="94"
                      cachedName="xmatchtext07"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext07]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise MP.Inputs[Input 0].Columns[xmatchtext08]"
                      cachedDataType="wstr"
                      cachedLength="94"
                      cachedName="xmatchtext08"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext08]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise MP.Inputs[Input 0].Columns[xmatchtext09]"
                      cachedDataType="wstr"
                      cachedLength="94"
                      cachedName="xmatchtext09"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext09]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise MP.Inputs[Input 0].Columns[xmatchtext10]"
                      cachedDataType="wstr"
                      cachedLength="128"
                      cachedName="xmatchtext10"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext10]"
                      usageType="readWrite" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Normalise person\Normalise MP.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Normalise person\Normalise MP.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Normalise person\Normalise PP"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Normalise PP"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text.RegularExpressions;
using System.Security.Cryptography;
using System.Text;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    private string CreateHash(string data)
    {

        //get byte array of long data string
        var dataToHash = (new UnicodeEncoding()).GetBytes(data);

        //create hash provider and compute hash of byte array
        var sha1 = new SHA1CryptoServiceProvider();
        var hashedData = sha1.ComputeHash(dataToHash);

        RNGCryptoServiceProvider.Create().GetBytes(dataToHash);
        //convert results to hexadecimal string (SQL friendly format)
        var result = BitConverter.ToString(hashedData).Replace("-", "");

        return result;

    }
    Regex re = new Regex(@"[^A-Z0-9]");
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        string matchname = Regex.Replace(Row.matchname, @"[^a-zA-Z ]", "").ToUpper();
        string[] names = Regex.Split(matchname, @"\s+");
        Array.Sort(names);
        string tempname = "";
        foreach (string name in names) {
            tempname += name;
        }
        
        Row.matchname = tempname;
        Row.matchfirstname = Regex.Replace(Row.matchfirstname, @"[^a-zA-Z]", "").ToUpper();
        Row.matchlastname = Regex.Replace(Row.matchlastname, @"[^a-zA-Z]", "").ToUpper();

        String temp;

        if (!Row.xmatchtext01_IsNull)
        {
            temp = re.Replace(Row.xmatchtext01.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext01_IsNull = true;
            }
            else
            {
                Row.xmatchtext01 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext02_IsNull)
        {
            temp = re.Replace(Row.xmatchtext02.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext02_IsNull = true;
            }
            else
            {
                Row.xmatchtext02 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext03_IsNull)
        {
            temp = re.Replace(Row.xmatchtext03.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext03_IsNull = true;
            }
            else
            {
                Row.xmatchtext03 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext04_IsNull)
        {
            temp = re.Replace(Row.xmatchtext04.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext04_IsNull = true;
            }
            else
            {
                Row.xmatchtext04 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext05_IsNull)
        {
            temp = re.Replace(Row.xmatchtext05.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext05_IsNull = true;
            }
            else
            {
                Row.xmatchtext05 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext06_IsNull)
        {
            temp = re.Replace(Row.xmatchtext06.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext06_IsNull = true;
            }
            else
            {
                Row.xmatchtext06 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext07_IsNull)
        {
            temp = re.Replace(Row.xmatchtext07.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext07_IsNull = true;
            }
            else
            {
                Row.xmatchtext07 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext08_IsNull)
        {
            temp = re.Replace(Row.xmatchtext08.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext08_IsNull = true;
            }
            else
            {
                Row.xmatchtext08 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext09_IsNull)
        {
            temp = re.Replace(Row.xmatchtext09.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext09_IsNull = true;
            }
            else
            {
                Row.xmatchtext09 = CreateHash(temp);
            }
        }
        if (!Row.xmatchtext10_IsNull)
        {
            temp = re.Replace(Row.xmatchtext10.ToUpper(), "");
            if (temp == "")
            {
                Row.xmatchtext10_IsNull = true;
            }
            else
            {
                Row.xmatchtext10 = CreateHash(temp);
            }
        }

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String matchname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool matchname_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String matchfirstname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool matchfirstname_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String matchlastname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool matchlastname_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext01
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool xmatchtext01_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext02
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
        set
        {
            this[4] = value;
        }
    }
    public bool xmatchtext02_IsNull
    {
        get
        {
            return IsNull(4);
        }
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext03
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
        set
        {
            this[5] = value;
        }
    }
    public bool xmatchtext03_IsNull
    {
        get
        {
            return IsNull(5);
        }
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext04
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
        set
        {
            this[6] = value;
        }
    }
    public bool xmatchtext04_IsNull
    {
        get
        {
            return IsNull(6);
        }
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext05
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
        set
        {
            this[7] = value;
        }
    }
    public bool xmatchtext05_IsNull
    {
        get
        {
            return IsNull(7);
        }
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext06
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
        set
        {
            this[8] = value;
        }
    }
    public bool xmatchtext06_IsNull
    {
        get
        {
            return IsNull(8);
        }
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext07
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
        set
        {
            this[9] = value;
        }
    }
    public bool xmatchtext07_IsNull
    {
        get
        {
            return IsNull(9);
        }
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext08
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
        set
        {
            this[10] = value;
        }
    }
    public bool xmatchtext08_IsNull
    {
        get
        {
            return IsNull(10);
        }
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext09
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
        set
        {
            this[11] = value;
        }
    }
    public bool xmatchtext09_IsNull
    {
        get
        {
            return IsNull(11);
        }
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmatchtext10
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
        set
        {
            this[12] = value;
        }
    }
    public bool xmatchtext10_IsNull
    {
        get
        {
            return IsNull(12);
        }
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties.Settings.get_Default():SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties.Sett" +
    "ings")]

namespace SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_840a1e5a8ae24f1b9f4a25dd75983a48.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c32566e5-f74e-478d-aede-1a96aa83dd79}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_840a1e5a8ae24f1b9f4a25dd75983a48</RootNamespace>
    <AssemblyName>SC_840a1e5a8ae24f1b9f4a25dd75983a48</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_840a1e5a8ae24f1b9f4a25dd75983a48" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_840a1e5a8ae24f1b9f4a25dd75983a48</msb:CodeName>
		<msb:DisplayName>SC_840a1e5a8ae24f1b9f4a25dd75983a48</msb:DisplayName>
		<msb:ProjectId>{A677D965-1CA7-4B58-A534-886BA24F9791}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_840a1e5a8ae24f1b9f4a25dd75983a48.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_840a1e5a8ae24f1b9f4a25dd75983a48")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Michael Page International PLC")]
[assembly: AssemblyProduct("SC_840a1e5a8ae24f1b9f4a25dd75983a48")]
[assembly: AssemblyCopyright("Copyright @ Michael Page International PLC 2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_840a1e5a8ae24f1b9f4a25dd75983a48.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_840a1e5a8ae24f1b9f4a25dd75983a48.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAE+gdVUAAAAAAAAAAOAAAiELAQsAACgAAAAIAAAAAAAALkYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANhFAABTAAAAAGAAAKgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANCYAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAKgEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
RgAAAAAAAEgAAAACAAUAUCkAAIgcAAABAAAAAAAAAJgoAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnNBAAAGfQEAAAQCAnNCAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCgAABm8DAAAGKkorBwIDbwQAAAYDbz8AAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioAABMwAwA9AAAAAQAAEXMTAAAKA28UAAAKCnMVAAAKCwcGbxYAAAoMKBcA
AAoGbxgAAAoIKBkAAApyEQAAcHIVAABwbxoAAAoNCSoAAAATMAQAggMAAAIAABEDbwsAAAZyFwAA
cHIVAABwKBsAAApvHAAACgoGci0AAHAoHQAACgsHKAEAACtyFQAAcAwHEwUWEwYrFBEFEQaaDQgJ
KB8AAAoMEQYXWBMGEQYRBY5pMuQDCG8MAAAGAwNvDwAABnI1AABwchUAAHAoGwAACm8cAAAKbxAA
AAYDA28TAAAGcjUAAHByFQAAcCgbAAAKbxwAAApvFAAABgNvGQAABi1CAnsDAAAEA28XAAAGbxwA
AApyFQAAcG8gAAAKEwQRBHIVAABwKCEAAAosCQMXbxoAAAYrDgMCEQQoBwAABm8YAAAGA28dAAAG
LUICewMAAAQDbxsAAAZvHAAACnIVAABwbyAAAAoTBBEEchUAAHAoIQAACiwJAxdvHgAABisOAwIR
BCgHAAAGbxwAAAYDbyEAAAYtQgJ7AwAABANvHwAABm8cAAAKchUAAHBvIAAAChMEEQRyFQAAcCgh
AAAKLAkDF28iAAAGKw4DAhEEKAcAAAZvIAAABgNvJQAABi1CAnsDAAAEA28jAAAGbxwAAApyFQAA
cG8gAAAKEwQRBHIVAABwKCEAAAosCQMXbyYAAAYrDgMCEQQoBwAABm8kAAAGA28pAAAGLUICewMA
AAQDbycAAAZvHAAACnIVAABwbyAAAAoTBBEEchUAAHAoIQAACiwJAxdvKgAABisOAwIRBCgHAAAG
bygAAAYDby0AAAYtQgJ7AwAABANvKwAABm8cAAAKchUAAHBvIAAAChMEEQRyFQAAcCghAAAKLAkD
F28uAAAGKw4DAhEEKAcAAAZvLAAABgNvMQAABi1CAnsDAAAEA28vAAAGbxwAAApyFQAAcG8gAAAK
EwQRBHIVAABwKCEAAAosCQMXbzIAAAYrDgMCEQQoBwAABm8wAAAGA281AAAGLUICewMAAAQDbzMA
AAZvHAAACnIVAABwbyAAAAoTBBEEchUAAHAoIQAACiwJAxdvNgAABisOAwIRBCgHAAAGbzQAAAYD
bzkAAAYtQgJ7AwAABANvNwAABm8cAAAKchUAAHBvIAAAChMEEQRyFQAAcCghAAAKLAkDF286AAAG
Kw4DAhEEKAcAAAZvOAAABgNvPQAABi1BAnsDAAAEA287AAAGbxwAAApyFQAAcG8gAAAKEwQRBHIV
AABwKCEAAAosCAMXbz4AAAYqAwIRBCgHAAAGbzwAAAYqXgJySQAAcHMiAAAKfQMAAAQCKAEAAAYq
KgIDBAUoIwAACipSAnskAAAKAnslAAAKFpRvJgAACiomAhYDKCcAAAoqIgIWKCgAAAoqWgMsCAIW
KCkAAAoqcl0AAHBzKgAACnpSAnskAAAKAnslAAAKF5RvJgAACiomAhcDKCcAAAoqIgIXKCgAAAoq
WgMsCAIXKCkAAAoqcl0AAHBzKgAACnpSAnskAAAKAnslAAAKGJRvJgAACiomAhgDKCcAAAoqIgIY
KCgAAAoqWgMsCAIYKCkAAAoqcl0AAHBzKgAACnpSAnskAAAKAnslAAAKGZRvJgAACiomAhkDKCcA
AAoqIgIZKCgAAAoqWgMsCAIZKCkAAAoqcl0AAHBzKgAACnpSAnskAAAKAnslAAAKGpRvJgAACiom
AhoDKCcAAAoqIgIaKCgAAAoqWgMsCAIaKCkAAAoqcl0AAHBzKgAACnpSAnskAAAKAnslAAAKG5Rv
JgAACiomAhsDKCcAAAoqIgIbKCgAAAoqWgMsCAIbKCkAAAoqcl0AAHBzKgAACnpSAnskAAAKAnsl
AAAKHJRvJgAACiomAhwDKCcAAAoqIgIcKCgAAAoqWgMsCAIcKCkAAAoqcl0AAHBzKgAACnpSAnsk
AAAKAnslAAAKHZRvJgAACiomAh0DKCcAAAoqIgIdKCgAAAoqWgMsCAIdKCkAAAoqcl0AAHBzKgAA
CnpSAnskAAAKAnslAAAKHpRvJgAACiomAh4DKCcAAAoqIgIeKCgAAAoqWgMsCAIeKCkAAAoqcl0A
AHBzKgAACnpWAnskAAAKAnslAAAKHwmUbyYAAAoqKgIfCQMoJwAACiomAh8JKCgAAAoqXgMsCQIf
CSgpAAAKKnJdAABwcyoAAAp6VgJ7JAAACgJ7JQAACh8KlG8mAAAKKioCHwoDKCcAAAoqJgIfCigo
AAAKKl4DLAkCHwooKQAACipyXQAAcHMqAAAKelYCeyQAAAoCeyUAAAofC5RvJgAACioqAh8LAygn
AAAKKiYCHwsoKAAACipeAywJAh8LKCkAAAoqcl0AAHBzKgAACnpWAnskAAAKAnslAAAKHwyUbyYA
AAoqKgIfDAMoJwAACiomAh8MKCgAAAoqXgMsCQIfDCgpAAAKKnJdAABwcyoAAAp6HgIoKwAACioe
AigsAAAKKjoCKC0AAAoCA30EAAAEKjoCKC0AAAoCA30FAAAEKh4CKC0AAAoqAAATMAIALQAAAAMA
ABF+BgAABC0gcvoAAHDQBwAAAigvAAAKbzAAAApzMQAACgoGgAYAAAR+BgAABCoafgcAAAQqHgKA
BwAABCoafggAAAQqLnNIAAAGgAgAAAQqHgIoNAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAPQKAAAjfgAAYAsAAFwNAAAjU3RyaW5ncwAAAAC8GAAA
bAEAACNVUwAoGgAAEAAAACNHVUlEAAAAOBoAAFACAAAjQmxvYgAAAAAAAAACAAABVxWiAQkJAAAA
+iUzABYAAAEAAAAnAAAACAAAAAgAAABJAAAAKAAAADQAAAAPAAAAAwAAAAMAAAAdAAAAOAAAAAEA
AAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgB2Ac0ABgCF
Ac0ADgAMAu0BCgAhCBAICgBSCD0ICgAwCRYJCgBbCUkJCgByCUkJCgCPCUkJCgCuCUkJCgDHCUkJ
CgDgCUkJCgD7CUkJCgAWCkkJCgAvCkkJCgBoCkgKCgCICkgKCgDKChQBCgDRChQBBgD6Cs0ACgAt
CyELCgA9CyELCgBsC08LCgCGC08LCgCgC08LCgC9CxQBCgDpCxQBCgApDBQBCgBWDEMMCgBzDBQB
CgB4DBQBCgCcDEkJDgDIDLIMDgDhDLIMCgD2DEgKAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQAB
AAEAEABAAAAACAADAAUAAQAQAEsAAAAJAAQACgABABAAWAAAAA0ABABBAAEAEABkAAAADQAFAEIA
AAAQAG4AeAANAAYAQwAAARAApwB4ABEACABHAAYAWAATAAYAZAAXAAEAEgI0AAEAAAhcAAEAAAhc
ABEAMQhmABEAXghqABEAogiIAFAgAAAAAIYYTwEbAAEAcCAAAAAAxgCTAR8AAQCVIAAAAADGAaAB
KQAFAKggAAAAAMYBtAEpAAYAqiAAAAAAxgDLARsABwCyIAAAAADGANYBGwAHALwgAAAAAIEA4gEv
AAcACCEAAAAAxgC0ASkACACWJAAAAACGGE8BGwAJAK4kAAAAAIYYTwE4AAkAuSQAAAAAhggVAkIA
DADOJAAAAACGCCMCRgAMANgkAAAAAIYIMQJLAA0A4SQAAAAAhghGAk8ADQD4JAAAAACGCFsCQgAO
AA0lAAAAAIYIbgJGAA4AFyUAAAAAhgiBAksADwAgJQAAAACGCJsCTwAPADclAAAAAIYItQJCABAA
TCUAAAAAhgjHAkYAEABWJQAAAACGCNkCSwARAF8lAAAAAIYI8gJPABEAdiUAAAAAhggLA0IAEgCL
JQAAAACGCBwDRgASAJUlAAAAAIYILQNLABMAniUAAAAAhghFA08AEwC1JQAAAACGCF0DQgAUAMol
AAAAAIYIbgNGABQA1CUAAAAAhgh/A0sAFQDdJQAAAACGCJcDTwAVAPQlAAAAAIYIrwNCABYACSYA
AAAAhgjAA0YAFgATJgAAAACGCNEDSwAXABwmAAAAAIYI6QNPABcAMyYAAAAAhggBBEIAGABIJgAA
AACGCBIERgAYAFImAAAAAIYIIwRLABkAWyYAAAAAhgg7BE8AGQByJgAAAACGCFMEQgAaAIcmAAAA
AIYIZARGABoAkSYAAAAAhgh1BEsAGwCaJgAAAACGCI0ETwAbALEmAAAAAIYIpQRCABwAxiYAAAAA
hgi2BEYAHADQJgAAAACGCMcESwAdANkmAAAAAIYI3wRPAB0A8CYAAAAAhgj3BEIAHgAGJwAAAACG
CAgFRgAeABEnAAAAAIYIGQVLAB8AGycAAAAAhggxBU8AHwAzJwAAAACGCEkFQgAgAEknAAAAAIYI
WgVGACAAVCcAAAAAhghrBUsAIQBeJwAAAACGCIMFTwAhAHYnAAAAAIYImwVCACIAjCcAAAAAhgis
BUYAIgCXJwAAAACGCL0FSwAjAKEnAAAAAIYI1QVPACMAuScAAAAAhgjtBUIAJADPJwAAAACGCP4F
RgAkANonAAAAAIYIDwZLACUA5CcAAAAAhggnBk8AJQD8JwAAAACGAD8GSwAmAAQoAAAAAIYARwZL
ACYADCgAAAAAhhhPAWAAJgAbKAAAAACGGE8BYAAnACooAAAAAIMYTwEbACgANCgAAAAAkwhuCG4A
KABtKAAAAACTCIIIcwAoAHQoAAAAAJMIjgh4ACgAfCgAAAAAlgiyCIwAKQCPKAAAAACGGE8BGwAp
AIMoAAAAAJEYEQ1RASkAAAABAMYIAAACAM4IAAADANgIAAAEAN8IAAABANgIAAABAOkIAAABAO0I
AAABAOkIAAABANgIAAACAPIIAAADAN8IAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAAB
AAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJ
AAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAABAAYJAAAB
AAYJAAABAAYJAAABAAwJAAABAAwJAAABAAYJUQBPAUYAWQBPAUYAYQBPAUYAaQBPAUYAcQBPAUYA
eQBPAUYAgQBPAUYAiQBPAUYAkQBPAUYAmQBPAUYAoQBPAZYAqQBPARsACQBPARsAsQDiCpsACQDp
CqIAwQBPARsACQDLARsACQDWARsAyQBPARsA0QBGC60A2QBPARsA4QCUC7MA6QC2C7oA6QBGC78A
8QDKC8UAsQDTC8sAOQDTC9sAsQDbC0IAOQDjC+IA+QDvC+kAsQD0C/UAOQDTC8sAsQD7C/sAOQBP
AUYAEQBPATgAEQDYCA0BEQDyCBEBKQAHDBUBEQARDBoBEQAaDCABEQAhDJYAAQFPAUYAEQA/BksA
EQBHBksAGQBPARsACQFPARsAEQGKDCUBEQGlDC4BQQBPATQBKQFPAUEBOQFPARsAIQBPARsALgAb
AMYBLgBjAC4CLgALAFUBLgATAJ0BLgAjAMYBLgArAMwBLgAzAJ0BLgA7APABLgBDAMYBLgBbACUC
YwCDAKgA4wBzAagAAQGbAagAaQOTAUgBiQOTAUgB0QABATwBBAABAAcAGwAIAB0AAABTBlQAAABd
BlgAAABuBlQAAAB9BlgAAACTBlQAAAChBlgAAAC2BlQAAADDBlgAAADXBlQAAADkBlgAAAD4BlQA
AAAFB1gAAAAZB1QAAAAmB1gAAAA6B1QAAABHB1gAAABbB1QAAABoB1gAAAB8B1QAAACJB1gAAACd
B1QAAACqB1gAAAC+B1QAAADLB1gAAADfB1QAAADsB1gAAAAhCH4AAACaCIMAAAC+CJEAAgALAAMA
AQAMAAMAAgANAAUAAQAOAAUAAQAQAAcAAgAPAAcAAgARAAkAAQASAAkAAgATAAsAAQAUAAsAAgAV
AA0AAQAWAA0AAgAXAA8AAQAYAA8AAQAaABEAAgAZABEAAgAbABMAAQAcABMAAQAeABUAAgAdABUA
AgAfABcAAQAgABcAAgAhABkAAQAiABkAAgAjABsAAQAkABsAAQAmAB0AAgAlAB0AAQAoAB8AAgAn
AB8AAgApACEAAQAqACEAAQAsACMAAgArACMAAgAtACUAAQAuACUAAgAvACcAAQAwACcAAgAxACkA
AQAyACkAAQA0ACsAAgAzACsAAgA1AC0AAQA2AC0AAgA3AC8AAQA4AC8AAgA5ADEAAQA6ADEAAgA7
ADMAAQA8ADMAAgA9ADUAAQA+ADUAAgBEADcAAgBFADkAAQBGADkAAgBHADsABIAAAAEAAAAFFqdi
AAAAAAAApgoAAAwAAAAAAAAAAAAAAAEAsAAAAAAABAAAAAAAAAAAAAAACgALAQAAAAAEAAAAAAAA
AAAAAAAKABQBAAAAAAwAAAAAAAAAAAAAAAEAVQEAAAAAAAAAAAEAAAAYDQAAPQDxAAAAADxNb2R1
bGU+AFNDXzg0MGExZTVhOGFlMjRmMWI5ZjRhMjVkZDc1OTgzYTQ4LmRsbABVc2VyQ29tcG9uZW50
AFNjcmlwdE1haW4ASW5wdXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMA
U0NfODQwYTFlNWE4YWUyNGYxYjlmNGEyNWRkNzU5ODNhNDguUHJvcGVydGllcwBTZXR0aW5ncwBN
aWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVs
aW5lAFNjcmlwdENvbXBvbmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABT
eXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUHJl
RXhlY3V0ZQBQb3N0RXhlY3V0ZQBDcmVhdGVIYXNoAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNz
aW9ucwBSZWdleAByZQBnZXRfbWF0Y2huYW1lAHNldF9tYXRjaG5hbWUAZ2V0X21hdGNobmFtZV9J
c051bGwAc2V0X21hdGNobmFtZV9Jc051bGwAZ2V0X21hdGNoZmlyc3RuYW1lAHNldF9tYXRjaGZp
cnN0bmFtZQBnZXRfbWF0Y2hmaXJzdG5hbWVfSXNOdWxsAHNldF9tYXRjaGZpcnN0bmFtZV9Jc051
bGwAZ2V0X21hdGNobGFzdG5hbWUAc2V0X21hdGNobGFzdG5hbWUAZ2V0X21hdGNobGFzdG5hbWVf
SXNOdWxsAHNldF9tYXRjaGxhc3RuYW1lX0lzTnVsbABnZXRfeG1hdGNodGV4dDAxAHNldF94bWF0
Y2h0ZXh0MDEAZ2V0X3htYXRjaHRleHQwMV9Jc051bGwAc2V0X3htYXRjaHRleHQwMV9Jc051bGwA
Z2V0X3htYXRjaHRleHQwMgBzZXRfeG1hdGNodGV4dDAyAGdldF94bWF0Y2h0ZXh0MDJfSXNOdWxs
AHNldF94bWF0Y2h0ZXh0MDJfSXNOdWxsAGdldF94bWF0Y2h0ZXh0MDMAc2V0X3htYXRjaHRleHQw
MwBnZXRfeG1hdGNodGV4dDAzX0lzTnVsbABzZXRfeG1hdGNodGV4dDAzX0lzTnVsbABnZXRfeG1h
dGNodGV4dDA0AHNldF94bWF0Y2h0ZXh0MDQAZ2V0X3htYXRjaHRleHQwNF9Jc051bGwAc2V0X3ht
YXRjaHRleHQwNF9Jc051bGwAZ2V0X3htYXRjaHRleHQwNQBzZXRfeG1hdGNodGV4dDA1AGdldF94
bWF0Y2h0ZXh0MDVfSXNOdWxsAHNldF94bWF0Y2h0ZXh0MDVfSXNOdWxsAGdldF94bWF0Y2h0ZXh0
MDYAc2V0X3htYXRjaHRleHQwNgBnZXRfeG1hdGNodGV4dDA2X0lzTnVsbABzZXRfeG1hdGNodGV4
dDA2X0lzTnVsbABnZXRfeG1hdGNodGV4dDA3AHNldF94bWF0Y2h0ZXh0MDcAZ2V0X3htYXRjaHRl
eHQwN19Jc051bGwAc2V0X3htYXRjaHRleHQwN19Jc051bGwAZ2V0X3htYXRjaHRleHQwOABzZXRf
eG1hdGNodGV4dDA4AGdldF94bWF0Y2h0ZXh0MDhfSXNOdWxsAHNldF94bWF0Y2h0ZXh0MDhfSXNO
dWxsAGdldF94bWF0Y2h0ZXh0MDkAc2V0X3htYXRjaHRleHQwOQBnZXRfeG1hdGNodGV4dDA5X0lz
TnVsbABzZXRfeG1hdGNodGV4dDA5X0lzTnVsbABnZXRfeG1hdGNodGV4dDEwAHNldF94bWF0Y2h0
ZXh0MTAAZ2V0X3htYXRjaHRleHQxMF9Jc051bGwAc2V0X3htYXRjaHRleHQxMF9Jc051bGwATmV4
dFJvdwBFbmRPZlJvd3NldABtYXRjaG5hbWUAbWF0Y2huYW1lX0lzTnVsbABtYXRjaGZpcnN0bmFt
ZQBtYXRjaGZpcnN0bmFtZV9Jc051bGwAbWF0Y2hsYXN0bmFtZQBtYXRjaGxhc3RuYW1lX0lzTnVs
bAB4bWF0Y2h0ZXh0MDEAeG1hdGNodGV4dDAxX0lzTnVsbAB4bWF0Y2h0ZXh0MDIAeG1hdGNodGV4
dDAyX0lzTnVsbAB4bWF0Y2h0ZXh0MDMAeG1hdGNodGV4dDAzX0lzTnVsbAB4bWF0Y2h0ZXh0MDQA
eG1hdGNodGV4dDA0X0lzTnVsbAB4bWF0Y2h0ZXh0MDUAeG1hdGNodGV4dDA1X0lzTnVsbAB4bWF0
Y2h0ZXh0MDYAeG1hdGNodGV4dDA2X0lzTnVsbAB4bWF0Y2h0ZXh0MDcAeG1hdGNodGV4dDA3X0lz
TnVsbAB4bWF0Y2h0ZXh0MDgAeG1hdGNodGV4dDA4X0lzTnVsbAB4bWF0Y2h0ZXh0MDkAeG1hdGNo
dGV4dDA5X0lzTnVsbAB4bWF0Y2h0ZXh0MTAAeG1hdGNodGV4dDEwX0lzTnVsbABQYXJlbnRDb21w
b25lbnQAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X0RlZmF1bHQARGVmYXVsdABJbnB1dElEAElucHV0TmFtZQBCdWZmZXIAT3V0cHV0TWFwAFJvdwBk
YXRhAEJ1ZmZlckNvbHVtbkluZGV4ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNv
bmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmli
dXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ184NDBhMWU1YThhZTI0
ZjFiOWY0YTI1ZGQ3NTk4M2E0OABTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29s
dW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBTeXN0ZW0u
VGV4dABVbmljb2RlRW5jb2RpbmcARW5jb2RpbmcAR2V0Qnl0ZXMAU3lzdGVtLlNlY3VyaXR5LkNy
eXB0b2dyYXBoeQBTSEExQ3J5cHRvU2VydmljZVByb3ZpZGVyAEhhc2hBbGdvcml0aG0AQ29tcHV0
ZUhhc2gAUmFuZG9tTnVtYmVyR2VuZXJhdG9yAENyZWF0ZQBCaXRDb252ZXJ0ZXIAVG9TdHJpbmcA
UmVwbGFjZQBUb1VwcGVyAFNwbGl0AEFycmF5AFNvcnQAQ29uY2F0AG9wX0VxdWFsaXR5AEdldFN0
cmluZwBzZXRfSXRlbQBJc051bGwAU2V0TnVsbABJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN5
c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3Rl
bS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNDXzg0MGExZTVhOGFlMjRm
MWI5ZjRhMjVkZDc1OTgzYTQ4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAA9JAG4A
cAB1AHQAIAAwAAADLQABAQAVWwBeAGEALQB6AEEALQBaACAAXQABB1wAcwArAAATWwBeAGEALQB6
AEEALQBaAF0AARNbAF4AQQAtAFoAMAAtADkAXQABgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQBy
AHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEA
cwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABp
AG4AcwB0AGUAYQBkAC4AAHFTAEMAXwA4ADQAMABhADEAZQA1AGEAOABhAGUAMgA0AGYAMQBiADkA
ZgA0AGEAMgA1AGQAZAA3ADUAOQA4ADMAYQA0ADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAAFzckTataIZGqZlAWvgr19MACImEXc2AgMyRCLd6XFYZNOCJAwYSFAMG
EhgDIAABCSAEAQgOEhUSGQUgAQESEAQgAQ4OAwYSHQkgAwESFR0IEhkDIAAOBCABAQ4DIAACBCAB
AQIDKAAOAygAAgMGEgUFIAEBEgUDBhIhAwYSJQQAABIhBAAAEiUFAAEBEiUECAASIQQIABIlAwYS
IAQAABIgBAgAEiAEIAEBCAYgAgIOEV0FIAEdCAgEAQAAAAUgAR0FDgYgAR0FHQUEAAASdQUgAQEd
BQUAAQ4dBQUgAg4ODgkHBB0FEm0dBQ4GAAMODg4OBgACHQ4ODgcQAQEBHR4AAwoBDgUAAg4ODgUA
AgIODgsHBw4dDg4ODh0OCAMGEhUDBh0IBCABDggFIAIBCBwEIAECCAgAARKAiRGAjQUgABKAkQcg
AgEOEoCRBAcBEiEGIAEBEYCZCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTQ184NDBh
MWU1YThhZTI0ZjFiOWY0YTI1ZGQ3NTk4M2E0OAAABQEAAAAAIwEAHk1pY2hhZWwgUGFnZSBJbnRl
cm5hdGlvbmFsIFBMQwAANAEAL0NvcHlyaWdodCBAIE1pY2hhZWwgUGFnZSBJbnRlcm5hdGlvbmFs
IFBMQyAyMDE1AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAAAEYA
AAAAAAAAAAAAHkYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBGAAAAAAAAAAAAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAEwE
AAAAAAAAAAAAAEwENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQCnYgUWAAABAKdiBRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASs
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAACIAwAAAQAwADAAMAAwADAANABiADAA
AABgAB8AAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAGgAYQBlAGwAIABQAGEAZwBl
ACAASQBuAHQAZQByAG4AYQB0AGkAbwBuAGEAbAAgAFAATABDAAAAAABwACQAAQBGAGkAbABlAEQA
ZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AOAA0ADAAYQAxAGUANQBhADgAYQBlADIANABm
ADEAYgA5AGYANABhADIANQBkAGQANwA1ADkAOAAzAGEANAA4AAAAQAAPAAEARgBpAGwAZQBWAGUA
cgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANgAzADcALgAyADUAMgA1ADUAAAAAAHAAKAABAEkAbgB0
AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOAA0ADAAYQAxAGUANQBhADgAYQBlADIANABmADEA
YgA5AGYANABhADIANQBkAGQANwA1ADkAOAAzAGEANAA4AC4AZABsAGwAAACEADAAAQBMAGUAZwBh
AGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwBoAGEA
ZQBsACAAUABhAGcAZQAgAEkAbgB0AGUAcgBuAGEAdABpAG8AbgBhAGwAIABQAEwAQwAgADIAMAAx
ADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOAA0ADAA
YQAxAGUANQBhADgAYQBlADIANABmADEAYgA5AGYANABhADIANQBkAGQANwA1ADkAOAAzAGEANAA4
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADgANAAwAGEA
MQBlADUAYQA4AGEAZQAyADQAZgAxAGIAOQBmADQAYQAyADUAZABkADcANQA5ADgAMwBhADQAOAAA
AEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA2ADMANwAuADIA
NQAyADUANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANQA2ADMANwAuADIANQAyADUANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAAwNgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_840a1e5a8ae24f1b9f4a25dd75983a48</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">1f03a54fb210468022a7acb4cc1ad699</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Normalise person\Normalise PP.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Normalise person\Normalise PP.Inputs[Input 0].Columns[matchname]"
                      cachedDataType="wstr"
                      cachedLength="129"
                      cachedName="matchname"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[matchname]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise PP.Inputs[Input 0].Columns[matchfirstname]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="matchfirstname"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[matchfirstname]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise PP.Inputs[Input 0].Columns[matchlastname]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="matchlastname"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[matchlastname]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise PP.Inputs[Input 0].Columns[xmatchtext01]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="xmatchtext01"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext01]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise PP.Inputs[Input 0].Columns[xmatchtext02]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="xmatchtext02"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext02]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise PP.Inputs[Input 0].Columns[xmatchtext03]"
                      cachedDataType="wstr"
                      cachedLength="319"
                      cachedName="xmatchtext03"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext03]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise PP.Inputs[Input 0].Columns[xmatchtext04]"
                      cachedDataType="wstr"
                      cachedLength="319"
                      cachedName="xmatchtext04"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext04]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise PP.Inputs[Input 0].Columns[xmatchtext05]"
                      cachedDataType="wstr"
                      cachedLength="285"
                      cachedName="xmatchtext05"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext05]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise PP.Inputs[Input 0].Columns[xmatchtext06]"
                      cachedDataType="wstr"
                      cachedLength="319"
                      cachedName="xmatchtext06"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext06]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise PP.Inputs[Input 0].Columns[xmatchtext07]"
                      cachedDataType="wstr"
                      cachedLength="94"
                      cachedName="xmatchtext07"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext07]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise PP.Inputs[Input 0].Columns[xmatchtext08]"
                      cachedDataType="wstr"
                      cachedLength="94"
                      cachedName="xmatchtext08"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext08]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise PP.Inputs[Input 0].Columns[xmatchtext09]"
                      cachedDataType="wstr"
                      cachedLength="94"
                      cachedName="xmatchtext09"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext09]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Normalise person\Normalise PP.Inputs[Input 0].Columns[xmatchtext10]"
                      cachedDataType="wstr"
                      cachedLength="128"
                      cachedName="xmatchtext10"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext10]"
                      usageType="readWrite" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Normalise person\Normalise PP.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Normalise person\Normalise PP.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Normalise person\Resize mp"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Resize mp"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Normalise person\Resize mp.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Normalise person\Resize mp.Inputs[Derived Column Input].Columns[xmatchtext01]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="xmatchtext01"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext01]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize mp.Inputs[Derived Column Input].Columns[xmatchtext02]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="xmatchtext02"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext02]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize mp.Inputs[Derived Column Input].Columns[xmatchtext03]"
                      cachedDataType="wstr"
                      cachedLength="192"
                      cachedName="xmatchtext03"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext03]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize mp.Inputs[Derived Column Input].Columns[xmatchtext04]"
                      cachedDataType="wstr"
                      cachedLength="192"
                      cachedName="xmatchtext04"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext04]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize mp.Inputs[Derived Column Input].Columns[xmatchtext05]"
                      cachedDataType="wstr"
                      cachedLength="158"
                      cachedName="xmatchtext05"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext05]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize mp.Inputs[Derived Column Input].Columns[xmatchtext06]"
                      cachedDataType="wstr"
                      cachedLength="192"
                      cachedName="xmatchtext06"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext06]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize mp.Inputs[Derived Column Input].Columns[xmatchtext07]"
                      cachedDataType="wstr"
                      cachedLength="94"
                      cachedName="xmatchtext07"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext07]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize mp.Inputs[Derived Column Input].Columns[xmatchtext08]"
                      cachedDataType="wstr"
                      cachedLength="94"
                      cachedName="xmatchtext08"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext08]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize mp.Inputs[Derived Column Input].Columns[xmatchtext09]"
                      cachedDataType="wstr"
                      cachedLength="94"
                      cachedName="xmatchtext09"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext09]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize mp.Inputs[Derived Column Input].Columns[xmatchtext10]"
                      cachedDataType="wstr"
                      cachedLength="128"
                      cachedName="xmatchtext10"
                      lineageId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext10]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Normalise person\Resize mp.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Normalise person\Resize mp.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext01]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext01]"
                      name="matchtext01"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext01]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext01,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext02]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext02]"
                      name="matchtext02"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext02]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext02,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext03]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext03]"
                      name="matchtext03"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext03]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext03,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext04]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext04]"
                      name="matchtext04"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext04]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext04,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext05]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext05]"
                      name="matchtext05"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext05]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext05,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext06]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext06]"
                      name="matchtext06"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext06]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext06,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext07]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext07]"
                      name="matchtext07"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext07]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext07,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext08]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext08]"
                      name="matchtext08"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext08]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext08,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext09]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext09]"
                      name="matchtext09"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext09]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext09,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext10]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Output].Columns[matchtext10]"
                      name="matchtext10"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get MP.Outputs[ADO NET Source Output].Columns[xmatchtext10]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext10,40)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Normalise person\Resize mp.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Normalise person\Resize mp.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Normalise person\Resize mp.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Normalise person\Resize mp.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Resize mp.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Normalise person\Resize pp"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Resize pp"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Normalise person\Resize pp.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Normalise person\Resize pp.Inputs[Derived Column Input].Columns[xmatchtext01]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="xmatchtext01"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext01]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize pp.Inputs[Derived Column Input].Columns[xmatchtext02]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="xmatchtext02"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext02]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize pp.Inputs[Derived Column Input].Columns[xmatchtext03]"
                      cachedDataType="wstr"
                      cachedLength="319"
                      cachedName="xmatchtext03"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext03]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize pp.Inputs[Derived Column Input].Columns[xmatchtext04]"
                      cachedDataType="wstr"
                      cachedLength="319"
                      cachedName="xmatchtext04"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext04]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize pp.Inputs[Derived Column Input].Columns[xmatchtext05]"
                      cachedDataType="wstr"
                      cachedLength="285"
                      cachedName="xmatchtext05"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext05]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize pp.Inputs[Derived Column Input].Columns[xmatchtext06]"
                      cachedDataType="wstr"
                      cachedLength="319"
                      cachedName="xmatchtext06"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext06]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize pp.Inputs[Derived Column Input].Columns[xmatchtext07]"
                      cachedDataType="wstr"
                      cachedLength="94"
                      cachedName="xmatchtext07"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext07]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize pp.Inputs[Derived Column Input].Columns[xmatchtext08]"
                      cachedDataType="wstr"
                      cachedLength="94"
                      cachedName="xmatchtext08"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext08]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize pp.Inputs[Derived Column Input].Columns[xmatchtext09]"
                      cachedDataType="wstr"
                      cachedLength="94"
                      cachedName="xmatchtext09"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext09]" />
                    <inputColumn
                      refId="Package\Normalise person\Resize pp.Inputs[Derived Column Input].Columns[xmatchtext10]"
                      cachedDataType="wstr"
                      cachedLength="128"
                      cachedName="xmatchtext10"
                      lineageId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext10]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Normalise person\Resize pp.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Normalise person\Resize pp.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext01]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext01]"
                      name="matchtext01"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext01]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext01,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext02]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext02]"
                      name="matchtext02"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext02]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext02,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext03]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext03]"
                      name="matchtext03"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext03]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext03,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext04]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext04]"
                      name="matchtext04"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext04]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext04,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext05]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext05]"
                      name="matchtext05"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext05]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext05,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext06]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext06]"
                      name="matchtext06"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext06]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext06,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext07]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext07]"
                      name="matchtext07"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext07]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext07,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext08]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext08]"
                      name="matchtext08"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext08]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext08,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext09]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext09]"
                      name="matchtext09"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext09]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext09,40)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext10]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="40"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Output].Columns[matchtext10]"
                      name="matchtext10"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEFT](#{Package\Normalise person\Get PP.Outputs[ADO NET Source Output].Columns[xmatchtext10]},40)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(xmatchtext10,40)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Normalise person\Resize pp.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Normalise person\Resize pp.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Normalise person\Resize pp.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Normalise person\Resize pp.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Normalise person\Resize pp.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Normalise person.Paths[ADO NET Source Output]"
              endId="Package\Normalise person\Normalise PP.Inputs[Input 0]"
              name="ADO NET Source Output"
              startId="Package\Normalise person\Get PP.Outputs[ADO NET Source Output]" />
            <path
              refId="Package\Normalise person.Paths[ADO NET Source Output1]"
              endId="Package\Normalise person\Normalise MP.Inputs[Input 0]"
              name="ADO NET Source Output"
              startId="Package\Normalise person\Get MP.Outputs[ADO NET Source Output]" />
            <path
              refId="Package\Normalise person.Paths[Derived Column Output]"
              endId="Package\Normalise person\Load PP.Inputs[ADO NET Destination Input]"
              name="Derived Column Output"
              startId="Package\Normalise person\Resize pp.Outputs[Derived Column Output]" />
            <path
              refId="Package\Normalise person.Paths[Derived Column Output1]"
              endId="Package\Normalise person\Load MP.Inputs[ADO NET Destination Input]"
              name="Derived Column Output"
              startId="Package\Normalise person\Resize mp.Outputs[Derived Column Output]" />
            <path
              refId="Package\Normalise person.Paths[Output 0]"
              endId="Package\Normalise person\Resize pp.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\Normalise person\Normalise PP.Outputs[Output 0]" />
            <path
              refId="Package\Normalise person.Paths[Output 01]"
              endId="Package\Normalise person\Resize mp.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\Normalise person\Normalise MP.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\PP matches"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{84cb3473-96cc-437e-85a7-efeb2f2bcf64}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="PP matches"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\PP matches\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\PP matches\Aggregate.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PP matches\Aggregate.Inputs[Aggregate Input 1].Columns[pp1_person_ref]"
                      cachedDataType="i4"
                      cachedName="pp1_person_ref"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp1_person_ref]" />
                    <inputColumn
                      refId="Package\PP matches\Aggregate.Inputs[Aggregate Input 1].Columns[pp1_name]"
                      cachedDataType="wstr"
                      cachedLength="256"
                      cachedName="pp1_name"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp1_name]" />
                    <inputColumn
                      refId="Package\PP matches\Aggregate.Inputs[Aggregate Input 1].Columns[pp2_person_ref]"
                      cachedDataType="i4"
                      cachedName="pp2_person_ref"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp2_person_ref]" />
                    <inputColumn
                      refId="Package\PP matches\Aggregate.Inputs[Aggregate Input 1].Columns[pp2_name]"
                      cachedDataType="wstr"
                      cachedLength="256"
                      cachedName="pp2_name"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp2_name]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1].Columns[pp1_person_ref]"
                      dataType="i4"
                      lineageId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1].Columns[pp1_person_ref]"
                      name="pp1_person_ref">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp1_person_ref]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1].Columns[pp1_name]"
                      dataType="wstr"
                      length="256"
                      lineageId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1].Columns[pp1_name]"
                      name="pp1_name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp1_name]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1].Columns[pp2_person_ref]"
                      dataType="i4"
                      lineageId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1].Columns[pp2_person_ref]"
                      name="pp2_person_ref">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp2_person_ref]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1].Columns[pp2_name]"
                      dataType="wstr"
                      length="256"
                      lineageId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1].Columns[pp2_name]"
                      name="pp2_name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp2_name]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PP matches\Get pp duplicates"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; Â© Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="Get pp duplicates"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT * FROM (
SELECT 
  pp1.person_ref AS pp1_person_ref
  ,pp1.name AS pp1_name
  ,pp2.person_ref AS pp2_person_ref
  ,pp2.name AS pp2_name
FROM person_pp_matchdata pp1
  INNER JOIN person_pp_matchdata pp2 ON pp1.matchname = pp2.matchname
WHERE pp1.person_ref != pp2.person_ref
  AND (CASE pp1.matchtext01 WHEN pp2.matchtext01 THEN 2 ELSE 0 END
  + CASE pp1.matchtext02 WHEN pp2.matchtext02 THEN 1 ELSE 0 END
  + CASE pp1.matchtext03 WHEN pp2.matchtext03 THEN 1 ELSE 0 END
  + CASE pp1.matchtext04 WHEN pp2.matchtext04 THEN 1 ELSE 0 END
  + CASE pp1.matchtext05 WHEN pp2.matchtext05 THEN 1 ELSE 0 END
  + CASE pp1.matchtext06 WHEN pp2.matchtext06 THEN 1 ELSE 0 END
  + CASE pp1.matchtext07 WHEN pp2.matchtext07 THEN 2 ELSE 0 END
  + CASE pp1.matchtext08 WHEN pp2.matchtext08 THEN 1 ELSE 0 END
  + CASE pp1.matchtext09 WHEN pp2.matchtext09 THEN 1 ELSE 0 END
  + CASE pp1.matchtext10 WHEN pp2.matchtext10 THEN 1 ELSE 0 END &gt; 1)
UNION ALL
SELECT
  pp1.person_ref
  ,pp1.name
  ,pp2.person_ref
  ,pp2.name
FROM person_pp_matchdata pp1
  INNER JOIN person_pp_matchdata pp2 ON pp1.matchlastname = pp2.matchlastname
WHERE pp1.person_ref != pp2.person_ref
  AND pp1.matchname != pp2.matchname
  AND (CASE pp1.matchtext01 WHEN pp2.matchtext01 THEN 2 ELSE 0 END
  + CASE pp1.matchtext02 WHEN pp2.matchtext02 THEN 1 ELSE 0 END
  + CASE pp1.matchtext03 WHEN pp2.matchtext03 THEN 1 ELSE 0 END
  + CASE pp1.matchtext04 WHEN pp2.matchtext04 THEN 1 ELSE 0 END
  + CASE pp1.matchtext05 WHEN pp2.matchtext05 THEN 1 ELSE 0 END
  + CASE pp1.matchtext06 WHEN pp2.matchtext06 THEN 1 ELSE 0 END
  + CASE pp1.matchtext07 WHEN pp2.matchtext07 THEN 2 ELSE 0 END
  + CASE pp1.matchtext08 WHEN pp2.matchtext08 THEN 1 ELSE 0 END
  + CASE pp1.matchtext09 WHEN pp2.matchtext09 THEN 1 ELSE 0 END
  + CASE pp1.matchtext10 WHEN pp2.matchtext10 THEN 1 ELSE 0 END &gt; 1)
UNION ALL
SELECT 
  pp1.person_ref
  ,pp1.name
  ,pp2.person_ref
  ,pp2.name
FROM person_pp_matchdata pp1
  INNER JOIN person_pp_matchdata pp2 ON pp1.matchfirstname = pp2.matchfirstname
WHERE pp1.person_ref != pp2.person_ref
  AND pp1.matchname != pp2.matchname
  AND (CASE pp1.matchtext01 WHEN pp2.matchtext01 THEN 2 ELSE 0 END
  + CASE pp1.matchtext02 WHEN pp2.matchtext02 THEN 1 ELSE 0 END
  + CASE pp1.matchtext03 WHEN pp2.matchtext03 THEN 1 ELSE 0 END
  + CASE pp1.matchtext04 WHEN pp2.matchtext04 THEN 1 ELSE 0 END
  + CASE pp1.matchtext05 WHEN pp2.matchtext05 THEN 1 ELSE 0 END
  + CASE pp1.matchtext06 WHEN pp2.matchtext06 THEN 1 ELSE 0 END
  + CASE pp1.matchtext07 WHEN pp2.matchtext07 THEN 2 ELSE 0 END
  + CASE pp1.matchtext08 WHEN pp2.matchtext08 THEN 1 ELSE 0 END
  + CASE pp1.matchtext09 WHEN pp2.matchtext09 THEN 1 ELSE 0 END
  + CASE pp1.matchtext10 WHEN pp2.matchtext10 THEN 1 ELSE 0 END &gt; 2)
  ) a</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PP matches\Get pp duplicates.Connections[IDbConnection]"
                  connectionManagerID="{DF2B02C5-883B-4BAA-B3D9-17A96036ABE2}:external"
                  connectionManagerRefId="Project.ConnectionManagers[target]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp1_person_ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].ExternalColumns[pp1_person_ref]"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp1_person_ref]"
                      name="pp1_person_ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp1_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].ExternalColumns[pp1_name]"
                      length="256"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp1_name]"
                      name="pp1_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp2_person_ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].ExternalColumns[pp2_person_ref]"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp2_person_ref]"
                      name="pp2_person_ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp2_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].ExternalColumns[pp2_name]"
                      length="256"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].Columns[pp2_name]"
                      name="pp2_name"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].ExternalColumns[pp1_person_ref]"
                      dataType="i4"
                      name="pp1_person_ref" />
                    <externalMetadataColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].ExternalColumns[pp1_name]"
                      dataType="wstr"
                      length="256"
                      name="pp1_name" />
                    <externalMetadataColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].ExternalColumns[pp2_person_ref]"
                      dataType="i4"
                      name="pp2_person_ref" />
                    <externalMetadataColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output].ExternalColumns[pp2_name]"
                      dataType="wstr"
                      length="256"
                      name="pp2_name" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Error Output].Columns[pp1_person_ref]"
                      dataType="i4"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Error Output].Columns[pp1_person_ref]"
                      name="pp1_person_ref" />
                    <outputColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Error Output].Columns[pp1_name]"
                      dataType="wstr"
                      length="256"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Error Output].Columns[pp1_name]"
                      name="pp1_name" />
                    <outputColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Error Output].Columns[pp2_person_ref]"
                      dataType="i4"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Error Output].Columns[pp2_person_ref]"
                      name="pp2_person_ref" />
                    <outputColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Error Output].Columns[pp2_name]"
                      dataType="wstr"
                      length="256"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Error Output].Columns[pp2_name]"
                      name="pp2_name" />
                    <outputColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PP matches\Output pp duplicates"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="2057"
              name="Output pp duplicates">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\PP matches\Output pp duplicates.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[person_pp_duplicates_csv]"
                  connectionManagerRefId="Package.ConnectionManagers[person_pp_duplicates_csv]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input].Columns[pp1_person_ref]"
                      cachedDataType="i4"
                      cachedName="pp1_person_ref"
                      externalMetadataColumnId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input].ExternalColumns[pp1_person_ref]"
                      lineageId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1].Columns[pp1_person_ref]" />
                    <inputColumn
                      refId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input].Columns[pp1_name]"
                      cachedDataType="wstr"
                      cachedLength="256"
                      cachedName="pp1_name"
                      externalMetadataColumnId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input].ExternalColumns[pp1_name]"
                      lineageId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1].Columns[pp1_name]" />
                    <inputColumn
                      refId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input].Columns[pp2_person_ref]"
                      cachedDataType="i4"
                      cachedName="pp2_person_ref"
                      externalMetadataColumnId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input].ExternalColumns[pp2_person_ref]"
                      lineageId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1].Columns[pp2_person_ref]" />
                    <inputColumn
                      refId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input].Columns[pp2_name]"
                      cachedDataType="wstr"
                      cachedLength="256"
                      cachedName="pp2_name"
                      externalMetadataColumnId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input].ExternalColumns[pp2_name]"
                      lineageId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1].Columns[pp2_name]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input].ExternalColumns[pp1_person_ref]"
                      dataType="i4"
                      name="pp1_person_ref" />
                    <externalMetadataColumn
                      refId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input].ExternalColumns[pp1_name]"
                      dataType="wstr"
                      length="256"
                      name="pp1_name" />
                    <externalMetadataColumn
                      refId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input].ExternalColumns[pp2_person_ref]"
                      dataType="i4"
                      name="pp2_person_ref" />
                    <externalMetadataColumn
                      refId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input].ExternalColumns[pp2_name]"
                      dataType="wstr"
                      length="256"
                      name="pp2_name" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\PP matches.Paths[ADO NET Source Output]"
              endId="Package\PP matches\Aggregate.Inputs[Aggregate Input 1]"
              name="ADO NET Source Output"
              startId="Package\PP matches\Get pp duplicates.Outputs[ADO NET Source Output]" />
            <path
              refId="Package\PP matches.Paths[Aggregate Output 1]"
              endId="Package\PP matches\Output pp duplicates.Inputs[Flat File Destination Input]"
              name="Aggregate Output 1"
              startId="Package\PP matches\Aggregate.Outputs[Aggregate Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\PP MP matches"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{0AA29270-746A-4388-B42C-FFBF41ED7D35}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="PP MP matches"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\PP MP matches\Get X duplicates"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; Â© Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="Get X duplicates"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT * FROM (
SELECT 
  pp.person_ref AS pp_person_ref
  ,pp.name AS pp_name
  ,mp.person_ref AS mp_person_ref
  ,mp.name AS mp_name
FROM person_pp_matchdata pp
  INNER JOIN person_mp_matchdata mp ON pp.matchname = mp.matchname
WHERE (CASE pp.matchtext01 WHEN mp.matchtext01 THEN 2 ELSE 0 END
  + CASE pp.matchtext02 WHEN mp.matchtext02 THEN 1 ELSE 0 END
  + CASE pp.matchtext03 WHEN mp.matchtext03 THEN 1 ELSE 0 END
  + CASE pp.matchtext04 WHEN mp.matchtext04 THEN 1 ELSE 0 END
  + CASE pp.matchtext05 WHEN mp.matchtext05 THEN 1 ELSE 0 END
  + CASE pp.matchtext06 WHEN mp.matchtext06 THEN 1 ELSE 0 END
  + CASE pp.matchtext07 WHEN mp.matchtext07 THEN 2 ELSE 0 END
  + CASE pp.matchtext08 WHEN mp.matchtext08 THEN 1 ELSE 0 END
  + CASE pp.matchtext09 WHEN mp.matchtext09 THEN 1 ELSE 0 END
  + CASE pp.matchtext10 WHEN mp.matchtext10 THEN 1 ELSE 0 END &gt; 1)
UNION ALL
SELECT
  pp.person_ref
  ,pp.name
  ,mp.person_ref
  ,mp.name
FROM person_pp_matchdata pp
  INNER JOIN person_mp_matchdata mp ON pp.matchlastname = mp.matchlastname
WHERE pp.matchname != mp.matchname
  AND (CASE pp.matchtext01 WHEN mp.matchtext01 THEN 2 ELSE 0 END
  + CASE pp.matchtext02 WHEN mp.matchtext02 THEN 1 ELSE 0 END
  + CASE pp.matchtext03 WHEN mp.matchtext03 THEN 1 ELSE 0 END
  + CASE pp.matchtext04 WHEN mp.matchtext04 THEN 1 ELSE 0 END
  + CASE pp.matchtext05 WHEN mp.matchtext05 THEN 1 ELSE 0 END
  + CASE pp.matchtext06 WHEN mp.matchtext06 THEN 1 ELSE 0 END
  + CASE pp.matchtext07 WHEN mp.matchtext07 THEN 2 ELSE 0 END
  + CASE pp.matchtext08 WHEN mp.matchtext08 THEN 1 ELSE 0 END
  + CASE pp.matchtext09 WHEN mp.matchtext09 THEN 1 ELSE 0 END
  + CASE pp.matchtext10 WHEN mp.matchtext10 THEN 1 ELSE 0 END &gt; 1)
UNION ALL
SELECT 
  pp.person_ref
  ,pp.name
  ,mp.person_ref
  ,mp.name
FROM person_pp_matchdata pp
  INNER JOIN person_mp_matchdata mp ON pp.matchfirstname = mp.matchfirstname
WHERE pp.matchname != mp.matchname
  AND (CASE pp.matchtext01 WHEN mp.matchtext01 THEN 2 ELSE 0 END
  + CASE pp.matchtext02 WHEN mp.matchtext02 THEN 1 ELSE 0 END
  + CASE pp.matchtext03 WHEN mp.matchtext03 THEN 1 ELSE 0 END
  + CASE pp.matchtext04 WHEN mp.matchtext04 THEN 1 ELSE 0 END
  + CASE pp.matchtext05 WHEN mp.matchtext05 THEN 1 ELSE 0 END
  + CASE pp.matchtext06 WHEN mp.matchtext06 THEN 1 ELSE 0 END
  + CASE pp.matchtext07 WHEN mp.matchtext07 THEN 2 ELSE 0 END
  + CASE pp.matchtext08 WHEN mp.matchtext08 THEN 1 ELSE 0 END
  + CASE pp.matchtext09 WHEN mp.matchtext09 THEN 1 ELSE 0 END
  + CASE pp.matchtext10 WHEN mp.matchtext10 THEN 1 ELSE 0 END &gt; 2)
  ) a</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PP MP matches\Get X duplicates.Connections[IDbConnection]"
                  connectionManagerID="{DF2B02C5-883B-4BAA-B3D9-17A96036ABE2}:external"
                  connectionManagerRefId="Project.ConnectionManagers[target]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[pp_person_ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].ExternalColumns[pp_person_ref]"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[pp_person_ref]"
                      name="pp_person_ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[pp_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].ExternalColumns[pp_name]"
                      length="256"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[pp_name]"
                      name="pp_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[mp_person_ref]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].ExternalColumns[mp_person_ref]"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[mp_person_ref]"
                      name="mp_person_ref"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[mp_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].ExternalColumns[mp_name]"
                      length="256"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[mp_name]"
                      name="mp_name"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].ExternalColumns[pp_person_ref]"
                      dataType="i4"
                      name="pp_person_ref" />
                    <externalMetadataColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].ExternalColumns[pp_name]"
                      dataType="wstr"
                      length="256"
                      name="pp_name" />
                    <externalMetadataColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].ExternalColumns[mp_person_ref]"
                      dataType="i4"
                      name="mp_person_ref" />
                    <externalMetadataColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].ExternalColumns[mp_name]"
                      dataType="wstr"
                      length="256"
                      name="mp_name" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Error Output].Columns[pp_person_ref]"
                      dataType="i4"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Error Output].Columns[pp_person_ref]"
                      name="pp_person_ref" />
                    <outputColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Error Output].Columns[pp_name]"
                      dataType="wstr"
                      length="256"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Error Output].Columns[pp_name]"
                      name="pp_name" />
                    <outputColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Error Output].Columns[mp_person_ref]"
                      dataType="i4"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Error Output].Columns[mp_person_ref]"
                      name="mp_person_ref" />
                    <outputColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Error Output].Columns[mp_name]"
                      dataType="wstr"
                      length="256"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Error Output].Columns[mp_name]"
                      name="mp_name" />
                    <outputColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PP MP matches\Output X duplicates"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="2057"
              name="Output X duplicates">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\PP MP matches\Output X duplicates.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[person_x_duplicates_csv]"
                  connectionManagerRefId="Package.ConnectionManagers[person_x_duplicates_csv]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input].Columns[pp_person_ref]"
                      cachedDataType="i4"
                      cachedName="pp_person_ref"
                      externalMetadataColumnId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input].ExternalColumns[pp_person_ref]"
                      lineageId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1].Columns[pp_person_ref]" />
                    <inputColumn
                      refId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input].Columns[pp_name]"
                      cachedDataType="wstr"
                      cachedLength="256"
                      cachedName="pp_name"
                      externalMetadataColumnId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input].ExternalColumns[pp_name]"
                      lineageId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1].Columns[pp_name]" />
                    <inputColumn
                      refId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input].Columns[mp_person_ref]"
                      cachedDataType="i4"
                      cachedName="mp_person_ref"
                      externalMetadataColumnId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input].ExternalColumns[mp_person_ref]"
                      lineageId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1].Columns[mp_person_ref]" />
                    <inputColumn
                      refId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input].Columns[mp_name]"
                      cachedDataType="wstr"
                      cachedLength="256"
                      cachedName="mp_name"
                      externalMetadataColumnId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input].ExternalColumns[mp_name]"
                      lineageId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1].Columns[mp_name]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input].ExternalColumns[pp_person_ref]"
                      dataType="i4"
                      name="pp_person_ref" />
                    <externalMetadataColumn
                      refId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input].ExternalColumns[pp_name]"
                      dataType="wstr"
                      length="256"
                      name="pp_name" />
                    <externalMetadataColumn
                      refId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input].ExternalColumns[mp_person_ref]"
                      dataType="i4"
                      name="mp_person_ref" />
                    <externalMetadataColumn
                      refId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input].ExternalColumns[mp_name]"
                      dataType="wstr"
                      length="256"
                      name="mp_name" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\PP MP matches\X dedupe"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="X dedupe"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\PP MP matches\X dedupe.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PP MP matches\X dedupe.Inputs[Aggregate Input 1].Columns[pp_person_ref]"
                      cachedDataType="i4"
                      cachedName="pp_person_ref"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[pp_person_ref]" />
                    <inputColumn
                      refId="Package\PP MP matches\X dedupe.Inputs[Aggregate Input 1].Columns[pp_name]"
                      cachedDataType="wstr"
                      cachedLength="256"
                      cachedName="pp_name"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[pp_name]" />
                    <inputColumn
                      refId="Package\PP MP matches\X dedupe.Inputs[Aggregate Input 1].Columns[mp_person_ref]"
                      cachedDataType="i4"
                      cachedName="mp_person_ref"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[mp_person_ref]" />
                    <inputColumn
                      refId="Package\PP MP matches\X dedupe.Inputs[Aggregate Input 1].Columns[mp_name]"
                      cachedDataType="wstr"
                      cachedLength="256"
                      cachedName="mp_name"
                      lineageId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[mp_name]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1].Columns[pp_person_ref]"
                      dataType="i4"
                      lineageId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1].Columns[pp_person_ref]"
                      name="pp_person_ref">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[pp_person_ref]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1].Columns[pp_name]"
                      dataType="wstr"
                      length="256"
                      lineageId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1].Columns[pp_name]"
                      name="pp_name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[pp_name]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1].Columns[mp_person_ref]"
                      dataType="i4"
                      lineageId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1].Columns[mp_person_ref]"
                      name="mp_person_ref">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[mp_person_ref]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1].Columns[mp_name]"
                      dataType="wstr"
                      length="256"
                      lineageId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1].Columns[mp_name]"
                      name="mp_name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output].Columns[mp_name]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\PP MP matches.Paths[ADO NET Source Output]"
              endId="Package\PP MP matches\X dedupe.Inputs[Aggregate Input 1]"
              name="ADO NET Source Output"
              startId="Package\PP MP matches\Get X duplicates.Outputs[ADO NET Source Output]" />
            <path
              refId="Package\PP MP matches.Paths[Aggregate Output 1]"
              endId="Package\PP MP matches\Output X duplicates.Inputs[Flat File Destination Input]"
              name="Aggregate Output 1"
              startId="Package\PP MP matches\X dedupe.Outputs[Aggregate Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{220A04D7-1FDD-487E-9533-3CA033169314}"
      DTS:From="Package\Clear tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Normalise person" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{8F45114B-00EB-4687-BA34-17668909A1BC}"
      DTS:From="Package\Normalise person"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\PP MP matches" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{5C56C8EA-93EF-4413-918C-3E71F79AA02D}"
      DTS:From="Package\PP MP matches"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\PP matches" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{C8E056F8-1666-4A60-A42E-CF20114F35E3}"
      DTS:From="Package\PP matches"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\MP matches" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="136,41.6"
          Id="Package\Clear tables"
          TopLeft="88.0000014986311,42.8235300123485" />
        <NodeLayout
          Size="152,41.6"
          Id="Package\PP MP matches"
          TopLeft="108.571430420389,222.682356064212" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Normalise person"
          TopLeft="96.0000016348708,129.69411946597" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="156.000001498631,84.4235300123486">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.8000001362397,45.2705894536211"
              Start="0,0"
              End="20.8000001362397,37.7705894536211">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6352947268105" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.6352947268105"
                    Point2="0,22.6352947268105"
                    Point3="4,22.6352947268105" />
                  <mssgle:LineSegment
                    End="16.8000001362397,22.6352947268105" />
                  <mssgle:CubicBezierSegment
                    Point1="16.8000001362397,22.6352947268105"
                    Point2="20.8000001362397,22.6352947268105"
                    Point3="20.8000001362397,26.6352947268105" />
                  <mssgle:LineSegment
                    End="20.8000001362397,37.7705894536211" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="180.68571602763,171.29411946597">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51.388236598242"
              Start="0,0"
              End="0,43.888236598242">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.888236598242" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="134.4,41.6"
          Id="Package\PP matches"
          TopLeft="113.714287650828,304.094120486962" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="182.742859035609,264.282356064212">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.8117644227499"
              Start="0,0"
              End="0,32.3117644227499">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.3117644227499" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="137.6,41.6"
          Id="Package\MP matches"
          TopLeft="125.142859274027,381.223531908477" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="180.914287650828,345.694120486962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="13.0285716231988,35.5294114215151"
              Start="0,0"
              End="13.0285716231988,28.0294114215151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.7647057107575" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.7647057107575"
                    Point2="0,17.7647057107575"
                    Point3="4,17.7647057107575" />
                  <mssgle:LineSegment
                    End="9.02857162319884,17.7647057107575" />
                  <mssgle:CubicBezierSegment
                    Point1="9.02857162319884,17.7647057107575"
                    Point2="13.0285716231988,17.7647057107575"
                    Point3="13.0285716231988,21.7647057107575" />
                  <mssgle:LineSegment
                    End="13.0285716231988,28.0294114215151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\PP MP matches">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\PP MP matches\Get X duplicates"
          TopLeft="118.4,82.4" />
        <NodeLayout
          Size="172.8,41.6"
          Id="Package\PP MP matches\Output X duplicates"
          TopLeft="141.6,263.2" />
        <NodeLayout
          Size="124.8,41.6"
          Id="Package\PP MP matches\X dedupe"
          TopLeft="135.2,173.6" />
        <EdgeLayout
          Id="Package\PP MP matches.Paths[Aggregate Output 1]"
          TopLeft="197.6,215.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30.4,48"
              Start="0,0"
              End="30.4,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="4,24" />
                  <mssgle:LineSegment
                    End="26.4,24" />
                  <mssgle:CubicBezierSegment
                    Point1="26.4,24"
                    Point2="30.4,24"
                    Point3="30.4,28" />
                  <mssgle:LineSegment
                    End="30.4,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PP MP matches.Paths[ADO NET Source Output]"
          TopLeft="197.2,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.6"
              Start="0,0"
              End="0,42.1">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.1" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\PP MP matches\Get X duplicates">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Normalise person">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="120,41.6"
          Id="Package\Normalise person\Load MP"
          TopLeft="342.857148695965,292.470590912182" />
        <NodeLayout
          Size="144,41.6"
          Id="Package\Normalise person\Normalise MP"
          TopLeft="328.000005585807,142.588235868962" />
        <NodeLayout
          Size="128,41.6"
          Id="Package\Normalise person\Resize mp"
          TopLeft="341.714291533645,209.176473488197" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\Normalise person\Normalise PP"
          TopLeft="134.285716572586,137.647060753977" />
        <NodeLayout
          Size="112,41.6"
          Id="Package\Normalise person\Get PP"
          TopLeft="161.714288468264,59.3411773028259" />
        <NodeLayout
          Size="124.8,41.6"
          Id="Package\Normalise person\Resize pp"
          TopLeft="145.142859614625,213.505885347281" />
        <NodeLayout
          Size="118.4,41.6"
          Id="Package\Normalise person\Load PP"
          TopLeft="161.142859887104,300.988239515364" />
        <NodeLayout
          Size="113.6,41.6"
          Id="Package\Normalise person\Get MP"
          TopLeft="337.714291465526,59.9999994165757" />
        <EdgeLayout
          Id="Package\Normalise person.Paths[Output 01]"
          TopLeft="402.857148559726,184.188235868962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.9882376192352"
              Start="0,0"
              End="0,17.4882376192352">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.4882376192352" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Normalise person.Paths[Output 0]"
          TopLeft="206.514288093606,179.247060753977">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.2588245933036"
              Start="0,0"
              End="0,26.7588245933036">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.7588245933036" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Normalise person.Paths[Derived Column Output1]"
          TopLeft="404.285720114805,250.776473488197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.6941174239849"
              Start="0,0"
              End="0,34.1941174239849">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.1941174239849" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Normalise person.Paths[Derived Column Output]"
          TopLeft="207.542859614625,255.105885347281">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12.8000002724785,45.8823541680834"
              Start="0,0"
              End="12.8000002724785,38.3823541680834">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.9411770840417" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.9411770840417"
                    Point2="0,22.9411770840417"
                    Point3="4,22.9411770840417" />
                  <mssgle:LineSegment
                    End="8.80000027247846,22.9411770840417" />
                  <mssgle:CubicBezierSegment
                    Point1="8.80000027247846,22.9411770840417"
                    Point2="12.8000002724785,22.9411770840417"
                    Point3="12.8000002724785,26.9411770840417" />
                  <mssgle:LineSegment
                    End="12.8000002724785,38.3823541680834" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Normalise person.Paths[ADO NET Source Output1]"
          TopLeft="397.257148525666,101.599999416576">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.9882364523865"
              Start="0,0"
              End="0,33.4882364523865">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.4882364523865" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Normalise person.Paths[ADO NET Source Output]"
          TopLeft="217.714288468264,100.941177302826">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-12.2285718956773,36.7058834511516"
              Start="0,0"
              End="-12.2285718956773,29.2058834511516">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.3529417255758" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.3529417255758"
                    Point2="0,18.3529417255758"
                    Point3="-4,18.3529417255758" />
                  <mssgle:LineSegment
                    End="-8.22857189567728,18.3529417255758" />
                  <mssgle:CubicBezierSegment
                    Point1="-8.22857189567728,18.3529417255758"
                    Point2="-12.2285718956773,18.3529417255758"
                    Point3="-12.2285718956773,22.3529417255758" />
                  <mssgle:LineSegment
                    End="-12.2285718956773,29.2058834511516" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Normalise person\Load MP">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Normalise person\Get PP">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Normalise person\Load PP">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Normalise person\Get MP">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\PP matches">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="128,41.6"
          Id="Package\PP matches\Aggregate"
          TopLeft="355.2,167.2" />
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\PP matches\Output pp duplicates"
          TopLeft="353.6,262.4" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\PP matches\Get pp duplicates"
          TopLeft="346.4,82.4" />
        <EdgeLayout
          Id="Package\PP matches.Paths[Aggregate Output 1]"
          TopLeft="419.2,208.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24.0000000000001,53.6000000000001"
              Start="0,0"
              End="24.0000000000001,46.1000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.8" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.8"
                    Point2="0,26.8"
                    Point3="4,26.8" />
                  <mssgle:LineSegment
                    End="20.0000000000001,26.8" />
                  <mssgle:CubicBezierSegment
                    Point1="20.0000000000001,26.8"
                    Point2="24.0000000000001,26.8"
                    Point3="24.0000000000001,30.8" />
                  <mssgle:LineSegment
                    End="24.0000000000001,46.1000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PP matches.Paths[ADO NET Source Output]"
          TopLeft="427.2,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.00000000000006,43.2"
              Start="0,0"
              End="-8.00000000000006,35.7">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.6" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.6"
                    Point2="0,21.6"
                    Point3="-4,21.6" />
                  <mssgle:LineSegment
                    End="-4.00000000000006,21.6" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.00000000000006,21.6"
                    Point2="-8.00000000000006,21.6"
                    Point3="-8.00000000000006,25.6" />
                  <mssgle:LineSegment
                    End="-8.00000000000006,35.7" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\MP matches">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="137.6,41.6"
          Id="Package\MP matches\Aggregate 1"
          TopLeft="560,161.6" />
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\MP matches\Output mp duplicates"
          TopLeft="568.8,268.8" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\MP matches\Get mp duplicates"
          TopLeft="542.4,81.6" />
        <EdgeLayout
          Id="Package\MP matches.Paths[Aggregate Output 1]"
          TopLeft="628.8,203.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30.4000000000001,65.6"
              Start="0,0"
              End="30.4000000000001,58.1">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.8" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.8"
                    Point2="0,32.8"
                    Point3="4,32.8" />
                  <mssgle:LineSegment
                    End="26.4000000000001,32.8" />
                  <mssgle:CubicBezierSegment
                    Point1="26.4000000000001,32.8"
                    Point2="30.4000000000001,32.8"
                    Point3="30.4000000000001,36.8" />
                  <mssgle:LineSegment
                    End="30.4000000000001,58.1" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\MP matches.Paths[ADO NET Source Output]"
          TopLeft="626.8,123.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.4"
              Start="0,0"
              End="0,30.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>